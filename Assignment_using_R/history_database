1505144668773:2+2
1505144673572:3+5
1505678312810:4+5
1505678318870:4-6
1505678326453:2^2
1505678330221:2/2
1505678344031:(2+2)/4
1505678354689:(2+2)/4
1505679670838:x<-5
1505679674847:x
1505681450923:y<-6
1505681461261:z<-x+y
1505681463608:z
1505682878250:A<-(1,2,3)
1505682901843:A<-c(1,2,3)
1505682909283:A
1505682941510:A<-c(TRUE, FALSE, TRUE)
1505682945542:A
1505682956279:A<-C(TRUE, FALSE, TRUE)
1505686558314:names(A)<-c(t, f, t)
1505686646250:A<-c(1,2,3)
1505686689368:names <- c("rollno", "marks", "class")
1505686730496:names(A) <- c("rollno", "marks", "class")
1505686796858:A
1505686965530:demo()
1505744371734:(0.5-0.4)==0.1
1505744377005:4==4
1505744436164:all.equal(0.5-0.4,0.1)
1505744525294:(-10>2)&(4>2)
1505744541947:(-10>2)|(4>2)
1505745414912:age=c(10,11,12)
1505745418074:age
1505745428992:typeof(age)
1505745442266:age=c(10L,12L)
1505745444450:age
1505745451256:typeof(age)
1505745936101:age=c(71,56,71,71)
1505745984394:name=c('Donald', 'Barack', 'George', 'Bill')
1505746010321:democrat=c(F,T,F,T)
1505746084043:age=c(trump=71, obama=56, bush=71, clinton=71)
1505746086570:age
1505746206789:names(age)=NULL
1505746210549:age
1505746252046:sum(age)
1505746261982:length(age)
1505746372982:trump=list('Donald', 71, F)
1505746396152:trump
1505746530554:trump=list(name='Donald', age=71, democrat=F)
1505746534444:trump
1505746600824:names(trump)
1505746613168:names(trump)=NULL
1505746617309:trump
1505747559082:presidents=data.frame(name,age,democrat)
1505747566352:presidents
1505747844456:rownames(presidents)
1505747852004:columnnames(presidents)
1505747864903:colnames(presidents)
1505747876618:length(presidents)
1505747941569:nrow(president)
1505747949916:nrow(presidents)
1505747958306:ncol(presidetns)
1505747964226:ncol(presidents)
1505748020989:view(presidents)
1505748025990:View(presidents)
1505748358569:gender=factor(c('M','M','F','F','M','X'))
1505748368325:gender
1505748376447:levels(gender)
1505748422880:typeof(gender)
1505748433801:str(gender)
1505748669582:presidents=data.frame(name, age, democrat, gender)
1505748712254:gender=factor(c('M','F', 'M','X'))
1505748716387:presidents=data.frame(name, age, democrat, gender)
1505748729239:str(presidents)
1505749223134:lastindex=length(names)
1505749277222:length(names)
1505749288355:length(name)
1505749300630:lastindex=length(name)
1505749314376:name(2)
1505749325762:name[2]
1505749333151:name[lastindex]
1505749341558:name[lastindex-1]
1505749382178:name[lastindex, lastindex-1]
1505749407025:indices=c(4,3,2,1)
1505749413759:name[indices]
1505749482942:#exclude Donald
1505749509886:name[-1]
1505749525557:a=-c(1,2,3)
1505749531995:name[a]
1505749545887:name[-10]
1505919858143:help("mean")
1505919912180:example(sd)
1505919998816:library(foreign)
1505920102268:saldata <- read.spss("F:salarynorm.sav", use.value.labels=TRUE, max.value.labels=Inf, to.data.frame=TRUE)
1505920164918:saldata <- read.spss("F:salarynorm.sav", use.value.labels=TRUE, max.value.labels=Inf, to.data.frame=TRUE)
1505920172251:saldata <- read.spss("F:salarynorm.sav", use.value.labels=TRUE, max.value.labels=Inf, to.data.frame=TRUE)
1505920178860:library(foreign)
1505920180407:saldata <- read.spss("F:salarynorm.sav", use.value.labels=TRUE, max.value.labels=Inf, to.data.frame=TRUE)
1505920240801:library(foreign)
1505920242144:saldata <- read.spss("F:/salarynorm.sav", use.value.labels=TRUE, max.value.labels=Inf, to.data.frame=TRUE)
1505920253625:saldata <- read.spss("F:/salarynorm.sav", use.value.labels=TRUE, max.value.labels=Inf, to.data.frame=TRUE)
1505920261489:saldata <- read.spss("F:\salarynorm.sav", use.value.labels=TRUE, max.value.labels=Inf, to.data.frame=TRUE)
1505920307759:View(saldata)
1505920402456:colnames(saldata) <- tolower(colnames(saldata))
1505920420945:colnames(saldata) <- toupper(colnames(saldata))
1505920425563:colnames(saldata) <- tolower(colnames(saldata))
1505920665359:saldata$salary
1505920743343:saldata$gender
1505920882792:str(saldata$gender)
1505920982629:str(saldata)
1505921209534:summary(saldata$gender)
1505921232579:summary(saldata)
1505921407536:summary(saldata$gender)
1505921420330:summary(saldata$exper)
1505921998849:summary(saldata$salary)
1505922148570:install.packages("Rcmdr")
1505924360520:require(RcmdrMisc)
1505924420128:numSummary(saldata$salary)
1506001808965:mean(saldata$salary)
1506001840250:meansal<-mean(saldata$salary)
1506001850642:meansal
1506001910830:print(meansal, digits=1)
1506001928099:print(meansal, digits=4)
1506001940454:print(meansal, digits=7)
1506001961866:print(meansal, digits=6)
1506002010090:print(meansal, digits=8)
1506002043521:median(saldata$salary)
1506002683644:getmode<-function(v)
1506002686302:{}
1506002706892:getmode<-function(V)
1506002734048:{uniqv<-unique(v)}
1506003369598:which.max(a)
1506003399799:which.max(age)
1506003413023:which.max(gender)
1506003448787:v<-c(3,4,5)
1506003449971:v
1506003458629:which.max(v)
1506003472243:which.min(v)
1506003556741:match(v,indices)
1506006788222:ChickWeight
1506007170198:avg(checkweight)
1506007306893:sum(weight)
1506007332507:sum.chickweight(weight)
1506007403673:sum(checkweight.weight)
1506007453978:sum(chickweight$weight)
1506007469504:sum(ChickWeight$weight)
1506007483599:mean(ChickWeight$weight)
1506007564142:b<-mean(ChickWeight$weight)
1506007608287:c<-(ChickWeight$weight>b)
1506007628350:c
1506007833005:count.fields(c=TRUE)
1506007896669:View(ChickWeight)
1506007950188:?
1506007957064:ChickWeight
1506008548515:chk<-count(ChickWeight$Time==21)
1506008593850:chk=ChickWeight[,2]==21
1506008608785:chickwts[chk,]
1506008643475:chk=ChickWeight[,2]==21
1506008645420:chk=ChickWeight[,2]==21
1506008657095:chickweights[chk,]
1506008670087:ChickWeight[chk,]
1506008738866:ChickWeight$weight
1506008773891:ChickWeight[chk,1]
1506008891614:chk=ChickWeight[,2]==21
1506008898118:chk=ChickWeight[,2]==21
1506008923856:chickweights[chk,]
1506008933586:ChickWeight[chk,]
1506008952656:ChickWeight[chk,1]
1506008969048:mean(ChickWeight[chk,1])
1506009004910:avgwght=mean(ChickWeight[chk,1])
1506009010819:avgwght
1506009205363:dt1<-ChickWeight[,,,Diet==1]
1506009407222:wgtmorethanavg<-ChickWeight[1]>avgwght
1506009414670:wgtmorethanavg
1506009466674:wgt<-ChickWeight[chk,1]
1506009469017:wgt
1506009488291:heavy=wgt>avgwght
1506009491884:heavy
1506009511768:sum(heavy)
1506009922659:unique(ChickWeight$Diet)
1506009988173:match(Chickenweight$Diet, unique(ChickWeight$Diet))
1506010055073:match(ChickWeight$Diet, unique(ChickWeight$Diet))
1506010284187:tabulate(match(ChickWeight$Diet, unique(ChickWeight$Diet))
1506010307752:)
1506010476708:as.factor(ChickWeight$weight)
1506010495512:summary(as.factor(ChickWeight$weight))
1506010599073:summary(ChickWeight$weight)
1506010619390:summary(as.factor(ChickWeight$deit))
1506010628818:summary(as.factor(ChickWeight$Diet))
1506010669553:as.factor(ChickWeight$diet)
1506010689424:as.factor(ChickWeight$diet)
1506010719706:as.factor(ChickWeight$diet)
1506010762269:as.factor(ChickWeight$Diet)
1506010801941:as.data.frame(Titanic)
1506010837815:View(Titanic)
1506010853769:?Titanic
1506010973984:Surv<-(Titanic.Class=="Crew" & Titanic.Survived=="Yes")
1506010983560:Surv<-(Titanic.class=="Crew" & Titanic.Survived=="Yes")
1506011004832:Surv<-(Titanic.Class=="Crew" & Titanic.Survived=="Yes")
1506011064351:ClCr<-Titanic.Class=="Crew"
1506011091493:ClCr<-Class=="Crew"
1506011143323:Surv<-(Titanic$class=="Crew" & Titanic$Survived=="Yes")
1506011154938:Surv<-(Titanic$Class=="Crew" & Titanic$Survived=="Yes")
1506011189813:titanic<-as.data.frame(Titanic)
1506011214449:Surv<-(titanic$Class=="Crew" & titanic$Survived=="Yes")
1506011223750:Surv
1506011231063:sum(Surv)
1506011496393:fullcrew=titanic$Class=="Crew"
1506011512324:titanic[fullcrew,]
1506011577860:srvcrw=titanic$Survived=="Yes"
1506011583846:srvcrw
1506011724303:fullcrew=titanic$Class=="Crew" & titanic$Survived=="Yes"
1506011729549:fullcrew
1506011810969:titanic(fullcrew,)
1506011818430:titanic[fullcrew,]
1506011855832:sum(fullcrew$Freq)
1506011885146:titanic(fullcrew.Freq)
1506011919247:temp=fullcrew=titanic$Class=="Crew" & titanic$Survived=="Yes"
1506011987443:lucky=sum(fullcrew$Freq)
1506012015031:lucky=sum(temp$Freq)
1506012081116:temp=titanic[fullcrew,]
1506012100172:lucky=sum(temp$Freq)
1506012133898:tot=titanic$Freq
1506012141200:lucky/tot
1506012196922:tot=sum(titanic$Freq)
1506012202271:lucky/tot
1506012254941:View(iris)
1506012679175:sp=as.data.frame(iris)
1506013685227:sp1=iris$Species
1506013687536:sp1
1506013702464:sp1=iris$Species=="virginica"
1506013704798:sp1
1506013737758:iris[sp1,]
1506014118882:Ratiolen<-mean(sp1$Sepal.Length/sp1$Petal.Length)
1506014356548:yup<-iris[sp1,]
1506014356558:yup
1506014403957:Ratiolen<-mean(yup$Sepal.Length/yup$Petal.Length)
1506349702401:df=read.table('randomData.txt', sep='.', header=T, stringAsFactors=F)
1506349717916:df=read.table('randomData.txt', sep='.', header=T)
1506349723890:cd
1506349805421:library(readr)
1506349805470:randomData <- read_csv("C:/Users/Deepak/Desktop/DIT Study Material/WorkingWithData/dataFilesForClass/randomData.txt")
1506349805614:View(randomData)
1506349830765:df=read.table('randomData.txt', sep='.', header=T)
1506349920051:cwd
1506349942641:getwd(dir)
1506349950862:getwd()
1506349973277:df=read.table('randomData.txt', sep='.', header=T)
1506349978172:df=read.table('randomData.txt', sep='.', header=T)
1506349994353:df=read.table('randomData.txt', sep='.', header=T)
1506350023760:df=read.table('randomData.txt', sep='.')
1506350071702:df=read.table('randomData.txt', sep = '.', header=T, stringsAsFactors = F, fill = T)
1506350141910:df=read.table('missing.txt', sep = '.', header=T, stringsAsFactors = F, fill = T)
1506350158982:View(df)
1506350199761:df=read.table('missing.txt', sep = '.', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506350204451:view(df)
1506350209954:View(df)
1506350329562:df=read.table('missing.txt', sep = ',', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506350346640:df=read.table('missing.txt', sep = '.', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506350352268:df=read.table('missing.txt', sep = ',', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506350452481:df=read.table('missing - Copy.txt', sep = '', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506350464548:df=read.table('missing.txt', sep = ',', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506350487906:df=read.table('missing - Copy.txt', sep = '', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506350504822:df=read.table('missing.txt', sep = ',', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506350524156:df=read.table('missing.txt', sep = ',', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506350574950:?read.table
1506350851932:df=read.table('randomData.txt', sep = '.', header=T, stringsAsFactors = F, fill = T)
1506351092335:library(readr)
1506351189152:library('readr')
1506351287216:tb = read_csv('missing.txt')
1506351428920:?read_csv
1506351542468:?read_csv
1506351563814:read_csv('missing.txt', sep = ',', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506351585639:read_csv('missing.txt', sep = ',', na.strings = c('', '?', 'NA'))
1506351595114:read_csv('missing.txt', na.strings = c('', '?', 'NA'))
1506351619832:tbl = read_csv('missing.txt', na.strings = c('', '?', 'NA'))
1506351633858:tbl = read_csv('missing.txt', na = c('', '?', 'NA'))
1506352328623:tbl = read_csv('data.csv', col_types = 'i_l')
1506352342107:tbl
1506352410449:tbl = read_csv('data.csv', n_max = 2)
1506352415654:tbl
1506352587454:tbl = read_csv('data.txt', n_max = 2)
1506352658906:read_csv('data.txt', sep = ',', header=T, stringsAsFactors = F, fill = T, na.strings = c('', '?', 'NA'))
1506352821963:?readr
1506352842029:?`readr-package`
1506352900309:?read_fwf
1506353024748:read_fwf(fwf_sample, fwf_cols(name=c(1, 10), ssn=c(31, 42)))
1506353062281:fwf_sample = readr_example("fwf-sample.txt")
1506353065511:read_fwf(fwf_sample, fwf_cols(name=c(1, 10), ssn=c(31, 42)))
1506353325842:fwf_sample = readr_example("randomData.txt")
1506353340639:fwf_sample = readr("randomData.txt")
1506353553415:fwf_sample = readr("missing.txt")
1506353563016:?readr
1506353598363:fwf = readr("missing.txt")
1506353982672:library('readxl')
1506354008873:tbl = read_excel('example.xls')
1506354096420:tbl = read_excel('example.xls')
1506354110995:?read_excel
1506354411811:library('readxl')
1506354420416:tbl = read_excel('example.xls')
1506436746867:install.packages("tidyverse")
1506437497476:dput(mtcars)
1506437548077:mtcars<-structure(list(mpg = c(21, 21, 22.8, 21.4, 18.7, 18.1, 14.3,
1506437548084:24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4, 14.7, 32.4,
1506437548090:30.4, 33.9, 21.5, 15.5, 15.2, 13.3, 19.2, 27.3, 26, 30.4, 15.8,
1506437548093:19.7, 15, 21.4), cyl = c(6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8,
1506437548093:8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 8, 6, 8, 4),
1506437548093:disp = c(160, 160, 108, 258, 360, 225, 360, 146.7, 140.8,
1506437548109:167.6, 167.6, 275.8, 275.8, 275.8, 472, 460, 440, 78.7, 75.7,
1506437548109:71.1, 120.1, 318, 304, 350, 400, 79, 120.3, 95.1, 351, 145,
1506437548127:301, 121), hp = c(110, 110, 93, 110, 175, 105, 245, 62, 95,
1506437548128:123, 123, 180, 180, 180, 205, 215, 230, 66, 52, 65, 97, 150,
1506437548128:150, 245, 175, 66, 91, 113, 264, 175, 335, 109), drat = c(3.9,
1506437548144:3.9, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,
1506437548144:3.07, 3.07, 3.07, 2.93, 3, 3.23, 4.08, 4.93, 4.22, 3.7, 2.76,
1506437548144:3.15, 3.73, 3.08, 4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11
1506437548159:), wt = c(2.62, 2.875, 2.32, 3.215, 3.44, 3.46, 3.57, 3.19,
1506437548159:3.15, 3.44, 3.44, 4.07, 3.73, 3.78, 5.25, 5.424, 5.345, 2.2,
1506437548159:1.615, 1.835, 2.465, 3.52, 3.435, 3.84, 3.845, 1.935, 2.14,
1506437548175:1.513, 3.17, 2.77, 3.57, 2.78), qsec = c(16.46, 17.02, 18.61,
1506437548175:19.44, 17.02, 20.22, 15.84, 20, 22.9, 18.3, 18.9, 17.4, 17.6,
1506437548190:18, 17.98, 17.82, 17.42, 19.47, 18.52, 19.9, 20.01, 16.87,
1506437548190:17.3, 15.41, 17.05, 18.9, 16.7, 16.9, 14.5, 15.5, 14.6, 18.6
1506437548207:), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0,
1506437548212:0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1), am = c(1,
1506437548217:1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
1506437548224:0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1), gear = c(4, 4, 4, 3,
1506437548225:3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3,
1506437548225:3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1, 1, 2, 1, 4,
1506437548240:2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1,
1506437548240:2, 2, 4, 6, 8, 2)), .Names = c("mpg", "cyl", "disp", "hp",
1506437548240:"drat", "wt", "qsec", "vs", "am", "gear", "carb"), row.names = c("Mazda RX4",
1506437548256:"Mazda RX4 Wag", "Datsun 710", "Hornet 4 Drive", "Hornet Sportabout",
1506437548256:"Valiant", "Duster 360", "Merc 240D", "Merc 230", "Merc 280",
1506437548272:"Merc 280C", "Merc 450SE", "Merc 450SL", "Merc 450SLC", "Cadillac Fleetwood",
1506437548276:"Lincoln Continental", "Chrysler Imperial", "Fiat 128", "Honda Civic",
1506437548276:"Toyota Corolla", "Toyota Corona", "Dodge Challenger", "AMC Javelin",
1506437548276:"Camaro Z28", "Pontiac Firebird", "Fiat X1-9", "Porsche 914-2",
1506437548291:"Lotus Europa", "Ford Pantera L", "Ferrari Dino", "Maserati Bora",
1506437548307:"Volvo 142E"), class = "data.frame")
1506440594055:library(ggplot2)
1506440752497:?mpg
1506440798649:ggplot2::mpg
1506440816242:mpg
1506440884948:ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy))
1506442360402:library(help="base")
1506442591825:x<-1:10
1506442595569:x
1506442604492:x^3
1506442627212:x<-c(1,2,3,4,5,6,7,8,9)
1506442629474:x
1506442633787:x^2
1506442644574:x<-3:6
1506442653945:x+2
1506442663682:x-2
1506442675979:x(2)
1506442681852:x[2]
1506442694304:x[2]+4
1506444261023:length(x)
1506444278498:b<-10
1506444284279:length(b)
1506533713423:demo()
1506533938630:as.character(pi)
1506533949382:as.character(2)
1506533973132:as.double(2.5)
1506533979693:as.double(2)
1506534294912:as.double('David')
1506534400065:1+2+NA
1506534569397:is.logical(b)
1506534590393:x <- 4.2
1506534600861:is.double(x)
1506534610475:is.integer(x)
1506534853441:name <- c('Runa', 'Pooja', 'Swati', 'Shikha', 'Sakshi')
1506534863277:name
1506534875204:View(name)
1506534905328:View(name)
1506534973266:c <- c(1, 2, T, 'F')
1506534977410:c
1506535005424:typeof(c)
1506535015588:typeof(name)
1506535416740:as.logical(name)
1506535431707:typeof(name)
1506535434675:name
1506535443026:as.character(c)
1506535455812:as.integer(c)
1506535472789:as.logical(c)
1506535522817:c <- c(1, 2, T, F)
1506535526802:as.logical(c)
1506535660705:name <- c(Runa=1, Pooja=2, Swati=3, Shikha=4, Sakshi=5)
1506535677535:name
1506535705687:names(name)
1506535912943:name <- c(RUNA=1, POOJA=2, SWATI=3, SHIKHA=4, SAKSHI=5)
1506535922706:names(name)
1506535985794:length(name)
1506536141759:?list
1506537424331:runa <- list('Sarkar', '26', 'Female')
1506537426676:runa
1506539096832:runa <- list(Last.Name = Sarkar, Age = 26, Sex = Female)
1506539112788:runa <- list(LastName = 'Sarkar'', Age = 26, Sex = Female)
1506539123765:runa <- list(LastName = 'Sarkar', Age = 26, Sex = Female)
1506539130037:runa <- list(LastName = 'Sarkar', Age = 26, Sex = Female)
1506539145663:runa <- list(LastName = 'Sarkar', Age = 26, Sex = 'Female')
1506539149630:runa
1506539168101:View(runa)
1506539249960:names(runa)
1506539282580:names(runa) = NULL
1506539295241:names(runa)
1506539297487:runa
1506539305745:length(runa)
1506539342384:runa <- list(LastName = 'Sarkar', Age = 26, Sex = 'Female', )
1506539387027:runa <- list(LastName = 'Sarkar', Age = 26, Sex = 'Female',
1506539387031:friends = c('Pooja', 'Latisha', 'Swati'))
1506539400646:runa
1506539436265:length(runa)
1506539613297:presidents = data.frame(name, age, democrat)
1506539639836:presidents
1506539677253:presidents = data.frame(name, age, democrat)
1506539698599:presidents = data.frame(name, age, democrat, gender)
1506539747112:presidents$name
1506539755615:presidents$age
1506539760773:presidents$democrat
1506539882093:friends <- data.frame(name = c('Runa', 'Pooja', 'Swati'), age = c(26, 25, 24), sex = c(Fem, Mal, Fem))
1506539901130:friends <- data.frame(name = c('Runa', 'Pooja', 'Swati'), age = c(26, 25, 24), sex = c('Fem', 'Mal', 'Fem'))
1506539905220:friends
1506539912504:View(friends)
1506539963567:colnames(friends)
1506539975504:rownames(friends)
1506539985021:length(friends)
1506540094821:nrow(friends)
1506540105266:ncol(friends)
1506540120590:dim(friends)
1506540267315:level(friends)
1506540285286:levels(friends)
1506540304503:levels(friends$sex)
1506540315785:levels(friends$name)
1506540328380:levels(friends$age)
1506540388532:typeof(friends)
1506540397342:typeof(friends$name)
1506540455285:typeof(friends$age)
1506540465821:typeof(friends$sex)
1506540652475:str(friends)
1506549250553:runa[2]
1506549370816:runa[2]+1
1506549390663:v<-runa[2]
1506549393971:v+1
1506549410598:v
1506549422755:name
1506549434723:names(name)=NULL
1506549437727:name
1506549447302:name[3]
1506549455362:name[3]+1
1506549472455:name[0]
1506549485771:name[6]
1506549510393:name[1, 2]
1506549517994:name(1, 2)
1506549541175:b <- c(1, 2)
1506549547877:name(b)
1506549553972:name[b]
1506549561099:b <- c(1, 4)
1506549567977:name[b]
1506549602507:b <- c(4, 2)
1506549611428:name[b]
1506550672953:b<- -c(4, 2)
1506550678223:name[b]
1506551428002:old = friends$age > 24
1506551434614:old
1506551444743:names(old)
1506551462737:name(old)
1506551473345:name[old]
1506551486931:names[old]
1506555142720:age[2]
1506555157667:presidents
1506555178908:friends
1506555191471:View(presidents)
1506555218813:friends$age[2]
1506555228977:View(friends)
1506611455681:library(readxl)
1506611476009:tbl = read_excel('example.xls')
1506611484376:tbl
1506611612738:tbl = read_excel('example.xls', range)
1506611632457:tbl = read_excel('example.xls', range = cell_rows(1:3))
1506611639671:View(tbl)
1506611662055:tbl = read_excel('example.xls', range = 'R1C1:R3C2')
1506611768754:tbl = read_excel('example.xls', range = cell_cols('B:C'))
1506611862272:tbl = read_excel('example.xls', col_types = c('skip, 'skip', 'skip''))
1506611873674:tbl = read_excel('example.xls', col_types = c('skip, 'skip', 'logical'))
1506611882815:tbl = read_excel('example.xls', col_types = c('skip', 'skip', 'logical'))
1506612030505:excel_sheets('example.xls')
1506612093990:read_excel('example.xls', 'missing')
1506612342959:tbl = read_excel('example.xls', na = c('?', '', 'NA'))
1506612355332:tbl = read_excel('example.xls', na = c('?', '', 'NA', '?'))
1506612394916:tbl = read_excel('example.xls', 'missing', na = c('?', 'NA', '?'))
1506612403487:tbl
1506612684959:url = 'http://www.revenue.ie/en/corporate/documents/statistics/farmers/farmer-income-county.csv'
1506612713426:farmInc = read.csv(url, stringsAsFactors = FALSE)
1506612726554:farmInc
1506612779946:View(farmInc)
1506612835532:install.packages(gdata)
1506612849743:library(gdata)
1506612867162:install.packages(gdata)
1506613223421:download.file('http://cli.met.ie/cli/climate_data/webdata/dly375.zip', destfile = 'data.zip')
1506613288597:unzip('data.zip', exdir = './dly375')
1506613312703:list.files('dly375')
1506613414019:df = read.csv(('./dly375/dly375.csv', stringsAsFactors = F, skip = 24))
1506613473117:df = read.csv('./dly375/dly375.csv', stringsAsFactors = F, skip = 24)
1506613480929:df
1506613520708:View(df)
1506613790777:library(rvest)
1506613823572:library('rvest')
1506613856472:webpage = read_html('https://www.theguardian.com/football/premierleague/table')
1506613880059:webpage
1506613981992:View(webpage)
1506614089729:tblNodes = html_nodes(webpage, 'table')
1506614105203:head(tblNodes
1506614105203:)
1506614121778:head(webpage)
1506614207457:tbls = html_table(tblNodes)
1506614222963:premeagueTable = tbls [[1]]
1506614249463:View(premeagueTable)
1506614495149:tbls
1506614550272:premeagueTable = tbls [1]
1506614556262:premeagueTable
1506614603778:premeagueTable = tbls [[1]]
1506614608054:premeagueTable
1506614811925:webpage = read_html('https://markets.ft.com/data')
1506614900024:tblNodes = html_nodes(webpage, 'table')
1506614914101:head(tblNodes)
1506614953694:premeagueTable = tbls [[2]]
1506614974994:tbls = html_table(tblNodes)
1506614982320:premeagueTable = tbls [[2]]
1506615009449:View(premeagueTable)
1506615587272:tbl = read_excel('example.xls', 'missing', na = c('?', 'NA'))
1506615589071:tbl
1506615630994:tbl = read_excel('example.xls', 'missing', na = c('?', 'NA', ''))
1506615634186:tbl
1506615671805:tbl = read_excel('example.xls', 'missing', na = c('NA', ''))
1506615673851:tbl
1506615802930:View(premeagueTable)
1506616350169:premeagueTable = tbls [1]
1506616444073:write.table(premeagueTable[, -2], 'FootieData.txt', row.names = F)
1506616452898:write.table(premeagueTable[, ], 'FootieData.txt', row.names = F)
1506616488355:premeagueTable = tbls [[1]]
1506616498013:View(premeagueTable)
1506616546276:write.table(premeagueTable[ ], 'FootieData.txt', row.names = F)
1506616702255:write.table(premeagueTable[ ], 'FootieData.txt', row.names = F)
1506616723726:install.packages(xslx)
1506616783013:install.packages(xlsx)
1506617059163:jffjfjfjfjfjfjfjfjfjfjfjfjfnfnvjf  nvnvnfjjv nfnjvnfjv
1506617102354:View(tbl)
1506620502919:View(ChickWeight)
1506622207543:twenty.one.days <- ChickWeight$Time>21
1506622243785:twenty.one.days[ , Chickweight$weight]
1506622251848:twenty.one.days[ , Chickweight$weight]
1506622269834:twenty.one.days[ , ChickWeight$weight]
1506622293786:twenty.one.days
1506622392528:twenty.one.days <- ChickWeight$Time=21
1506622400320:twenty.one.days <- ChickWeight$Time=+21
1506622404473:twenty.one.days <- ChickWeight$Time==21
1506622411591:twenty.one.days
1506622536539:twentyone <- as.data.frame(twenty.one.days)
1506622542292:twentyone
1506622570495:Chkwgt <- as.data.frame(ChickWeight)
1506622576209:Chkwgt
1506622591465:View(Chkwgt)
1506622606475:twenty.one.days <- Chkwgt$Time==21
1506622651398:twentyone <- as.data.frame(twenty.one.days)
1506622657379:twentyone
1506622693306:twenty.one.days <- Chkwgt$Time==TRUE
1506622698162:twenty.one.days
1506622705788:twenty.one.days <- Chkwgt$Time==21
1506622709674:twenty.one.days
1506622726942:twentyone <- as.data.frame(twenty.one.days)
1506622810029:twentyone[ , TRUE]
1506622844419:twentyone[ , Chkwgt$Time == TRUE]
1506622855460:twentyone
1506623001246:twentyone[TRUE]
1506623284946:twenty.one.d <- Chkwgt$twenty.one.days==TRUE
1506623292260:twenty.one.d
1506623311804:View(twenty.one.d)
1506623415662:wgt = Chkwgt$weight[Chkwgt$Time==21]
1506623425495:wgt
1506623432897:mean(wgt)
1506623609371:avgwgt <- mean(wgt)
1506623628354:avgwgt
1506623664923:more.thn.avg <- Chkwgt$weight > avgwgt
1506623669676:more.thn.avg
1506623677428:more.thn.avg <- Chkwgt$weight > avgwgt
1506623737832:more.thn.avg[TRUE]
1506623852198:sum(more.thn.avg==TRUE)
1506623957993:sum(more.thn.avg==FALSE)
1506624224950:levels(Chkwgt$Diet)
1506624321284:View(Titanic)
1506624350551:Titan<-as.data.frame(Titanic)
1506624382382:View(Titan)
1506624653659:Crwsurv <- Titan$Class == 'Crew' & Titan$Survived == 'Yes'
1506624658742:Crwsurv
1506624672881:as.data.frame(Crwsurv)
1506624738494:sum.crew.surv <- sum(Crwsurv==TRUE)
1506624751919:sum.crew.surv
1506624895964:Totalcrew <- sum(Titan$Class=='Crew')
1506624903895:Totalcrew
1506625112324:sum.crew.surv [ , Titan$Freq]
1506625178431:Crwsurv <- data.frame(Titan$Class == 'Crew' & Titan$Survived == 'Yes')
1506625190175:Crwsurv
1506625242602:Crwsurv <- data.frame(Titan$Class == 'Crew')
1506625245853:Crwsurv
1506625257619:Crwsurv <- (Titan$Class == 'Crew')
1506625265238:Crwsurv
1506625274196:as.data.frame(Crwsurv)
1506625280943:View(Crwsurv)
1506625476296:View(mtcars)
1506625525603:mt.cars <- as.data.frame(mtcars)
1506625550727:View(mt.cars)
1506625616213:mean(mpg)
1506625630959:mean(mt.cars$mpg)
1506626592522:avgmps <- mean(mt.cars$mpg)
1506626659003:mt.cars[mt.cars$mpg>avgmps & mt.cars$wt>2000]
1506626681131:mt <- mt.cars[mt.cars$mpg>avgmps & mt.cars$wt>2000]
1506626685709:as.data.frame(mt)
1506626691866:View(mt)
1506626964194:?mtcars
1506627024887:manual.trans <- mt.cars[am==1]
1506627040960:manual.trans <- mt.cars[mt.cars$am==1]
1506627122295:manual.trans <- mt.cars[mt.cars$am == 1]
1506627278598:mt.cars
1506627318006:mant<-am==1
1506627335918:mant<-mt.cars$am==1
1506627358915:mt.cars(mant)
1506627370254:mt.cars[mant]
1506627409602:View(occupationalStatus)
1506627422338:?occupationalStatus
1506627463037:plot(occupationalStatus)
1506627562114:max(occupationalStatus$Freq)
1506627613270:freq <- occupationalStatus$Freq
1506627711427:occstat<- as.data.frame(occupationalStatus)
1506627743990:View(occstat)
1506627798090:maxfreq <- max(occstat$Freq)
1506627804616:maxfreq
1506627962616:ggplots::mpg
1506627973832:ggplot2::mpg
1506628005473:?ggplot2::mpg
1506628151475:View(ggplot2::mpg)
1506628312962:install.packages("lubridate")
1506628375619:lubricate::lakers
1506628404936:lubridate::lakers
1506628414009:View(lubridate::lakers)
1506628530290:lub.lake <- as.data.frame(lubridate::lakers)
1506628584754:sumx<-sum(lub.lake$x)
1506628590993:sumx
1506628610605:sumx<-sum(lub.lake$x==NA)
1506628614421:sumx
1506629347418:sumx<-sum(lub.lake$x==!NA)
1506629351794:sumx
1506629401038:install.packages("nycflights13")
1506629579166:Crwsurv
1506629587987:sum(Crwsurv)
1506686028229:getwd()
1506686038318:setwd
1506686150255:setwd(This PC/ Documents)
1506686161131:setwd(Documents)
1506686916225:setwd("~/")
1506686934243:getwd()
1506690108832:Chkwgt = as.data.frame(ChickWeight)
1506690143333:View(Chkwgt)
1506690230491:dietfact <- factor(Chkwgt$Diet)
1506690236435:dietfact
1506690247686:summary(dietfact)
1506690351821:Titan<-as.data.frame(Titanic)
1506690351831:Crwsurv <- Titan$Class == 'Crew' & Titan$Survived == 'Yes'
1506690351839:sum.crew.surv <- sum(Crwsurv==TRUE)
1506690366599:sum.crew.surv
1506690476072:Crwsurv
1506690633005:Titan[Crwsurv, ]
1506690708225:Crw.Frq <- Titan[Crwsurv, ]
1506690744476:Crw.Frq.Surv.Count <- sum(Crw.Frq)
1506690760389:Crw.Frq.Surv.Count <- sum(Crw.Frq$Freq)
1506690800098:Crw.Frq.Surv.Count
1506690828755:Crwsurv.Tot <- Titan$Class == 'Crew'
1506690858786:Crwsurv.Tot
1506690894948:Full.Crew <- Titan[Crwsurv.Tot, ]
1506690899757:Full.Crew
1506691243191:Full.Crew.Surv.Count <- sum(Full.Crew$Freq)
1506691263341:Full.Crew.Surv.Count
1506691327899:Perc.Count.Surv <- 100*Crw.Frq.Surv.Count/Full.Crew.Surv.Count)
1506691336772:Perc.Count.Surv <- 100*(Crw.Frq.Surv.Count/Full.Crew.Surv.Count)
1506691342101:Perc.Count.Surv
1506691427898:Crw.Frq
1506691464803:Fem.Crew.Surv <- Crw.Frq$Sex == 'Female'
1506691470670:Fem.Crew.Surv
1506691501853:Crw.Frq[Fem.Crew.Surv, ]
1506691581410:Fem.crew.Surv.Freq <- Crw.Frq[Fem.Crew.Surv, ]
1506691597428:sum(Fem.crew.Surv.Freq$Freq)
1506691782400:Tot.Surv <- Titan$Survived == 'Yes'
1506691810825:Total.Surv <- Titan[Tot.Surv]
1506691825467:Total.Surv <- Titan[Tot.Surv, ]
1506691829761:Total.Surv
1506691924444:max(Total.Surv$Freq)
1506691941802:Titan[max(Total.Surv$Freq), ]
1506691968480:max.surv <- max(Total.Surv$Freq)
1506692015072:Titan[, max.surv]
1506692032613:Titan[max.surv, ]
1506692073101:Titan[, Titan$Freq==max.surv]
1506692161256:Titan[Titan$Freq==max.surv, ]
1506692287851:mt.cars <- as.data.frame(mtcars)
1506692287851:avgmps <- mean(mt.cars$mpg)
1506692287866:mt <- mt.cars[mt.cars$mpg>avgmps & mt.cars$wt>2000]
1506692287866:as.data.frame(mt)
1506692433402:View(mt)
1506692514055:man.trans <- mt.cars$am == 1
1506692519009:man.trans
1506692549804:man.names <- mt.cars[man.trans, ]
1506692553008:man.names
1506692616690:View(man.names[,0])
1506692684139:mt1 <- mt.cars[mt.cars$mpg>avgmps & mt.cars$wt>2000]
1506692689677:View(mt1)
1506692938248:mt.cars[mt.cars$mpg>avgmps & mt.cars$wt>2000]
1506693170616:View[mt.cars[mt.cars$mpg>avgmps & mt.cars$wt>2000]]
1506694962676:occstat<- as.data.frame(occupationalStatus)
1506694962683:maxfreq <- max(occstat$Freq)
1506695012676:occstat[occstat$Freq == maxfreq,]
1506695099391:occstat$origin[occstat$Freq == maxfreq,]
1506695137500:occstat$origin[occstat$Freq == maxfreq]
1506695248578:View(ggplot2::mpg)
1506695283258:?ggplot2::mpg
1506695301114:str(ggplot2::mpg)
1506695418634:ggpl <- as.data.frame(ggplot2::mpg)
1506695535837:ggpl.2008 <- ggpl$year == 2008
1506695594145:ggpl1.2008 <- ggpl[ggpl.2008, ]
1506695609721:ggpl1.2008
1506695714289:ggpl.1999 <- ggpl$year == 1999
1506695714292:ggpl1.1999 <- ggpl[ggpl.1999, ]
1506696735968:avg.2008 <- mean(ggpl.2008$displ)
1506696779568:avg.2008 <- mean(ggpl1.2008$displ)
1506696814007:avg.1999 <- mean(ggpl1.1999$displ)
1506696834196:avg.1999
1506696842780:avg.2008
1506696876399:?diff
1506696954549:diff.displ <- avg.2008 - avg.1999
1506696959290:diff.displ
1506698977063:iris.df <- as.data.frame(iris)
1506699516006:iris.df
1506699524191:View(iris.df)
1506699825647:filter1 <- iris.df$Species == "virginica"
1506699872759:virdata <- iris.df[filter1, ]
1506699875535:virdta
1506699878574:virdata
1506700049572:ratio <- virdata$Sepal.Length / virdata$Petal.Length
1506700052132:ration
1506700056566:ratio
1506700088540:avg.ratio <- mean(ratio)
1506700094791:avg.ratio
1506700266537:lbl_lake <- as.data.frame(lubridate::lakers)
1506700349557:lbl_lake
1506700355842:View(lbl_lake)
1506700452584:tot_x <- nrow(lbl_lake$x)
1506700460176:tot_x
1506700503616:tot_x <- nrow(lbl_lake)
1506700610195:tot_NA_x <- sum(is.na(lbl_lake$x))
1506700642431:tot_NA_x
1506700691269:perc_NA_x <- 100*(tot_NA_x/tot_x)
1506700696178:perc_NA_x
1506700755600:tot_NA_y <- sum(is.na(lbl_lake$y))
1506700755615:perc_NA_y <- 100*(tot_NA_x/tot_y)
1506700769131:tot_NA_y <- sum(is.na(lbl_lake$y))
1506700769139:perc_NA_y <- 100*(tot_NA_x/tot_x)
1506700777853:perc_NA_y
1506700899818:tot_NA_both <- tot_NA_x + tot_NA_y
1506700917043:tot_NA_both
1506700966382:perc_NA_both <- 100*(tot_NA_both / (2*tot_x))
1506700972165:perc_NA_both
1506701054448:install.packages(nycflights13::flights)
1506701078510:install.packages(nycflights13)
1506710208321:install.packages('nycflights13')
1506710328651:library("nycflights13", lib.loc="~/R/win-library/3.4")
1506710367691:View(nycflights13::flights)
1506953221800:View(nycflights13::flights)
1506953225001:nycdf1<- as.data.frame(nycflights13::flights)
1506953225001:View(nycdf1)
1506953225119:mnth<-unique(nycdf1$month)
1506953225146:for(i in 1: length(mnth)){
1506953225153:arvvalues<-nycdf1$arr_delay[nycdf1$month==i]
1506953225159:depvalues<-nycdf1$dep_delay[nycdf1$month==i]
1506953225180:depMean<-mean(depvalues,na.rm = TRUE)
1506953225186:arvMean<-mean(arvvalues,na.rm = TRUE)
1506953225191:arvMax<-max(arvvalues,na.rm = TRUE)
1506953225198:arvMin<-min(arvvalues,na.rm = TRUE)
1506953225203:cat("Month",i," AvgArvDelay ",arvMean," AvgDepDelay ",depMean," MaxDelay ",arvMax," MinDelay ",arvMin,"\n")
1506953225209:}
1506953225432:View(nycflights13::flights)
1506953240488:nycdf1<- as.data.frame(nycflights13::flights)
1506953240494:View(nycdf1)
1506953240553:mnth<-unique(nycdf1$month)
1506953240568:for(i in 1: length(mnth)){
1506953240584:arvvalues<-nycdf1$arr_delay[nycdf1$month==i]
1506953240584:depvalues<-nycdf1$dep_delay[nycdf1$month==i]
1506953240584:depMean<-mean(depvalues,na.rm = TRUE)
1506953240600:arvMean<-mean(arvvalues,na.rm = TRUE)
1506953240600:arvMax<-max(arvvalues,na.rm = TRUE)
1506953240615:arvMin<-min(arvvalues,na.rm = TRUE)
1506953240615:cat("Month",i," AvgArvDelay ",arvMean," AvgDepDelay ",depMean," MaxDelay ",arvMax," MinDelay ",arvMin,"\n")
1506953240631:}
1506953601165:install.packages(r2excel)
1506953714387:url = 'http://archive.ics.uci.edu/ml/machine-learing-databases/00222/bank.zip'
1506953752634:download.file(url, destfile = 'bank.zip')
1506953872791:url = 'http://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank.zip'
1506953879304:download.file(url, destfile = 'bank.zip')
1506953977260:unzip('bank.zip', list = T)
1506954379443:df = read.csv('bank-full.csv', stringsAsFactors = F)
1506954393473:library(readr)
1506954397726:df = read.csv('bank-full.csv', stringsAsFactors = F)
1506954435196:df = read.csv('bank-full.csv', stringsAsFactors = F)
1506954481189:View(read.csv)
1506954886072:bankData = read_delim('./bankData/bank-full.csv', delim = ';', na = c('unknown'))
1506954925728:bankData = read_delim('./bankData/bank-full.csv', delim = ';', na = c('unknown'))
1506954939272:bankData = read_delim('./bankData/bank-full.csv', delim = ';', na = c('unknown'))
1506954995657:View(bankData)
1506955194289:tail(bankData)
1506955211460:nrow(bankData)
1506955221196:ncol(bankData)
1506955382620:bankData[[2]] = as.factor(bankData[[2]])
1506955430133:bankData[[3]] = as.factor(bankData[[3]])
1506955471567:na_num <- bankData
1506955549537:na_num <- sum(is.na(bankData$education))
1506955554268:na_num
1506955598502:tot_row <- nrow(bankData)
1506955631334:perc_tot <- 100 * (na_num/tot_row)
1506955635163:perc_tot
1506955749917:round(perc_tot, 2)
1506955821345:allmissing <- is.na(bankData)
1506955826976:allmissing
1506955841148:count <- sum(allmissing)
1506955843019:count
1506955860315:count[count>0]
1506955878427:count[counts>0]
1506955887724:counts[count>0]
1506955896068:count[count>0]
1506955925948:count1 <- sum(allmissing)
1506955952317:count1 <- colSums(allmissing)
1506955955472:count1
1506955968785:count[count1 > 0]
1506955986535:count1[count1 > 0]
1506956217096:mean(age)
1506956243734:mean(bankData$age)
1506956262631:mean(bankData$duration)
1506956290789:mean(bankData$pdays)
1506956448660:age
1506956957628:fix1 <- bankData
1506957004018:target.indices <- (fix1$pdays == -1)
1506957036495:fix1$pdays[target.indices = NA]
1506957115385:fix2 <- bankData
1506957143784:target.indices <- (fix2$pdays == -1)
1506957158002:fix2$pdays[target.indices] = NA
1506957169968:fix2$pdays
1506957237914:mean(fix2$pdays, na.rm = T)
1506957297476:Avgmean <- mean(fix2$pdays, na.rm = T)
1506957309791:round(Avgmean)
1506957449350:nrow(na.omit(bankData))
1507052535527:getwd
1507052544855:getwd()
1507119292936:?hist
1507119362569:example("hist")
1507119882362:regrdata <- read.spss('regression.por')
1507119912219:library(foreign)
1507119914735:regrdata <- read.spss('regression.por')
1507119981366:regrdata <- read.spss('regression.por')
1507119996724:View(regression)
1507120003094:View(regression.por)
1507120014345:View('regression')
1507120023323:View('regression.por')
1507121269877:View('regression.por')
1507121352474:View(regrdata)
1507128771584:sum.norm <- summary(regrdata$NORMEXAM)
1507128776207:sum.norm
1507128802241:sum.stand <- summary(regrdata$STANDLRT)
1507128806458:sum.stand
1507128840581:hist(regrdata)
1507128857986:hist(regrdata$NORMEXAM)
1507129312459:library(plyr)
1507129555929:count(regrdata$GIRL)
1507129586070:str(regrdata$GIRL)
1507129597720:levels(regrdata$GIRL)
1507129654565:count(regrdata$SCHGEND)
1507129677271:levels(regrdata$SCHGEND)
1507129792550:tab <- table(regrdata$GIRL, regrdata$SCHGEND)
1507129794682:tab
1507129826166:count(tab)
1507129889931:addmargins(tab)
1507133112486:summary(regrdata)
1507133125143:str(regrdata)
1507133190252:is.data.frame(regrdata)
1507133236179:df.regrdata <- as.data.frame(regrdata)
1507133275596:summary(df.regrdata)
1507133381555:tab <- table(regrdata$GIRL, regrdata$SCHGEND)
1507133381586:addmargins(tab)
1507216846707:library(ggplot2)
1507216855479:?mpg
1507216864879:View(mpg)
1507217143147:qplot(x = displ, y = hwy, data = mog)
1507217159699:qplot(x = displ, y = hwy, data = mpg)
1507217539802:qplot(x = displ, y = hwy, data = mpg, color = class)
1507217930270:qplot(x = displ, y = hwy, data = mpg, color = I('yellow'))
1507217945337:qplot(x = displ, y = hwy, data = mpg, color = I('red'))
1507217989876:qplot(x = displ, y = hwy, data = mpg, size = I(0.25))
1507218000492:qplot(x = displ, y = hwy, data = mpg, size = I(0.75))
1507218016646:qplot(x = displ, y = hwy, data = mpg, alpha = I(0.1))
1507218033181:qplot(x = displ, y = hwy, data = mpg, shape = I(4))
1507218251703:qplot(x = displ, y = hwy, data = mpg) + facet_grid(drv ~ .)
1507218286192:qplot(x = displ, y = hwy, data = mpg, color = drv) + facet_grid(drv ~ .)
1507218408363:qplot(x = displ, y = hwy, data = mpg, color = drv) + facet_grid(~ . drv)
1507218421969:qplot(x = displ, y = hwy, data = mpg, color = drv) + facet_grid(drv ~ drv)
1507218434661:qplot(x = displ, y = hwy, data = mpg, color = drv) + facet_grid(. ~ drv)
1507218460752:qplot(x = displ, y = hwy, data = mpg, color = drv) + facet_grid(drv ~ cyl)
1507218518931:qplot(x = displ, y = hwy, data = mpg, color = drv) + facet_wrap( ~ class)
1507218526556:qplot(x = displ, y = hwy, data = mpg, color = drv) + facet_grid(drv ~ cyl)
1507218536552:qplot(x = displ, y = hwy, data = mpg, color = drv) + facet_wrap( ~ class)
1507218786078:qplot(x = displ, y = hwy, data = mpg, geom = 'point')
1507218809011:qplot(x = displ, y = hwy, data = mpg, geom = 'hist')
1507218813376:qplot(x = displ, y = hwy, data = mpg, geom = 'histogram')
1507218818462:qplot(x = displ, y = hwy, data = mpg, geom = 'point')
1507218839789:qplot(x = displ, y = hwy, data = mpg, geom = 'smooth')
1507219011133:qplot(x = displ, y = hwy, data = mpg, geom = c('point', smooth'))
1507219028841:)
1507219035393:qplot(x = displ, y = hwy, data = mpg, geom = c('point', 'smooth'))
1507219038456:qplot(x = displ, y = hwy, data = mpg, geom = c('point', 'smooth')
1507219045304:qplot(x = displ, y = hwy, data = mpg, geom = c('point', 'smooth'))
1507219055429:qplot(x = displ, y = hwy, data = mpg, geom = c('point', 'smooth'))
1507219780693:qplot(x = displ, y = hwy, data = mpg, geom = c('point', 'scatter'))
1507219880271:?geom
1507219896476:qplot(x = displ, y = hwy, data = mpg)
1507220082588:qplot(x = class, y = hwy, data = mpg, geom = 'point')
1507220325991:qplot(x = class, y = hwy, data = mpg, geom = 'boxplot')
1507220873704:qplot(reorder (class,hwy), hwy, data = mpg, geom = 'boxplot')
1507221038615:qplot(reorder (class, hwy, FUN = median), hwy, data = mpg, geom = 'boxplot')
1507221073897:qplot(reorder (hwy, FUN = median), hwy, data = mpg, geom = 'boxplot')
1507221085741:qplot(reorder (hwy), hwy, data = mpg, geom = 'boxplot')
1507221095112:qplot(reorder (class, hwy), hwy, data = mpg, geom = 'boxplot')
1507221120803:qplot(class, hwy, data = mpg, geom = 'boxplot')
1507221175160:qplot(reorder (class, hwy), hwy, data = mpg, geom = 'boxplot', xlab = 'class')
1507221301645:qplot(x, z, data = diamonds)
1507221315006:qplot(x, data = diamonds)
1507221335189:qplot(cut, data = diamonds)
1507221353306:qplot(x, data = diamonds)
1507221362628:qplot(x, z, data = diamonds)
1507221374974:qplot(cut, data = diamonds)
1507221495784:qplot(cut, data = diamonds, color = cut)
1507221524382:qplot(cut, data = diamonds, fill = cut)
1507221657380:qplot(x, data = diamonds)
1507221820505:qplot(carat, data = diamonds)
1507221882059:qplot(carat, data = diamonds, binwidth = 1)
1507221955205:qplot(carat, data = diamonds, binwidth = 0.1)
1507221975219:qplot(carat, data = diamonds, binwidth = 0.01)
1507222051035:qplot(carat, data = diamonds, binwidth = 0.1)
1507222057723:qplot(carat, data = diamonds, binwidth = 0.01)
1507222204440:ggsave('mygraph.pdf')
1507222267410:ggsave('mygraph.pdf', width = 6, height = 6)
1507558503122:birthdata <- read.csv('births.csv', stingAsFactors = FALSE)
1507558554536:cd
1507558558308:getwd()
1507558620828:library(readr)
1507558625076:birthdata <- read.csv('births.csv', stingAsFactors = FALSE)
1507558670791:birthdata <- read.table('births.csv', stingAsFactors = FALSE)
1507558784285:birthdata <- read_csv('births.csv', stingAsFactors = FALSE)
1507558793579:df <- read_csv('births.csv', stingAsFactors = FALSE)
1507558827783:df <- read_csv('births.csv')
1507558848697:View(births.csv)
1507558856747:View(df)
1507558950934:df <- read_csv('bnames.csv.bz2')
1507558976533:unzip(bnames.csv.bz2)
1507559004736:unzip(bnames.csv.bz2, list = T)
1507559089401:library(ggplot2)
1507559252906:qplot(x = year, data = df)
1507559376290:qplot(x = prop, data = df)
1507559471087:dt <- subset(df)
1507559476782:View(dt)
1507559499730:dt(name = 'David')
1507559560287:targetindices = dt$name == 'David'
1507559582633:myName = dt[targetindices, ]
1507559611275:qplot(year, prop, data = myName, geom = 'line')
1507559851470:temp = myName[order((myName$year), ]
1507559875952:temp = myName[order((myName$year), ]
1507559883090:temp = myName[order(myName$year), ]
1507559890354:head(temp)
1507560015120:qplot(year, prop, data = myName, geom = 'line', color = year)
1507560040787:qplot(year, prop, data = myName, geom = 'line', color = prop)
1507560059939:qplot(year, prop, data = myName, geom = 'line', color = prop, color = year)
1507560083200:qplot(year, prop, data = myName, geom = 'line', color = sex)
1507560427320:library(dplyr)
1507560665833:color = c('blue', 'black', 'blue', 'blue', 'black')
1507560675225:value = 1:5
1507560700107:df = data.frame(color, value)
1507560719371:filter(df, color == 'blue')
1507560844324:filter(df, value %n% c(1, 4))
1507560863577:filter(df, value %in% c(1, 4))
1507560990364:filter(myName, year == 2000)
1507561130200:filter(bnames, sex=='boy' & year == '2000')
1507561144231:filter(babbynames, sex=='boy' & year == '2000')
1507561148289:filter(babynames, sex=='boy' & year == '2000')
1507561159956:filter(dt, sex=='boy' & year == '2000')
1507561768964:select(df, color)
1507561814080:select(df, -color)
1507561865280:select(dt, year)
1507561876190:select(dt, year, name, sex)
1507561966764:select(dt, -c(prop, soundex))
1507562104425:arrange(df, color)
1507562131868:arrange(df, value)
1507562137453:arrange(df, -value)
1507562210450:desc(df, value)
1507562226277:descd(df, value)
1507562230397:desce(df, value)
1507562265228:arrange(df, desc(value))
1507562357469:arrange(df, color, desc(value))
1507562412824:arrange(dt, prop)
1507562457702:arrange(dt, desc(prop))
1507562614534:ft <- filter(dt, name=='David')
1507562619972:ft
1507562631358:arrange(dt, desc(ft))
1507562660581:arrange(dt, dt(prop))
1507562675390:arrange(dt, desc(prop))
1507562710703:temp = filter(myName, sex == 'boy')
1507562740768:arrange(temp, prop)
1507562919798:mutate(df, twice = 2 * value, quadruple = 2 *twice)
1507562984334:mutate(df, steps = cumsum(value))
1507563091123:mutate(df, twice = NULL)
1507563258983:summarise(df)
1507563264171:summarise(dt)
1507563278831:summary(dt)
1507563345138:summarise(df, total = sum(value))
1507563406388:summarise(df, total = sum(value), avg = mean(value))
1507563574978:mutate(df, perc = 100 * prop)
1507563587856:mutate(dt, perc = 100 * prop)
1507563657148:summary(ft)
1507563838501:summarise(ft, min(prop), max(prop))
1507654375853:getwd(0)
1507654378637:getwd()
1507742273515:library(readr)
1507742273846:df = read_csv('isoc_ec_ibuy.tsv.gz', stringsAsFactors = FALSE)
1507742291871:library(readr)
1507742291871:df = read_csv('isoc_ec_ibuy.tsv.gz')
1507742307564:library(readr)
1507742307571:tbl = read_csv('isoc_ec_ibuy.tsv.gz')
1507742343612:library(readr)
1507742343613:tbl = read_csv('isoc_ec_ibuy.tsv.gz')
1507742344711:View(tbl)
1507742424440:library(readr)
1507742424447:tbl = read.table('isoc_ec_ibuy.tsv.gz')
1507742429239:View(tbl)
1507742790145:library(readr)
1507742790157:tbl = read.table('isoc_ec_ibuy.tsv.gz', na = c(':', 'NA'))
1507742793998:View(tbl)
1507743031903:library(readr)
1507743031906:tbl = read.table('isoc_ec_ibuy.tsv.gz', na = c(':', 'NA'))
1507743036063:View(tbl)
1507743036142:Thsnd_rows <- cell_rows(1:1000)
1507743267174:library(readr)
1507743267181:tbl = read.table('isoc_ec_ibuy.tsv.gz', na = c(':', 'NA'))
1507743271028:View(tbl)
1507743271122:tbl[1:1000, ]
1507743911725:library(readr)
1507743911729:tbl = read.table('isoc_ec_ibuy.tsv.gz', na = c(':', 'NA'))
1507743915327:View(tbl)
1507743915425:thsnd_rows <- tbl[1:1000, ]
1507743915425:write.table(thsnd_rows, ' EUData.csv', row.names = F, quote = F)
1507743970344:write.table(thsnd_rows, 'EUData.csv', row.names = F, quote = F)
1507744025927:tbl = read.table('isoc_ec_ibuy.tsv.gz', na = c(':', 'NA'))
1507744029336:View(tbl)
1507744029433:thsnd_rows <- tbl[1:1000, ]
1507744029434:write.table(thsnd_rows, 'EUData.csv', row.names = F, quote = F)
1507744029500:tbl1 = read.table('EUData.csv')
1507744048336:library(readr)
1507744048350:tbl = read.table('isoc_ec_ibuy.tsv.gz', na = c(':', 'NA'))
1507744052042:View(tbl)
1507744052129:thsnd_rows <- tbl[1:1000, ]
1507744052129:write.table(thsnd_rows, 'EUData.csv', row.names = F, quote = F)
1507744052211:tbl1 = read.table('EUData.csv')
1507744052226:View(tbl1)
1507744293956:rm(tbl1)
1507744989689:download.file('https://github.com/openknowledgeireland/DataStore/raw/master/OP%20Waiting%20List%20By%20Group%20Hospital%202017.csv', destfile = 'HospitalData.csv')
1507744995559:df = read.table('HospitalData.csv', row.names = F, quote = F)
1507745063208:df = read.table('HospitalData.csv', row.names = F)
1507745096854:df = read.csv('HospitalData.csv', row.names = F)
1507745111647:df = read.csv('HospitalData.csv')
1507745132471:View(df)
1507745585114:write.table(df, 'df1.txt', sep = '\t', row.names = F, quote = F)
1507745684059:View(df)
1507745898226:grp_filter <- df[df$Group == 'University of Limerick Hospital Group', ]
1507745912763:View(grp_filter)
1507745941798:write.table(grp_filter, 'df1.txt', sep = '\t', row.names = F, quote = F)
1507746075349:imp_df <- read.csv('df1.txt')
1507746142651:rm(imp_df)
1507747383906:unzip('fbData.zip')
1507747412057:download.file('https://archive.ics.uci.edu/ml/machine-learning-databases/00368/Facebook_metrics.zip', destfile = 'fbData.zip')
1507747420188:unzip('fbData.zip')
1507747468282:unzip('fbData.zip', exdir = 'fbData.csv')
1507747636020:df_fb <- read.csv('fbData.csv')
1507747636071:write.csv(df_fb, 'df1_fb.rds', row.names = F)
1507747693418:write_rds(df_fb, 'df1_fb.rds', row.names = F)
1507747707117:write_rds(df_fb, 'df1_fb.rds')
1507747799561:df_fb <- read.csv('fbData.csv')
1507747887332:unzip('fbData.zip', exdir = 'fbData')
1507747968746:df_fb <- read.csv('./fbData/dataset_Facebook.csv')
1507747974007:saveRDS(df_fb, file = 'df1_fb.rds')
1507748089270:df_imp <- read_rds('df1_fb.rds')
1507748104854:View(df_imp)
1507748138376:df_imp <- read_rds('df1_fb.rds', sep = ';')
1507748195977:df_imp <- read.csv2('df1_fb.rds', sep= ';')
1507748206958:View(df_imp)
1507748270518:df_imp <- read_delim('df1_fb.rds', sep= ';')
1507748286522:df_imp <- read_delim('df1_fb.rds', delim = ';')
1507748328513:df_imp <- read_csv2('df1_fb.rds', sep = ';')
1507748401674:View(df_fb)
1507748432263:df_fb <- read.csv('./fbData/dataset_Facebook.csv', sep = ';')
1507748436838:saveRDS(df_fb, file = 'df1_fb.rds')
1507748439691:View(df_fb)
1507748448926:df_imp <- read_csv2('df1_fb.rds', sep = ';')
1507748469940:df_imp <- read_rds('df1_fb.rds')
1507748474789:View(df_imp)
1507759279767:download.file('https://archive.ics.uci.edu/ml/machine-learning-databases/00390/stock%20portfolio%20performance%20data%20set.xlsx', destfile = 'StockData.xlsx')
1507759709877:download.file('https://archive.ics.uci.edu/ml/machine-learning-databases/00390/stock%20portfolio%20performance%20data%20set.xlsx', destfile = 'StockData.xlsx')
1507759722252:download.file('https://archive.ics.uci.edu/ml/machine-learning-databases/00390/stock%20portfolio%20performance%20data%20set.xlsx', destfile = 'StockData.xlsx')
1507759958517:list.files('stock.dataa.xlsx')
1507759977095:list.files('stock.dataa')
1507759998715:list.files('stockDataa')
1507760008224:list.files('stockDataa.xlsx')
1507760058590:list.files('stockDataa')
1507760070235:list.files('stockDataa.xlsx')
1507760214314:download.file('https://archive.ics.uci.edu/ml/machine-learning-databases/00390/stock%20portfolio%20performance%20data%20set.xlsx', destfile = 'stockDataa.xlsx')
1507760318174:df_stk <- read.table('StockData.xlsx')
1507760518948:df_stk <- read.xls('StockData.xlsx')
1507760553831:library(gdata)
1507760558454:df_stk <- read.xls('StockData.xlsx')
1507760687704:df_stk <- read_xls('StockData.xlsx', sheet = 'all period')
1507760726562:library(readxl)
1507760746761:df_stk <- read_excel('StockData.xlsx')
1507760766003:df_stk <- read_excel('StockData.xlsx', sheet = 'all period')
1507760777617:View(df_stk)
1507761082598:write.csv('df_stk', 'StkDat.txt', sep = ';')
1507761156815:write.table('df_stk', 'StkDat.txt', sep = ';')
1507761281115:df1_stk <- read.table('StkDat.txt')
1507761291912:View(df1_stk)
1507761525509:library('rvest')
1507761602355:web_url <- read_html('https://www.bloomberg.com/energy')
1507761747271:num_of_tbls <- html_nodes(web_url, 'table')
1507761880335:actl_tbl <- html_nodes(num_of_tbls)
1507761914048:head(num_of_tbls)
1507761924579:actl_tbl <- html_nodes(num_of_tbls)
1507761999737:actl_tbl2 <- num_of_tbls[[2]]
1507762024867:View(actl_tbl2)
1507762036271:actl_tbl <- html_nodes(num_of_tbls)
1507762046021:web_url <- read_html('https://www.bloomberg.com/energy')
1507762051736:num_of_tbls <- html_nodes(web_url, 'table')
1507762057459:head(num_of_tbls)
1507762060302:actl_tbl <- html_nodes(num_of_tbls)
1507762399991:actl_tbl <- html_table(num_of_tbls)
1507762416611:actl_tbl2 <- actl_tbl[[2]]
1507762420941:View(actl_tbl2)
1507765007554:imp_sht1 <- read.csv('ShenyangPM20100101_20151231.csv')
1507765037865:imp_sht2 <- read.csv('ChengduPM20100101_20151231.csv')
1507765090424:imp_sht3 <- read.csv('BeijingPM20100101_20151231.csv')
1507765158066:imp_sht4 <- read.csv('GuangzhouPM20100101_20151231.csv')
1507765162103:imp_sht5 <- read.csv('ShanghaiPM20100101_20151231.csv')
1507765312098:all_sheets <- c(imp_sht1, imp_sht2, imp_sht3, imp_sht4, imp_sht5)
1507765359241:write.table(all_sheets, 'excelSheet.xls')
1507765421860:write.table(imp_sht1, imp_sht2, imp_sht3, imp_sht4, imp_sht5, 'excelSheet.xls')
1507765437251:write.table(c(imp_sht1, imp_sht2, imp_sht3, imp_sht4, imp_sht5), 'excelSheet.xls')
1507765467425:write.table(c(imp_sht1, imp_sht2, imp_sht3, imp_sht4, imp_sht5), 'excelSht1.xls')
1507765509945:write.table(imp_sht1, 'excelSht1.xls')
1507765543195:write.table(imp_sht1, 'excelSht1.xls', sep = ',')
1507765570538:write.table(imp_sht1, 'excelSht1.xls', sep = ',')
1507801452061:install.packages (c ( "tm", "wordcloud", "RCurl", "XML", "SnowballC"))
1507801551665:library(tm)
1507801552007:library(wordcloud)
1507801552054:library(SnowballC)
1507801703873:source("./htmltotext.R")
1507801733819:data1 <- htmlToText("http://www.oracle.com/technetwork/database/options/advanced-analytics/overview/index.html")
1507801733856:data2 <- htmlToText("http://www.oracle.com/technetwork/database/options/advanced-analytics/odm/index.html")
1507801733872:data3 <- htmlToText("http://www.oracle.com/technetwork/database/database-technologies/r/r-technologies/overview/index.html")
1507801733872:data4
1507801746240:data1 <- htmlToText("http://www.oracle.com/technetwork/database/options/advanced-analytics/overview/index.html")
1507801940495:source("HTML2Text.R")
1507801945076:data1 <- htmlToText("http://www.oracle.com/technetwork/database/options/advanced-analytics/overview/index.html")
1507801958726:data2 <- htmlToText("http://www.oracle.com/technetwork/database/options/advanced-analytics/odm/index.html")
1507801968973:data3 <- htmlToText("http://www.oracle.com/technetwork/database/database-technologies/r/r-technologies/overview/index.html")
1507801972473:data4 <- htmlToText("http://www.oracle.com/technetwork/database/database-technologies/r/r-enterprise/overview/index.html")
1507802003249:data <- c(data1, data2)
1507802003249:data <- c(data, data3)
1507802003249:data <- c(data, data4)
1507802055414:txt_corpus <- Corpus (VectorSource (data)) # create a corpus
1507802066250:summary(txt_corpus)
1507802080734:tm_map <- tm_map (txt_corpus, stripWhitespace) # remove white space
1507802090056:tm_map <- tm_map (tm_map, removePunctuation) # remove punctuations
1507802098919:tm_map <- tm_map (tm_map, removeNumbers) # to remove numbers
1507802108708:tm_map <- tm_map (tm_map, removeWords, stopwords("english")) # to remove stop words(like ‘as’ ‘the’ etc….)
1507802137745:tm_map <- tm_map (tm_map, removeWords, c("work", "use", "java", "new", "support"))
1507802149952:inspect(tm_map)
1507802163449:Matrix <- TermDocumentMatrix(tm_map) # terms in rows
1507802172841:matrix_c <- as.matrix (Matrix)
1507802185808:freq <- sort (rowSums (matrix_c)) # frequency count of the data
1507802198801:freq #view the words and their frequencies
1507802208586:tmdata <- data.frame (words=names(freq), freq)
1507802219521:wordcloud (tmdata$words, tmdata$freq, max.words=100, min.freq=3, scale=c(7,.5), random.order=FALSE, colors=brewer.pal(8, "Dark2"))
1507809357835:load('titan.raw.rdata')
1507809383053:dim(titan.raw.rdata)
1507809391498:dim(titan.raw)
1507809473366:load('titan.raw.rdata')
1507809480928:dim(titan.raw)
1507809495111:dim(titan.raw.data)
1507809561320:?dim
1507809616868:load('titan.raw.rdata')
1507809624216:dim(titan.raw.data)
1507809635303:dim(titan.raw.rdata)
1507809680194:load('titan.raw.rdata')
1507809698273:dim(titan.raw)
1507809710182:dim('titan.raw')
1507809738179:load('titan.raw.rdata')
1507809742380:dim('titan.raw')
1507809755303:dim(titan.raw)
1507809823044:dim(titanic.raw)
1507809927981:str(titanic.raw)
1507809948771:summary(titanic.raw)
1507809971492:head(titanic.raw, 10)
1507809998102:table(titanic.raw)
1507810072104:?table
1507810144256:install.packages('arules')
1507810323351:library(arules)
1507810330821:??arules
1507810402477:rules <- apriori(titanic.raw)
1507810417057:inspect(rules)
1507810541160:rhs=c("Survived=No", "Survived=Yes")
1507810601763:?rhs
1507810695130:rules <- apriori(titanic.raw, parameter = list(minlen=2, supp=0.005,
1507810695136:conf=0.8), appearance = list(rhs=c("Survived=No", "Survived=Yes"),
1507810695136:default="lhs"), control = list(verbose=F))
1507810743312:rules <- apriori(titanic.raw, parameter = list(minlen=2, supp=0.005, conf=0.8), appearance = list(rhs=c("Survived=No", "Survived=Yes"), default="lhs"), control = list(verbose=F))
1507810780833:rules.sorted <- sort(rules, by="lift")
1507810795356:?lift
1507810827590:??lift
1507810901369:inspect(rules.sorted)
1507811437654:View(Titanic)
1507821613449:?join
1507821843460:x = data.frame(name = c('John', 'Paul', 'George', 'Ringo', 'Stuart', 'Pete'), instrument = c('guitar', 'bass', 'guitar', 'drums', 'bass', 'drums'))
1507821966572:y = data.frame(name = c('John', 'Paul', 'George', 'Ringo', 'Brian'), band = c('TRUE', 'TRUE', 'TRUE', 'TRUE', 'FALSE'))
1507821980930:View(y)
1507821994376:View(x)
1507822241587:left_join(x, y, by = 'name')
1507822272146:library(dplyr)
1507822276776:left_join(x, y, by = 'name')
1507822453649:inner_join(x, y, by = 'name')
1507822589340:semi_join(x, y, by = 'name')
1507822649804:anti_join(x, y, by = 'name')
1507823020115:rm
1507823128416:rm(name)
1507823137056:rm(gender)
1507823192621:rm(presidents)
1507823367897:rm(a)
1507823373932:rm(age)
1507823379559:rm(b)
1507823411430:rm(tab)
1507823422715:rm(trump)
1507827004457:View(df_stk)
1507827019699:df_stk <- read_excel('StockData.xlsx', skip = 1, sheet = 'all period')
1507827023507:View(df_stk)
1507827063101:df_stk <- read_excel('StockData.xlsx', sheet = 'all period')
1507827065843:View(df_stk)
1507827094440:df_stk <- read_xlsx('StockData.xlsx', sheet = 'all period')
1507827097092:View(df_stk)
1507827104130:df_stk <- read_xlsx('StockData.xlsx', sheet = 'all period')
1509578964283:qplot(x = displ , y = hwy, data = mpg) + facet_grid(rows ~ cols)
1509578977311:library(ggolot2)
1509578986736:library(ggplot2)
1509578993483:qplot(x = displ , y = hwy, data = mpg) + facet_grid(rows ~ cols)
1509579028026:qplot(x = displ , y = hwy, data = mpg) + facet_grid(drv ~ .)
1509579056495:qplot(x = displ , y = hwy, data = mpg) + facet_grid(drv ~ cyl)
1509579133191:qplot(x = displ , y = hwy, data = mpg) + facet_wrap(~ class)
1509579204303:qplot(x = displ , y = hwy, data = mpg) + facet_wrap(~ class)
1509579253977:qplot(x = displ , y = hwy, data = mpg) + facet_grid(drv ~ cyl)
1509579267382:qplot(x = displ , y = hwy, data = mpg) + facet_grid(. ~ cyl)
1509579280643:qplot(x = displ , y = hwy, data = mpg) + facet_grid(. ~ drv)
1509579286011:qplot(x = displ , y = hwy, data = mpg) + facet_grid(. ~ cyl)
1509579303473:qplot(x = displ , y = hwy, data = mpg) + facet_grid(. ~ drv)
1510240805566:dub_emp_trends <- read.table('dublin employment trends.txt', sep = ',', header = T, stringsAsFactors = F)
1510241309505:dub_emp_trends <- read.table('dublin employment trends.txt', sep = ',', header = T, stringsAsFactors = F)
1510241508395:dub_emp_trends
1510241524275:View(dub_emp_trends)
1510241543100:dub_emp_trends <- read.table('dublin employment trends.txt', header = T, stringsAsFactors = F)
1510241557287:View(dub_emp_trends)
1510241581597:dub_emp_trends <- read.table('dublin employment trends.txt', sep = ':', header = T, stringsAsFactors = F)
1510241595846:View(dub_emp_trends)
1510242290367:library(ggplot2)
1510242719944:qplot(x = Sector, y = Time, data = dub_emp_trends) + facet_grid(. ~ drv)
1510242744847:qplot(x = Sector, y = Time, data = dub_emp_trends) + facet_grid(. ~ Sector)
1510242895522:qplot(x = Sector, y = Time, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510242916975:qplot(x = Employment, y = Time, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510242961743:qplot(x = Time, y = Employment, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510243016695:qplot(x = Time, y = Employment, data = dub_emp_trends, geom = 'line') + facet_wrap(. ~ Sector)
1510243057768:qplot(x = Time, y = Employment, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510243075193:qplot(Time, Employment, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510243454384:qplot(Time, Trends, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510243468344:qplot(Time, Employment, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510243974347:names(dub_emp_trends)
1510244033086:names(dub_emp_trends)[1] <- "Quarterly Figures"
1510244050284:names(dub_emp_trends)[2] <- "Quarterly Figures"
1510244079037:names(dub_emp_trends)[2] <- "Trend"
1510244101175:View(dub_emp_trends)
1510244136724:qplot(Quarterly Figures, Trend, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510244167116:library(ggplot2)
1510244174725:qplot(Quarterly Figures, Trend, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510244364538:qplot(Quarteyl Figures, Trend, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510244463396:qplot('Quarteyly Figures', 'Trend', data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510244477119:qplot('Quarterly Figures', 'Trend', data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510244543101:qplot(x = 'Quarterly Figures', y = 'Trend', data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510244563236:qplot(x = Quarterly Figures, y = Trend, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510244569960:names(dub_emp_trends)[1] <- "Quarterly_Figures"
1510244584932:qplot(Quarterly_Figures, Trend, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510244772104:names(dub_emp_trends)[1] <- "Quarterly Figures"
1510244853378:qplot(`Quarterly Figures`, Trend, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510245131491:dim(dub_emp_trends)
1510245176737:dub_emp_trends <- read.table('dublin employment trends.txt', sep = ':', header = T, stringsAsFactors = F)
1510245222948:View(dub_emp_trends)
1510245277659:dub_emp_trend <- read.table('dublin employment trends.txt', sep = ':', header = T, stringsAsFactors = F)
1510245340911:library(readr)
1510245479845:dub_emp_trend <- read_csv('dublin employment trends.txt', sep = ':', header = T, stringsAsFactors = F)
1510245536976:dub_emp_trend <- read_delim('dublin employment trends.txt', sep = ',',header = T, stringsAsFactors = F)
1510245545048:dub_emp_trend <- read_delim('dublin employment trends.txt', sep = ':',header = T, stringsAsFactors = F)
1510245556559:dub_emp_trend <- read_delim('dublin employment trends.txt', sep = ':', header = T, stringsAsFactors = F)
1510245799916:dub_emp_trend <- read_delim('dublin employment trends.txt', sep = ':')
1510245817289:dub_emp_trend <- read_delim('dublin employment trends.txt', delim = ':')
1510245843972:names(dub_emp_trends)
1510245849770:names(dub_emp_trends)[1] <- "Quarterly Figures"
1510245849929:names(dub_emp_trends)[2] <- "Trend"
1510245862924:names(dub_emp_trend)
1510245865989:names(dub_emp_trend)[1] <- "Quarterly Figures"
1510245869764:names(dub_emp_trend)[2] <- "Trend"
1510245873550:View(dub_emp_trends)
1510245880662:View(dub_emp_trend)
1510245885613:library(ggplot2)
1510245887588:qplot(`Quarterly Figures`, Trend, data = dub_emp_trends, geom = 'line') + facet_grid(. ~ Sector)
1510245903028:qplot(`Quarterly Figures`, Trend, data = dub_emp_trend, geom = 'line') + facet_grid(. ~ Sector)
1510246604475:dub_prop_trend <- read_delim('dublin property trends.txt', delim = ':')
1510246636286:View(dub_prop_trend)
1510246651369:dub_prop_trend <- read_delim('dublin property trends.txt')
1510246688494:dub_prop_trend <- read_delim('dublin property trends.txt', delim = '')
1510246733340:dub_prop_trend <- read_table('dublin property trends.txt')
1510246737948:View(dub_prop_trend)
1510247336756:dub_prop_trend <- read_table('dublin property trends.txt',  sep = '')
1510247757622:dub_prop_trend <- read.delim2('dublin property trends.txt',  sep = '')
1510247764025:dub_prop_trend <- read.delim('dublin property trends.txt',  sep = '')
1510247785347:dub_prop_trend <- read_delim('dublin property trends.txt',  sep = '')
1510247801214:dub_prop_trend <- read.table('dublin property trends.txt')
1510247819254:dub_prop_trend <- read.table('dublin property trends.txt', sep = '')
1510247834003:library(readr)
1510247937582:dub_prop_trend <- read.table('dublin property trends.txt', sep = '', header = T, stringsAsFactors = F)
1510248218488:dub_prop_trend <- read.csv('dublin property trends.txt', header = T, stringsAsFactors = F)
1510248224559:View(dub_prop_trend)
1510248246925:dub_prop_trend <- read.table('dublin property trends.txt', sep = '', header = T, stringsAsFactors = F)
1510248255255:dub_prop_trend <- read.table('dublin property trends.txt', sep = ',', header = T, stringsAsFactors = F)
1510248257349:View(dub_prop_trend)
1510248314941:dub_prop_trend <- read_csv('dublin property trends.txt', sep = ',', header = T, stringsAsFactors = F)
1510248326882:dub_prop_trend <- read_csv('dublin property trends.txt', sep = ',')
1510248331957:dub_prop_trend <- read_csv('dublin property trends.txt', sep = '')
1510248366851:dub_prop_trend <- read_tsv('dublin property trends.txt')
1510248368775:View(dub_prop_trend)
1510248528442:qplot(Time, Trend, data = dub_emp_trend, colour = 'Category', geom = 'line')
1510248542862:qplot(Time, Trend, data = dub_prop_trend, colour = 'Category', geom = 'line')
1510248620479:qplot(Time, Trend, data = dub_prop_trend, colour = 'Category')
1510248736899:qplot(Time, Trend, colour = 'Category', data = dub_prop_trend)
1510248805573:qplot(Time, Trend, colour = 'Category', data = dub_prop_trend, geom = 'line')
1510248826727:qplot(Time, Trend, color = 'Category', data = dub_prop_trend, geom = 'line')
1510248875582:qplot(Time, Trend, data = dub_prop_trend, colour = 'Category', geom = 'line')
1510248911315:library(ggplot2)
1510248914111:qplot(Time, Trend, data = dub_prop_trend, colour = 'Category', geom = 'line')
1510249120674:qplot(Time, Trend, data = dub_prop_trend, colour = Category, geom = 'line')
1510274743116:library(httr)
1510274743137:url = 'https://api.jcdecaux.com/vls/v1/stations?'
1510274743152:response = GET(url, query =
1510274743152:list(apiKey = '537eb2f907c103123b3b0bc9c53840771c9cb529',
1510274743166:contact = 'dublin'))
1510274744999:results = content(response)
1510274745315:bikeData = data.frame(NULL)
1510274745331:limit = lenght(results)
1510274745331:for (i in 1: limit){
1510274745347:df = data.frame(results[i])
1510274745347:bikeData = rbind(bikeData, df)
1510274745362:}
1510274745378:View(bikeData)
1510274839298:library(httr)
1510274839298:url = 'https://api.jcdecaux.com/vls/v1/stations?'
1510274839298:response = GET(url, query =
1510274839313:list(apiKey = '537eb2f907c103123b3b0bc9c53840771c9cb529',
1510274839329:contract = 'dublin'))
1510274839631:results = content(response)
1510274839670:bikeData = data.frame(NULL)
1510274839678:limit = length(results)
1510274839678:for (i in 1: limit){
1510274839693:df = data.frame(results[i])
1510274839693:bikeData = rbind(bikeData, df)
1510274839693:}
1510274839952:View(bikeData)
1510315975475:install.packages(“sqldf”)
1510316046870:install.packages(“sqldf”)
1510316057385:install.packages(sqldf)
1510316071275:install.packages('sqldf')
1510316222746:library(sqldf)
1510316222761:install.packages('sqldf')
1510317410807:install.packages("sqldf")
1510317460256:install.packages("sqldf")
1510317473622:install.packages("sqldf")
1510317524324:install.packages('sqldf')
1510317669934:install.packages("sqldf")
1510318145509:library(readr)
1510318145540:studentresult <- read_csv("~/studentresult.csv")
1510318145722:View(studentresult)
1510318248806:str(studentresult)
1510318515163:dim(studentresult)
1510318523243:names(studentresult)
1510318539356:length(studentresult)
1510318550898:nrow(studentresult)
1510318557492:ncol(studentresult)
1510318565148:summary(studentresult)
1510318662460:View(studentresult$Grade)
1510318736428:library(ggplot2)
1510319066759:marks <- sqldf("select Subject, sum(Mark_Written) as mark from studentresult group by Subject")
1510319083661:library(sqldf)
1510319107121:marks <- sqldf("select Subject, sum(Mark_Written) as mark from studentresult group by Subject")
1510319119801:View(marks)
1510341669990:url_api = 'https://api.jcdecaux.com/vls/v1/stations?'
1510341687772:response = GET(url_api, query =
1510341687778:list(apiKey = '537eb2f907c103123b3b0bc9c53840771c9cb529',
1510341687778:contract = 'dublin'))
1510341714538:library(httr)
1510341718040:response = GET(url_api, query =
1510341718046:list(apiKey = '537eb2f907c103123b3b0bc9c53840771c9cb529',
1510341718054:contract = 'dublin'))
1510341847026:rm(url)
1510342002585:bike_info = content(response)
1510342020118:rm(results)
1510342030577:bikeData = data.frame(NULL)
1510342042723:len_bike = length(bike_info)
1510342056197:rm(limit)
1510342128823:for (i in 1: len_bike){
1510342128833:df = data.frame(bike_info[i])
1510342128851:bikeData = rbind(bikeData, df)
1510342128851:}
1510356572899:len_bike
1510356587068:df
1510405570177:library(ggplot2)
1510405582465:qplot(`Quarterly Figures`, Trend, data = dub_emp_trend, geom = 'line') + facet_grid(. ~ Sector)
1510406319792:qplot(`Quarterly Figures`, Trend, data = dub_emp_trend, geom = 'line', main = "Dublin Employment Trends Per Sector: 2006-2016") + facet_grid(. ~ Sector)
1510406396730:qplot(`Quarterly Figures`, Trend, data = dub_emp_trend, geom = 'line', main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510406401090:qplot(Time, Trend, data = dub_prop_trend, colour = Category, geom = 'line', "Dublin Property Trends: 2007 - 2016")
1510406448460:qplot(Time, Trend, data = dub_prop_trend, colour = Category, geom = 'line', main = "Dublin Property Trends: 2007 - 2016")
1510406569890:?main
1510406759426:?qplot
1510406795304:dub_emp_trend <- read_delim('dublin employment trends.txt', delim = ':')
1510406917850:View(dub_emp_trend)
1510406996496:qplot(Time, Employment, data = dub_emp_trend, geom = 'line', main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510407159838:qplot(Time, Employment, data = dub_emp_trend, xslab = `Quartely Figures`, yslab = `Trend`, geom = 'line', main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510407188692:?qplot
1510407239545:qplot(Time, Employment, data = dub_emp_trend, xlab = `Quartely Figures`, ylab = `Trend`, geom = 'line', main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510407288491:qplot(Time, Employment, data = dub_emp_trend, xlab = `Quarterly Figures`, ylab = `Trend`, geom = 'line', main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510407292485:qplot(Time, Trend, data = dub_prop_trend, colour = Category, geom = 'line', main = "Dublin Property Trends: 2007 - 2016")
1510407310650:qplot(Time, Employment, data = dub_emp_trend, xlab = 'Quarterly Figures', ylab = `Trend`, geom = 'line', main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510407326681:qplot(Time, Employment, data = dub_emp_trend, xlab = "Quarterly Figures", ylab = "Trend", geom = 'line', main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510407383554:?melt
1510437110542:bike_overview_df <- bikeData[ , c("name", "address", "available_bike_stands", "available_bikes")]
1510437152949:bike_overview_df
1510437161880:View(bike_overview_df)
1510437529828:bike_overview <- melt(bike_overview_df)
1510437560064:library(httr)
1510437564106:bike_overview <- melt(bike_overview_df)
1510437758643:install.packages("reshape2")
1510437792468:install.packages("reshape2")
1510437831483:library(reshape2)
1510437954261:bike_overview <- melt(bike_overview_df)
1510437966379:bike_overview
1510438024504:View(bike_overview)
1510438683978:bike_overview <- bikeData[ , c("name", "address", "available_bike_stands", "available_bikes")]
1510438705093:rm(bike_overview_df)
1510438720565:View(bike_overview)
1510439114184:library(ggplot2)
1510440185388:?ggplot
1510440956270:?ggplot
1510440958890:df <- data.frame(
1510440958897:gp = factor(rep(letters[1:3], each = 10)),
1510440958928:y = rnorm(30)
1510440958943:)
1510440973716:ds <- plyr::ddply(df, "gp", plyr::summarise, mean = mean(y), sd = sd(y))
1510440979111:ds
1510441005448:ggplot(df, aes(gp, y)) +
1510441005511:geom_point() +
1510441005530:geom_point(data = ds, aes(y = mean), colour = 'red', size = 3)
1510441128343:gp
1510441469801:summary(bike_overview)
1510444227971:?qplot
1510446268079:nrow(bike_overview$name)
1510446289418:nrow(name$bike_overview)
1510485283419:nrow(bike_overview)
1510486049363:bike_overview <- bikeData[ , c("name", "address", "banking", "available_bike_stands", "available_bikes")]
1510486062795:View(bike_overview)
1510486170182:stat_with_bankfacility <- as.factor(banking$bike_overview)
1510486191635:stat_with_bankfacility <- as.factor("banking"$bike_overview)
1510486203723:stat_with_bankfacility <- as.factor("banking$bike_overview")
1510486218586:nrow("name$bike_overview")
1510486240433:stat_with_bankfacility
1510486256167:nrow("bike_overview")
1510486269531:nrow(name$bike_overview)
1510486285936:nrow(bike_overview)
1510486302047:stat_with_bankfacility <- as.factor(banking$bike_overview)
1510486311109:stat_with_bankfacility <- is.factor(banking$bike_overview)
1510486403492:stat_with_bankfacility <- factor(banking$bike_overview)
1510486444427:str(bike_overview)
1510486885480:stat_with_bankfacility <- factor(bike_overview$banking)
1510486897808:stat_with_bankfacility
1510486940028:levels(stat_with_bankfacility)
1510486954922:sum(levels(stat_with_bankfacility))
1510487032751:sum(stat_with_bankfacility = True)
1510487044016:sum(stat_with_bankfacility = "True")
1510487104520:levels(stat_with_bankfacility) = "True"
1510487114437:levels(stat_with_bankfacility) == "True"
1510487138265:bike_overview$banking == "True"
1510487159340:bike_overview <- bikeData[ , c("name", "address", "banking", "available_bike_stands", "available_bikes")]
1510487170973:View(bike_overview)
1510487279875:bf <- bike_overview$banking == 'True'
1510487283401:bf
1510487297308:bike_overview$banking
1510487449172:sum(bike_overview$banking=="TRUE")
1510487458061:sum(bike_overview$banking=="FALSE")
1510487558654:stat_with_bankfacility <- sum(bike_overview$banking=="TRUE")
1510487592228:stat_without_bankfacility <- sum(bike_overview$banking=="FALSE")
1510487603176:rm(bf)
1510487620652:rm(marks)
1510487625387:rm(studentresult)
1510487743629:sum(bikeData$bike_stands)
1510488679347:sum(bikeData$available_bike_stands)
1510488708850:sum(bikeData$available_bikes)
1510488855782:bike_overview <- bikeData[ , c("name", "address", "banking", "bike_stands", "available_bike_stands", "available_bikes")]
1510488857769:View(bike_overview)
1510488936354:sum(bike_overview$bike_stands)
1510488978823:sum(bike_overview$available_bike_stands)
1510490082497:sum(bike_overview$available_bikes)
1510490253233:max(bike_overview$bike_stands)
1510490289745:min(bike_overview$bike_stands)
1510490327731:max(bike_overview$available_bike_stands)
1510490338891:min(bike_overview$available_bike_stands)
1510490508517:sum(bike_overview$available_bike_stands < 10)
1510490527142:sum(bike_overview$available_bike_stands > 10)
1510490554282:median(bike_overview$available_bike_stands)
1510490758629:mean(bike_overview$available_bike_stands)
1510490771921:mean(bike_overview$available_bikes)
1510490878669:bike_overview[ , sum(bike_overview$available_bike_stands > 40)]
1510490913917:View(bike_overview)
1510491069358:statn_with_bankfacility <- sum(bike_overview$banking=="TRUE")
1510491073294:statn_without_bankfacility <- sum(bike_overview$banking=="FALSE")
1510491083588:rm(stat_with_bankfacility)
1510491094484:rm(stat_without_bankfacility)
1510492992559:busy_bke_statn <- sum(bike_overview$available_bike_stands < 10)
1510493202533:busy_bke_statn <- bike_overview$available_bike_stands < 10
1510493226169:bike_overview[ , busy_bke_statn]
1510493265276:bm <- bike_overview[ , busy_bke_statn]
1510493288967:bm <- bike_overview[busy_bke_statn, ]
1510493292464:bm
1510493298845:View(bm)
1510493363498:busy_bke_statn <- bike_overview[busy_bke_statn, ]
1510493379676:View(busy_bke_statn)
1510493409494:rm(bm)
1510493582944:busy_bke_statn <- bike_overview$available_bike_stands < 8
1510493589566:busy_bke_statn_df <- bike_overview[busy_bke_statn, ]
1510493592112:View(busy_bke_statn)
1510493945033:View(busy_bke_statn_df)
1510494656387:busy_bke_statn <- bike_overview$available_bike_stands < 5
1510494657542:busy_bke_statn_df <- bike_overview[busy_bke_statn, ]
1510494659988:View(busy_bke_statn_df)
1510504595697:Information <- c("Total bike stations in Dublin", "Number of stations with banking facility",
1510504595728:"Number of stations without banking facility", "Total bike stands across all bike stations",
1510504595745:"Available bike stands", "Available bikes")
1510504607972:Count <- c(nrow(bike_overview), statn_with_bankfacility, statn_without_bankfacility,
1510504607973:tot_bke_stnds, tot_avl_bke_stnds, tot_bkes_avl)
1510504625339:tot_bke_stnds <- sum(bike_overview$bike_stands)
1510504632646:Count <- c(nrow(bike_overview), statn_with_bankfacility, statn_without_bankfacility,
1510504632646:tot_bke_stnds, tot_avl_bke_stnds, tot_bkes_avl)
1510504647484:tot_avl_bke_stnds <- sum(bike_overview$available_bike_stands)
1510504651129:tot_bkes_avl <- sum(bike_overview$available_bikes)
1510504658896:Count <- c(nrow(bike_overview), statn_with_bankfacility, statn_without_bankfacility,
1510504658907:tot_bke_stnds, tot_avl_bke_stnds, tot_bkes_avl)
1510504668661:Summary_dub_bikes <- data.frame(Information, Count)
1510504685209:View(Summary_dub_bikes)
1510571220668:bike_overview[(bike_overview$bike_stands == "TRUE"), ]
1510571237376:bike_overview[ , (bike_overview$bike_stands == "TRUE")]
1510571256135:bt <- bike_overview$bike_stands == "TRUE"
1510571264678:bike_overview[ ,bt]
1510571272089:bike_overview[bt, ]
1510571286488:bt <- data.frame(bike_overview$bike_stands == "TRUE")
1510571291234:bike_overview[bt, ]
1510571294453:bike_overview[ ,bt]
1510571305319:bt
1510571315688:View(bt)
1510571339013:bt <- data.frame(bike_overview$banking == "TRUE")
1510571346110:bike_overview[bt, ]
1510571371645:bt <- bike_overview$banking == "TRUE"
1510571386498:bike_overview[ ,bt]
1510571391872:bike_overview[bt, ]
1510571408170:bo <- bike_overview[bt, ]
1510571411737:View(bo)
1510572406966:suitable_bke_statn <- (bike_overview$banking == "TRUE") && (bike_overview$available_bikes > 12) && (bike_overview$available_bike_stands > 12)
1510572463207:bike_overview[suitable_bke_statn, ]
1510572523328:suitable_bke_statn <- bike_overview$banking == "TRUE" && bike_overview$available_bikes > 12 && bike_overview$available_bike_stands > 12
1510572527264:bike_overview[suitable_bke_statn, ]
1510572757393:bike_overview[ , suitable_bke_statn]
1510572775315:suitable_bke_statn
1510572819479:suitable_bke_statn <- c((bike_overview$banking == "TRUE") && (bike_overview$available_bikes > 12) && (bike_overview$available_bike_stands > 12)
1510572856531:)
1510572862454:suitable_bke_statn
1510575797210:qplot(Time, Employment, data = dub_emp_trend, xlab = "Quarterly Figures", ylab = "Trend", geom = 'line', main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510576033359:?cbind
1510580219719:qplot(Time, Trend, data = dub_prop_trend, colour = Category, geom = 'line',
1510580219784:main = "Dublin Property Trends: 2007 - 2016")
1510582451351:suitable_bke_statn <- (bike_overview$banking == "TRUE") & (bike_overview$available_bikes > 12) & (bike_overview$available_bike_stands > 12)
1510582457029:suitable_bke_statn
1510582470296:bike_overview[suitable_bke_statn, ]
1510597765137:rm(bt)
1510597767480:rm(bo)
1510598213281:download.file('https://data.dublinked.ie/dataset/a97edfe6-1ee2-494c-9998-c7ab29214d59/resource/
1510598213410:e95bd0b4-1ac3-471d-93ea-2d129c8e8dfe/download/googletransitdublinbusp20130315-1546.zip',
1510598213416:destfile = 'DublinBusGTFS.zip')
1510598275547:download.file('https://data.dublinked.ie/dataset/a97edfe6-1ee2-494c-9998-c7ab29214d59/resource/e95bd0b4-1ac3-471d-93ea-2d129c8e8dfe/download/googletransitdublinbusp20130315-1546.zip',
1510598275555:destfile = 'DublinBusGTFS.zip')
1510598594485:unzip('DublinBusGTFS.zip', exdir = './DublinBusGTFSData')
1510598635355:list.files('DublinBusGTFSData')
1510600487857:Agency <- read_csv('./DublinBusGTFSData/agency.txt', stringAFactors = F)
1510600494480:library(readr)
1510600501823:Agency <- read_csv('./DublinBusGTFSData/agency.txt', stringAFactors = F)
1510600540055:Agency <- read_csv('./DublinBusGTFSData/agency.txt', stringAsFactors = F)
1510600601683:Agency <- read_csv('./DublinBusGTFSData/agency.txt', stringAsFactors = F)
1510600877627:Agency <- read_csv('./DublinBusGTFSData/agency.txt')
1510600887229:Calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1510600899030:Calendar_Dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1510600922076:Routes <- read_csv('./DublinBusGTFSData/routes.txt')
1510600923876:Shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1510600924921:Stop_Times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510600928005:Stops <- read_csv('./DublinBusGTFSData/stops.txt')
1510600939221:Transfers <- read_csv('./DublinBusGTFSData/transfers.txt')
1510600940875:Trips <- read_csv('./DublinBusGTFSData/trips.txt')
1510601202057:View(Agency)
1510601210892:View(Calendar)
1510601216612:View(Calendar_Dates)
1510601222629:View(Routes)
1510601228518:View(Shapes)
1510601232802:View(Stop_Times)
1510601248643:View(Stops)
1510601261546:View(Transfers)
1510601272293:View(Trips)
1510602097894:Trips$trip_headsign == !NA
1510668969129:?cumsum
1510669132383:cumsum(1:10)
1510672562230:name <- "David"
1510672571921:title <- "Dr."
1510672581315:Surname <- "leonard"
1510672600047:lecturer <- c(name, title, Surname)
1510672603734:lecturer
1510672618052:lecturer <- c(title, name, Surname)
1510672620141:lecturer
1510672627284:lecturer <- paste(title, name, Surname)
1510672630250:lecturer
1510672643204:rm(lecturer)
1510672646586:rm(name)
1510672658340:rm(c(title, Surname))
1510672667995:rm(Surname)
1510672672533:rm(title)
1510674838964:?rbind
1510680069512:library(dplyr)
1510681285091:Trips_shaped <- select(Trips, -c(trip_headsign, block_id))
1510681299186:View(Trips_shaped)
1510681306624:Trips_shaped <- group_by(Trips_shaped, route_id)
1510681310876:View(Trips_shaped)
1510681364344:?unique
1510683577673:?summarise
1510683591297:?summarise
1510683604112:?dplyr
1510684224012:Stop_Times_shaped <- select(Stop_Times, -c(departure_time, pickup_type, drop_off_type))
1510684426451:Stop_Times_shaped <- group_by(Stop_Times_shaped, trip_id)
1510684439512:View(Stop_Times_shaped)
1510685087258:Shapes_shaped <- group_by(Shapes, shape_id)
1510685106424:View(Shapes_shaped)
1510685233203:summarise(Shapes_shaped, total_dist_traveled = max(shape_dist_traveled))
1510685485156:Shapes <- group_by(Shapes, shape_id)
1510685488425:Shapes_shaped <- summarise(Shapes_shaped, total_dist_traveled = max(shape_dist_traveled))
1510685496544:View(Shapes_shaped)
1510685695396:Shapes_shaped <- summarise(Shapes, total_dist_traveled = max(shape_dist_traveled))
1510685701363:View(Shapes_shaped)
1510686909439:Trips <- select(Trips, -c(trip_headsign, block_id))
1510686910565:Trips <- group_by(Trips_shaped, route_id)
1510686911654:Stop_Times <- select(Stop_Times, -c(departure_time, pickup_type, drop_off_type))
1510686912596:Stop_Times <- group_by(Stop_Times_shaped, trip_id)
1510686914436:Shapes <- group_by(Shapes, shape_id)
1510686915106:Shapes_shaped <- summarise(Shapes, total_dist_traveled = max(shape_dist_traveled))
1510686942574:View(Trips)
1510687160156:Calendar.Dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1510687168594:View(Calendar.Dates)
1510687188927:Stop.Times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510687224842:ungroup(Stop_Times)
1510687240239:Stop.Times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510687250080:View(Stop.Times)
1510687300200:Stop.Times <- select(Stop.Times, -c(departure_time, pickup_type, drop_off_type))
1510687301708:Stop.Times <- group_by(Stop.Times_shaped, trip_id)
1510687311289:Stop.Times <- group_by(Stop.Times, trip_id)
1510687318035:Trips <- group_by(Trips, route_id)
1510687809310:View(Shapes_shaped)
1510687928527:View(Shapes)
1510688029392:Shapes.shaped <- summarise(Shapes, total_dist_traveled = max(shape_dist_traveled))
1510688036310:View(Shapes.shaped)
1510688116487:max.shapes.covered <- summarise(Shapes, total_dist_traveled = max(shape_dist_traveled))
1510688128593:View(max.shapes.covered)
1510688347860:rm(Shapes.shaped)
1510688353375:rm(Shapes_shaped)
1510688367379:rm(Stop_Times)
1510688374778:rm(Stop_Times_shaped)
1510688406500:rm(Trips_shaped)
1510688599784:Routes <- select(Routes, -c(agency_id, route_type))
1510688619814:View(Routes)
1510689414290:Stops <- group_by(Stops, stop_name)
1510753408532:shapes.trips.joined <- inner_join(max.shapes.covered, Trips, by = 'shape_id')
1510753420308:View(shapes.trips.joined)
1510753602795:shps.trps.joined <- inner_join(max.shapes.covered, Trips, by = 'shape_id')
1510753625363:shps.trps.joined <- inner_join(max.shapes.covered, Trips, by = 'shape_id')
1510753628215:View(shps.trps.joined)
1510754090243:Stop.Times <- select(Stop.Times, -c(departure_time, pickup_type, drop_off_type))
1510754154448:Stop.Times <- group_by(Stop.Times, trip_id, stop_headsign)
1510754184419:Stop.Times <- summarise(Stop.Times, max_shape_traveled = max(shape_dist_traveled))
1510754197293:View(Stop.Times)
1510754383921:Stops <- group_by(Stops, stop_id, stop_name)
1510754401151:View(Stops)
1510765599813:View(shps.trps.joined)
1510765796279:StpTms.shps.trps.joined<- inner_join(Stop.Times, shps.trps.joined, by = 'trip_id')
1510765806734:View(StpTms.shps.trps.joined)
1510766273819:Rts.StpTms.shps.trps.joined <- inner_join(Routes, StpTms.shps.trps.joined, by = 'route_id')
1510766285134:View(Rts.StpTms.shps.trps.joined)
1510766853310:stop.distances <- Stop.Times %>%
1510766853390:group_by(trip_id, stop_headsign) %>%
1510766853406:summarise(max_shape_traveled=max(shape_dist_traveled)) %>%
1510766853406:ungroup()
1510766895042:Stop.Times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510766907065:Stop.Times <- select(Stop.Times, -c(departure_time, pickup_type, drop_off_type))
1510766923875:stop.distances <- Stop.Times %>%
1510766923876:group_by(trip_id, stop_headsign) %>%
1510766923892:summarise(max_shape_traveled=max(shape_dist_traveled)) %>%
1510766923892:ungroup()
1510766930374:View(stop.distances)
1510767087253:View(Stop.Times)
1510767448075:Stops <- group_by(Stops, stop_id, stop_name)
1510767452057:Stop.Times <- select(Stop.Times, -c(departure_time, pickup_type, drop_off_type))
1510767464452:Stop.Times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510767469883:Stops <- read_csv('./DublinBusGTFSData/stops.txt')
1510767477595:Stops <- group_by(Stops, stop_id, stop_name)
1510767482009:Stop.Times <- select(Stop.Times, -c(departure_time, pickup_type, drop_off_type))
1510767489001:stps.stpstms.joined <- inner_join(Stops, Stop.Times, by = 'stop_id')
1510767498331:View(stps.stpstms.joined)
1510767724252:stop.distances <- Stop.Times %>%
1510767724252:group_by(trip_id, stop_headsign) %>%
1510767724268:summarise(max_shape_traveled=max(shape_dist_traveled)) %>%
1510767724283:ungroup()
1510767786606:stop.distances <- stps.stpstms.joined %>%
1510767786606:group_by(trip_id, stop_headsign) %>%
1510767786621:summarise(max_shape_traveled=max(shape_dist_traveled)) %>%
1510767786637:ungroup()
1510767796024:View(stop.distances)
1510769790175:Stop.Times <- select(Stop.Times, -c(departure_time, pickup_type, drop_off_type))
1510769801516:Stop.Times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510769806198:Stops <- read_csv('./DublinBusGTFSData/stops.txt')
1510769811597:Trips <- read_csv('./DublinBusGTFSData/trips.txt')
1510769818093:Routes <- read_csv('./DublinBusGTFSData/routes.txt')
1510769820040:Shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1510769841036:Trips <- select(Trips, -c(trip_headsign, block_id))
1510769843605:Trips <- group_by(Trips, route_id)
1510769846930:Stops <- group_by(Stops, stop_id, stop_name)
1510769855415:Stop.Times <- select(Stop.Times, -c(departure_time, pickup_type, drop_off_type))
1510769913597:agency <- read_csv('./DublinBusGTFSData/agency.txt')
1510769916874:calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1510769918686:calendar.dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1510769919716:routes <- read_csv('./DublinBusGTFSData/routes.txt')
1510769920807:shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1510769921711:stop.times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510769924002:stops <- read_csv('./DublinBusGTFSData/stops.txt')
1510769927389:transfers <- read_csv('./DublinBusGTFSData/transfers.txt')
1510769928705:trips <- read_csv('./DublinBusGTFSData/trips.txt')
1510769977610:trips <- select(Trips, -c(trip_headsign, block_id))
1510770019818:View(trips)
1510770117684:trips <- trips %>%
1510770117692:select(trips, -c(trip_headsign, block_id)) %>%
1510770117699:group_by(Trips, route_id
1510770147034:stops <- group_by(Stops, stop_id, stop_name)
1510770159309:stops <- group_by(stops, stop_id, stop_name)
1510770171560:stop.times <- select(stop.times, -c(departure_time, pickup_type, drop_off_type))
1510770199112:shapes <- group_by(shapes, shape_id)
1510770200283:dist.shape.covered <- summarise(shapes, total_dist_traveled = max(shape_dist_traveled))
1510770211428:routes <- select(routes, -c(agency_id, route_type))
1510770276993:stoptimes <- inner_join(stops, stop.times, by = 'stop_id')
1510770290094:View(stoptimes)
1510770343288:View(shapes)
1510770435340:shapes.trips <- inner_join(shapes, trips, by = 'shape_id')
1510770447940:View(shapes.trips)
1510770496798:trips <- trips %>%
1510770496873:select(trips, -c(trip_headsign, block_id)) %>%
1510770496889:group_by(Trips, route_id)
1510770514969:trips <- trips %>%
1510770514985:select(trips, -c(trip_headsign, block_id)) %>%
1510770515001:group_by(trips, route_id)
1510770530726:trips <- read_csv('./DublinBusGTFSData/trips.txt')
1510770544294:trips <- trips %>%
1510770544295:select(trips, -c(trip_headsign, block_id)) %>%
1510770544295:group_by(trips, route_id)
1510770572943:trips <- trips %>%
1510770573041:select(-c(trip_headsign, block_id)) %>%
1510770573057:group_by(route_id)
1510770622138:shapes.trips <- inner_join(shapes, trips, by = 'shape_id')
1510770635083:dist.shape.covered <- summarise(shapes.trips, total_dist_traveled = max(shape_dist_traveled))
1510770643309:View(dist.shape.covered)
1510770764960:shapes.trips <- inner_join(dist.shape.covered, trips, by = 'shape_id')
1510770775053:View(shapes.trips)
1510770845297:trips.routes <- inner_join(routes, shapes.trips, by = 'route_id')
1510770858409:View(trips.routes)
1510770887113:trips.stoptimes <- inner_join(stop.times, trips.routes, by = 'trip_id')
1510770898232:View(trips.stoptimes)
1510771053985:View(stoptimes)
1510771237758:trips.stoptimes <- inner_join(stoptimes, trips.routes, by = 'trip_id')
1510771423451:View(stoptimes)
1510772152638:calendar <- select(calendar, -c(start_date, end_date))
1510772517301:detailed.trips.frame <- inner_join(calendar, trips.stoptimes, by = 'service_id')
1510772527563:View(detailed.trips.frame)
1510773535593:stoptimes <- group_by(stoptimes, stop_id, stop_name)
1510773549966:View(stoptimes)
1510773694384:unique(stoptimes$stop_name)
1510773721557:count(unique(stoptimes$stop_name))
1510773783615:count(unique(ungroup(stoptimes$stop_name)))
1510773796796:count(unique(ungroup(stoptimes)$stop_name))
1510773830183:ungroup(stoptimes)
1510773839662:count(unique(stoptimes$stop_name))
1510773867367:unique(count(stoptimes$stop_name))
1510773922289:library(dplyr)
1510773936618:count(unique(stoptimes$stop_name))
1510773967784:uni_stopnames <- unique(stoptimes$stop_name)
1510773974828:count(uni_stopnames)
1510774010549:length(uni_stopnames)
1510774036781:length(unique(stoptimes$stop_name))
1510774956748:stoptimes <- group_by(stoptimes, stop_id, stop_name)
1510775683862:bus.count.by.area <- summarise(stoptimes, sum(!is.na(stop_name)))
1510775700047:bus.count.by.area
1510775711564:View(bus.count.by.area)
1510776406544:no.of.stops <- length(unique(stoptimes$stop_id))
1510776416842:no.of.stops
1510776458201:stoptimes <- group_by(stoptimes, stop_name)
1510776468011:bus.count.by.area <- summarise(stoptimes, sum(!is.na(stop_name)))
1510776475267:View(bus.count.by.area)
1510776639859:summary(stoptimes$stop_name)
1510776753875:no.of.stops <- length(unique(stoptimes$stop_name))
1510776759298:no.of.stops
1510776782439:bus.count.by.area[no.of.stops, ]
1510776795934:bus.count.by.area[ ,no.of.stops]
1510777117032:x <- group_by(stops, stop_name)
1510777145250:summarise(x, stop.count=sum(!is.na(stop_id)))
1510777219825:View(stops)
1510777361435:ungroup(stoptimes)
1510777438776:length(unique(stops$stop_id))
1510777453487:bus.count.by.area <- summarise(stops, sum(!is.na(stop_name)))
1510777463402:View(bus.count.by.area)
1510777532715:stops <- group_by(stops, stop_name)
1510777546309:bus.count.by.area <- summarise(stops, sum(!is.na(stop_name)))
1510777552467:View(bus.count.by.area)
1510777641845:bus.count.by.area <- summarise(stoptimes, sum(!is.na(stop_name)))
1510777646150:View(bus.count.by.area)
1510777741860:stops.count <- summarise(stops, sum(!is.na(stop_id)))
1510777751519:View(stops.count)
1510778159104:stops.count <- summarise(stops, total_stops <- sum(!is.na(stop_id)))
1510778163043:bus.count.by.area <- summarise(stoptimes, no_of_buses_accessible <- sum(!is.na(stop_name)))
1510778169048:View(stops)
1510778181745:View(stops.count)
1510778239540:stops.count <- summarise(stops, total_stops = sum(!is.na(stop_id)))
1510778245345:bus.count.by.area <- summarise(stoptimes, no_of_buses_accessible = sum(!is.na(stop_name)))
1510778273156:stops.count
1510779298671:trips.routes.grp1 <- group_by(trips.routes, route_long_name)
1510779309050:route.travelled <- summarise(trips.routes, min_dist_traveled = min(total_dist_traveled), max_dist_traveled = max(total_dist_traveled))
1510779319688:View(route.travelled)
1510779343037:route.travelled <- summarise(trips.routes.grp1, min_dist_traveled = min(total_dist_traveled), max_dist_traveled = max(total_dist_traveled))
1510779346660:View(route.travelled)
1510779402529:length(unique(trips.routes$route_long_name))
1510779412746:length(unique(trips.routes$route_id))
1510779466293:trips.routes.grp1 <- group_by(trips.routes, route_id, route_long_name)
1510779470359:route.travelled <- summarise(trips.routes.grp1, min_dist_traveled = min(total_dist_traveled), max_dist_traveled = max(total_dist_traveled))
1510779493059:View(route.travelled)
1510780768403:knitr::opts_chunk$set(echo = TRUE)
1510780768865:dub_emp_trend <- read_delim('dublin employment trends.txt', delim = ':')
1510780809687:getwd()
1510780880878:dub_emp_trend <- read_delim('dublin employment trends.txt', delim = ':')
1510780881113:View(dub_emp_trend)
1510780881138:qplot(Time, Employment, data = dub_emp_trend, xlab = "Quarterly Figures", ylab = "Trend", geom = 'line',
1510780881156:main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510780914437:dub_emp_trend <- read_delim('dublin employment trends.txt', delim = ':')
1510780914502:qplot(Time, Employment, data = dub_emp_trend, xlab = "Quarterly Figures", ylab = "Trend", geom = 'line',
1510780914502:main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1510790961531:View(bus.count.by.area)
1510832460119:install.packages("sqldf")
1510832483652:library(sqldf)
1510832484533:library(readr)
1510832484564:studentresult <- read_csv("~/studentresult.csv")
1510832484961:View(studentresult)
1510832484977:str(studentresult)
1510832485024:summary(studentresult)
1510832485049:library(ggplot2)
1510832485260:marks <- sqldf("select Subject, sum(Mark_Written) as mark from studentresult group by Subject")
1510832485426:View(marks)
1510832575648:ncol(studentresult)
1510832575648:nrow(studentresult)
1510832575648:length(studentresult)
1510832615522:names(studentresult)
1510832725572:head(studentresult)
1510832794894:marks <- sqldf("select Subject, sum(Mark_Written) as mark from studentresult group by Subject")
1510832801142:View(marks)
1510833199719:avgmark <- sqldf("select ROUND(AVG(Mark_Oral)) from studentresult where Name = 'John McAuley' AND Mark_Oral is not ‘NA'")
1510833304505:avgmark <- sqldf("select ROUND(AVG(Mark_Oral)) from studentresult where Name = 'John McAuley' AND !is.na(Mark_Oral)")
1510833329374:avgmark <- sqldf("select ROUND(AVG(Mark_Oral)) from studentresult where Name = 'John McAuley' AND (!is.na(Mark_Oral))")
1510833394271:avgmark <- sqldf("select ROUND(AVG(Mark_Oral)) from studentresult where Name = 'John McAuley' AND Mark_Oral is not ‘NA'")
1510833433680:avgmark <- sqldf("select ROUND(AVG(Mark_Oral)) from studentresult where Name = 'John McAuley' AND Mark_Oral is not "NA"")
1510833491990:avgmark <- sqldf("select ROUND(mean(Mark_Oral)) from studentresult where Name = 'John McAuley' AND Mark_Oral is not "NA"")
1510842865523:View(stops)
1510842879832:View(stop.times)
1510842893874:View(stops)
1510842927052:agency <- read_csv('./DublinBusGTFSData/agency.txt')
1510842927052:calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1510842927105:calendar.dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1510842927115:routes <- read_csv('./DublinBusGTFSData/routes.txt')
1510842927123:shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1510842927129:stop.times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510842927134:stops <- read_csv('./DublinBusGTFSData/stops.txt')
1510842927134:transfers <- read_csv('./DublinBusGTFSData/transfers.txt')
1510842927134:trips <- read_csv('./DublinBusGTFSData/trips.txt')
1510842936850:library(readr)
1510842941494:agency <- read_csv('./DublinBusGTFSData/agency.txt')
1510842941786:calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1510842941980:calendar.dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1510842942051:routes <- read_csv('./DublinBusGTFSData/routes.txt')
1510842942085:shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1510842942673:stop.times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510842945329:stops <- read_csv('./DublinBusGTFSData/stops.txt')
1510842945367:transfers <- read_csv('./DublinBusGTFSData/transfers.txt')
1510842945382:trips <- read_csv('./DublinBusGTFSData/trips.txt')
1510842961386:View(stops)
1510842969814:View(stop.times)
1510843023834:trips <- trips %>%
1510843023841:select(-c(trip_headsign, block_id)) %>%
1510843023846:group_by(route_id)
1510843036767:library(dplyr)
1510843050566:trips <- trips %>%
1510843050573:select(-c(trip_headsign, block_id)) %>%
1510843050578:group_by(route_id)
1510843056240:stops <- group_by(stops, stop_name)
1510843065377:stop.times <- select(stop.times, -c(departure_time, pickup_type, drop_off_type))
1510843076942:View(stop.times)
1510843089555:shapes <- group_by(shapes, shape_id)
1510843090802:dist.shape.covered <- summarise(shapes, total_dist_traveled = max(shape_dist_traveled))
1510843094901:routes <- select(routes, -c(agency_id, route_type))
1510843098854:calendar <- select(calendar, -c(start_date, end_date))
1510843367023:stoptimes <- inner_join(stops, stop.times, by = 'stop_id')
1510844065074:trips.routes.grp2 <- group_by(trips.routes, route_id, route_short_name)
1510844087366:stoptimes <- inner_join(stops, stop.times, by = 'stop_id')
1510844088643:shapes.trips <- inner_join(dist.shape.covered, trips, by = 'shape_id')
1510844090338:trips.routes <- inner_join(routes, shapes.trips, by = 'route_id')
1510844095498:trips.routes.grp2 <- group_by(trips.routes, route_id, route_short_name)
1510844096790:trips.per.route <- summarise(trips.routes.grp2, sum(!is.na(trip_id)))
1510844105135:View(trips.per.route)
1510844165642:trips.per.route <- summarise(trips.routes.grp2, total.trips.made == sum(!is.na(trip_id)))
1510844176784:trips.per.route <- summarise(trips.routes.grp2, total.trips.made = sum(!is.na(trip_id)))
1510844180837:View(trips.per.route)
1510844322502:trips.routes.grp2 <- group_by(trips.routes, route_id, route_short_name, route_long_name)
1510844326333:trips.per.route <- summarise(trips.routes.grp2, total.trips.made = sum(!is.na(trip_id)))
1510844329854:View(trips.per.route)
1510844607803:length(unique(trips.routes$trip_id))
1510845321485:services_on_days <- length(unique(trips.routes.grp3$route_short_name)
1510845339429:)
1510845343659:trips.routes.grp3 <- group_by(trips.routes, service_id, route_id, route_short_name, route_long_name, shape_id)
1510845345788:services_on_days <- length(unique(trips.routes.grp3$route_short_name))
1510845353184:View(services_on_days)
1510845627662:trips.routes.grp3 <- group_by(trips.routes, service_id, route_id, route_short_name, route_long_name, shape_id)
1510845628648:services_on_days <- summarise(trips.routes.grp3, n(trip_id))
1510845638865:trips.routes.grp3 <- group_by(trips.routes, service_id, route_id, route_short_name, route_long_name, shape_id)
1510845639933:services_on_days <- summarise(trips.routes.grp3, n())
1510845647348:View(services_on_days)
1510845674439:services_on_days <- summarise(trips.routes.grp3, n_distinct())
1510845688137:trips.routes.grp3 <- group_by(trips.routes, service_id, route_id, route_short_name, route_long_name, shape_id)
1510845689133:services_on_days <- summarise(trips.routes.grp3, n_distinct(service_id))
1510845695334:View(services_on_days)
1510845735193:services_on_days <- summarise(trips.routes.grp3, sum(!is.na(trip_id))
1510845749473:)
1510845757526:View(services_on_days)
1510845778025:trips.routes.grp3 <- group_by(trips.routes, service_id, route_id, shape_id)
1510845778903:services_on_days <- summarise(trips.routes.grp3, sum(!is.na(trip_id)))
1510845783570:View(services_on_days)
1510845796115:trips.routes.grp3 <- group_by(trips.routes, service_id)
1510845796803:services_on_days <- summarise(trips.routes.grp3, sum(!is.na(trip_id)))
1510845800725:View(services_on_days)
1510846003323:trips_on_days <- inner_join(Calendar, services_on_days, by = 'service_id')
1510846021101:calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1510846039029:calendar <- select(calendar, -c(start_date, end_date))
1510846049636:trips_on_days <- inner_join(calendar, services_on_days, by = 'service_id')
1510846057397:View(trips_on_days)
1510846160082:services_on_days <- summarise(trips.routes.grp3, no_of_trips = sum(!is.na(trip_id)))
1510846161990:trips_on_days <- inner_join(calendar, services_on_days, by = 'service_id')
1510846170179:View(trips_on_days)
1510846978829:library(ggplot2)
1510846999901:qplot(service_id, no_of_trips, data = trips_on_days)
1510847065457:qplot(service_id, data = trips_on_days, color = no_of_trips)
1510847101137:qplot(service_id, data = trips_on_days)
1510847263880:barplot(trips_on_days)
1510847393636:table(trips_on_days$no_of_trips)
1510847403849:table(trips_on_days$service_id)
1510847493942:qplot()
1510847585071:qplot(service_id, no_of_trips, data = trips_on_days, geom = 'bar')
1510847607041:qplot(no_of_trips, service_id, data = trips_on_days, geom = 'bar')
1510847615503:qplot(service_id, no_of_trips, data = trips_on_days, geom = 'line')
1510847833286:qplot()
1510850580293:qplot(service_id, data = trips.routes)
1510850642952:qplot(service_id, data = trips.routes, colour = service_id)
1510850815930:geom_bar(service_id, data = trips.routes)
1510850846411:geom_bar(data = trips.routes, mapping = service_id)
1510850855635:geom_bar(data = trips.routes, stat = service_id)
1510851032444:qplot(arrival_time, trip_id, data = stoptimes)
1510851839697:for (i in names(trips.routes)) {
1510851839707:missing <- sum(is.na(trips.routes[,i]))
1510851839709:if (missing > 0) {
1510851839725:print(c(i,missing))
1510851839725:}
1510851839743:}
1510851902147:for (i in names(stoptimes)) {
1510851902155:missing <- sum(is.na(stoptimes[,i]))
1510851902167:if (missing > 0) {
1510851902174:print(c(i,missing))
1510851902174:}
1510851902190:}
1510852397550:qplot(service_id, data = trips.routes, geom = 'bar')
1510852643761:qplot(service_id, data = trips.routes, geom = 'bar', fill = service_id)
1510852660831:qplot(service_id, data = trips.routes, geom = 'bar', colour = service_id)
1510852948398:qplot(service_id, data = trips.routes, geom = 'bar', colour = |('blue'))
1510852962162:qplot(service_id, data = trips.routes, geom = 'bar', colour = l('blue'))
1510852967526:qplot(service_id, data = trips.routes, geom = 'bar', colour = i('blue'))
1510852971728:qplot(service_id, data = trips.routes, geom = 'bar', colour = I('blue'))
1510852992524:qplot(service_id, data = trips.routes, geom = 'bar', colour = I('red'))
1510853010505:qplot(service_id, data = trips.routes, geom = 'bar', colour = I('voilet'))
1510853018419:qplot(service_id, data = trips.routes, geom = 'bar', colour = I('purple'))
1510853032041:qplot(service_id, data = trips.routes, geom = 'bar', colour = I('cyan'))
1510853124027:qplot(reorder(service_id), data = trips.routes, geom = 'bar', colour = I('cyan'))
1510853146522:qplot(desc(service_id), data = trips.routes, geom = 'bar', colour = I('cyan'))
1510853159036:qplot(aesc(service_id), data = trips.routes, geom = 'bar', colour = I('cyan'))
1510853164395:qplot(asc(service_id), data = trips.routes, geom = 'bar', colour = I('cyan'))
1510853447509:qplot(sort(service_id), data = trips.routes, geom = 'bar', colour = I('cyan'))
1510853677284:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips Covered", geom = 'bar', main = "Trips covered by each service", colour = I('cyan'))
1510853691617:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips", geom = 'bar', main = "Trips covered by each service", colour = I('cyan'))
1510853791118:rm(trips_on_days)
1510853836989:qplot(sort(service_id), data = services_on_days, xlab = "Services", ylab = "No. of Trips",
1510853836999:geom = 'bar', main = "Trips covered by each service", colour = I('cyan'))
1510853844104:trips.routes
1510853852209:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1510853852222:geom = 'bar', main = "Trips covered by each service", colour = I('cyan'))
1510853870664:rm(serv)
1510853884908:ungroup(trips.routes.grp3)
1510853905210:rm(trips.routes.grp3)
1510854928554:View(bus.count.by.area)
1510854937441:bus.count.by.area <- summarise(stoptimes, no_of_buses_accessible = sum(!is.na(stop_name)))
1510854942932:View(bus.count.by.area)
1510855153979:ggplot(data = bus.count.by.area) + geom_point(mapping = aes(x = stop_name, y = no_of_buses_accessible))
1510855275152:View(trips.per.route)
1510855326044:ggplot(data = trips.per.route) + geom_point(mapping = aes(x = route_short_name, y = total.trips.made))
1510855452695:ggplot(data = trips.per.route) + geom_line(mapping = aes(x = route_short_name, y = total.trips.made))
1510855491823:ggplot(data = trips.per.route) + geom_smooth(mapping = aes(x = route_short_name, y = total.trips.made))
1510855540122:ggplot(data = trips.per.route) + geom_point(mapping = aes(x = route_short_name, y = total.trips.made))
1510855569694:ggplot(data = trips.per.route) + geom_smooth(mapping = aes(x = route_short_name, y = total.trips.made))
1510855605462:ggplot(data = trips.per.route) + geom_point(mapping = aes(x = route_short_name, y = total.trips.made) + geom_smooth(mapping = aes(x = route_short_name, y = total.trips.made))
1510855610161:)
1510855660041:ggplot(data = trips.per.route) + geom_point(mapping = aes(x = route_short_name, y = total.trips.made)) + geom_smooth(mapping = aes(x = route_short_name, y = total.trips.made))
1510855760491:ggplot(data = trips.routes) + geom_histogram(mapping = aes(x = route_short_name))
1510855812368:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name))
1510856287213:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1510856287220:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1510856545369:View(trips.stoptimes)
1510856556146:trips.stoptimes <- inner_join(stoptimes, trips.routes, by = 'trip_id')
1510856563808:View(trips.stoptimes)
1510857076054:route39 <- filter(trips.stoptimes, route_short_name == '39A')
1510857090959:View(route39)
1510859183748:route39A <- filter(trips.stoptimes, route_short_name == '39A')
1510859327815:for (i in names(route39A)) {
1510859327821:missing_values <- sum(is.na(route39A[,i]))
1510859327829:if (missing_values > 0) {
1510859327829:print(c(i,missing_values))
1510859327844:}
1510859327860:}
1510860196976:length(unique(trips.routes$route_short_name))
1510860322472:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name))
1510860520746:length(trips.routes$route_short_name)
1510860600495:ggplot(data = trips.per.route) + geom_bar(mapping = aes(x = route_short_name))
1510860701394:unique(route_short_name)
1510860721349:unique(trips.routes$route_short_name)
1510860913629:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = as.factor(route_short_name))
1510860913638:#FIND TOP TEN WITH MAX DISTANCE
1510860913646:#trips made for each service
1510860913652:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1510860913654:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1510860913685:#3.2
1510860913691:#Route = 39A
1510860913697:route39A <- filter(trips.stoptimes, route_short_name == '39A')
1510860913750:for (i in names(route39A)) {
1510860913769:missing_values <- sum(is.na(route39A[,i]))
1510860913785:if (missing_values > 0) {
1510860913785:print(c(i, missing_values))
1510860913819:}
1510860913819:}
1510860928397:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = as.factor(route_short_name))
1510860940977:)
1510868371138:rm(route39)
1510868378103:View(route39A)
1510869049724:length(uniques(route39A$stop_sequence))
1510869056409:length(unique(route39A$stop_sequence))
1510869146671:route39A.grp1 <- route39A %>%
1510869146671:group_by(stop_id, stop_name) %>%
1510869146687:summarise(no.of.buses = sum(!is.na(trip_id)))
1510869155910:View(route39A.grp1)
1510869413039:library(readxl)
1510869514616:library(r2excel)
1510869589242:write.csv(route39A, 'route39A.csv', row.names = F, quote = F)
1510871534163:ggplot(data = route39A) + geom_histogram(mapping = aes(x = stop_name))
1510871573537:ggplot(data = route39A.grp1) + geom_bar(mapping = aes(x = stop_name))
1510871715192:ggplot(data = route39A.grp1) + geom_bar(mapping = aes(x = stop_name)) +theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510871845618:ggplot(data = route39A) + geom_bar(mapping = aes(x = stop_name)) +theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510871874134:ggplot(data = route39A) + geom_bar(aes(x = stop_name)) +theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510871887552:ggplot(data = route39A) + geom_col(aes(x = stop_name)) +theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510871911280:ggplot(data = route39A) + geom_col(aes(x = stop_name, y = trip_id)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510871951102:ggplot(data = route39A.grp1) + geom_col(aes(x = stop_name, y = no.of.buses)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872056696:ggplot(data = route39A.grp1) + geom_col(aes(x = stop_id, y = no.of.buses)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872153038:cat(View(route39A.grp1))
1510872368128:route39A.grp1 <- route39A %>%
1510872368135:group_by(stop_name) %>%
1510872368135:summarise(no.of.buses = sum(!is.na(trip_id)))
1510872377024:View(route39A.grp1)
1510872455050:ggplot(data = route39A.grp1) + geom_col(aes(x = stop_names, y = no.of.buses)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872470696:ggplot(data = route39A.grp1) + geom_col(aes(x = stop_name, y = no.of.buses)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872565258:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, no.of.buses), y = no.of.buses) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872569164:)
1510872585870:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, no.of.buses), y = no.of.buses)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872616882:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses)) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872688066:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses)) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + geom_col(fill="indianred2")
1510872731455:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses)) + geom_col(fill="indianred2") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872815662:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "blue") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872825944:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "cyan") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872835603:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "voilet") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872849458:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "dodgeblue3") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872898357:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), color = "dodgeblue3") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872940787:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), color = "dodgerblue3") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872954256:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "dodgerblue3") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510872966591:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "dodgerblue4") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510873621382:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "dodgerblue4") + xlab = Name of Stop + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510873664119:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "dodgerblue4") + xlab = "Name of Stop" + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510873747994:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "dodgerblue4") + labs(x = "Name of Stop", title = Number of buses arriving in each area) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510873813281:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "dodgerblue4") + labs(x = "Name of Stop", title = "Number of 39A buses arriving/ departing in each area") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510873852145:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses), y = no.of.buses), fill = "dodgerblue4") + labs(x = "Name of Stops", y = "Number of Buses", title = "Number of 39A buses arriving/ departing in each area") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510873939733:route39A.dir1 <- filter(trips.stoptimes, direction_id == 1)
1510873959446:View(route39A.dir1)
1510874031897:route39A.dir1 <- filter(route39A, direction_id == 1)
1510874041243:View(route39A.dir1)
1510874146494:route39A.dir0 <- filter(route39A, direction_id == 0)
1510874905663:View(route39A.dir0)
1510875789149:stop32 <- filter(route39A.dir1, stop_sequence = 32)
1510875803713:stop32 <- filter(route39A.dir1, stop_sequence = '32')
1510875825527:stop32 <- filter(route39A.dir1, stop_sequence == 32)
1510875838400:View(stop32)
1510876004932:length(unique(trip_id))
1510876016941:length(unique(stop32$trip_id))
1510876670118:first.bus.at.32 <- min(stop32$arrival_time)
1510876676505:first.bus.at.32
1510877129278:stop32$arrival_time <- format(stop32$arrival_time, "%H:%M:%S")
1510877134802:first.bus.at.32 <- min(stop32$arrival_time)
1510877141212:first.bus.at.32
1510877281792:stop50 <- filter(route39A.dir0, stop_sequence == 50)
1510877296231:View(stop50)
1510877376954:length(unique(stop50$trip_id))
1510877417943:max(stop32$arrival_time)
1510879535991:bus.avl.32 <- count(stop32$arrival_time < 11:00:00)
1510879545361:bus.avl.32 <- count(stop32$arrival_time < "11:00:00")
1510879552603:bus.avl.32 <- lenght(stop32$arrival_time < "11:00:00")
1510879561841:bus.avl.32 <- length(stop32$arrival_time < "11:00:00")
1510879568543:bu.avl.32
1510879573524:bus.avl.32
1510879589420:bus.avl.32 <- length(stop32$arrival_time < 11:00:00)
1510879595941:bus.avl.32
1510879683678:bus.avl.32 <- length(stop32$arrival_time < 11:40:00)
1510879687379:bus.avl.32
1510879772931:bus.avl.32 <- stop32$arrival_time < 11:40:00
1510879776482:bus.avl.32
1510880007774:length(bus.avl.32)
1510880026150:sum(bus.avl.32)
1510880114115:stop32$arrival_time <- format(stop32$arrival_time, "%HH:%MM:%SS")
1510880127263:stop32$arrival_time <- format(stop32$arrival_time, "%H:%M:%S")
1510880153802:min(stop32$arrival_time)
1510880163846:max(stop32$arrival_time)
1510880177916:stop32$arrival_time <- format(stop32$arrival_time, "%H:%M:%S")
1510880312775:stop32$arrival_time <- format(stop32$arrival_time, "%H:%M:%S")
1510880471662:stop32$arrival_time <- format(stop32$arrival_time, "%I:%p:%X")
1510880631130:stop32$arrival_time <- format(stop32$arrival_time, '%H:%M:%S')
1510880752520:stop32$arrival_time <- as.POSIXct(stop32$arrival_time, format = "%H:%M:%S")
1510880781601:View(stop32)
1510880895880:stop32$arrival_time <- as.POSIXt(stop32$arrival_time, format = "%H:%M:%S")
1510881046305:stop32$arrival_time <- format(stop32$arrival_time, "%H:%M:%S")
1510881074051:View(stop32)
1510881149194:bus.avl.32 <- stop32$arrival_time < 11:40:00
1510881160545:sum(bus.avl.32)
1510881189043:bus.avl.32
1510881208052:bus.avl.32 <- stop32$arrival_time < 11:00:00
1510881339164:bus.avl.32 <- stop32$arrival_time < "11:00:00"
1510881342399:bus.avl.32
1510881359787:sum(bus.avl.32)
1510881545301:bus.avl.32 <- stop32$arrival_time < format(11:00:00, "%H:%M:%S")
1510882492104:x <- "11:00:00"
1510882493666:x
1510882546658:bus.avl.32 <- strptime(stop32$arrival_time, "%H:%M:%S") > strptime(x, "%H:%M:%S")
1510882550693:bus.avl.32
1510882694148:x <- arrange(stop32, arrival_time)
1510882698864:View(x)
1510882714702:y <- "11:00:00"
1510882735101:bus.avl.32 <- strptime(x$arrival_time, "%H:%M:%S") > strptime(y, "%H:%M:%S")
1510882742693:View(bus.avl.32)
1510882750082:bus.avl.32
1510882824612:bus.avl.32 <- strptime(x$arrival_time, "%H:%M:%S") < strptime(y, "%H:%M:%S")
1510882828339:bus.avl.32
1510882846086:sum(bus.avl.32)
1510883773007:stop32 <- route39A.dir1 %>%
1510883773089:filter(stop_sequence == 32) %>%
1510883773117:arrange(arrival_time)
1510883783664:View(stop32)
1510884042363:stop50 <- route39A.dir0 %>%
1510884042371:filter(stop_sequence == 50) %>%
1510884042372:arrange(arrival_time)
1510884097227:bus.avl.32 <- strptime(x$arrival_time, "%H:%M:%S") < strptime(y, "%H:%M:%S")
1510884113787:sum(bus.avl.32)
1510884267910:bus.avl.32 <- strptime(bus.avl.32$arrival_time, "%H:%M:%S") < strptime(y, "%H:%M:%S")
1510884842588:bus.avl.32 <- strptime(stop32$arrival_time, "%H:%M:%S") < strptime(y, "%H:%M:%S")
1510884843968:sum(bus.avl.32)
1510884990223:bus.avl.50 <- strptime(stop50$arrival_time, "%H:%M:%S") < strptime(x, "%H:%M:%S")
1510885022260:x <- "18:00:00"
1510885023205:bus.avl.50 <- strptime(stop50$arrival_time, "%H:%M:%S") < strptime(x, "%H:%M:%S")
1510885034622:sum(bus.avl.50)
1510885268692:stop22 <- route39A.dir0 %>%
1510885268698:filter(stop_sequence == 22) %>%
1510885268699:arrange(arrival_time)
1510885278432:length(unique(stop22$trip_id))
1510885317797:max(stop22$arrival_time)
1510885492402:length(unique(stop32$trip_id))
1510885545570:stop22$arrival_time <- format(stop22$arrival_time, "%H:%M:%S")
1510885725021:length(unique(stop22$trip_id))
1510885729245:max(stop22$arrival_time)
1510885766580:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") < strptime(x, "%H:%M:%S")
1510885768023:sum(bus.avl.50)
1510885837757:View(stop22)
1510885967259:sum(bus.avl.22)
1510886046024:x <- "21:00:00"
1510886049711:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") < strptime(x, "%H:%M:%S")
1510886050782:sum(bus.avl.22)
1510886067926:x <- "21:00:00"
1510886068900:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") > strptime(x, "%H:%M:%S")
1510886069865:sum(bus.avl.22)
1510886077434:x <- "18:00:00"
1510886078050:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") > strptime(x, "%H:%M:%S")
1510886078692:sum(bus.avl.22)
1510921099937:sum(bus.avl.22)
1510921106433:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") > strptime(x, "%H:%M:%S")
1510921118958:stop22 <- route39A.dir0 %>%
1510921118967:filter(stop_sequence == 22) %>%
1510921118969:arrange(arrival_time)
1510921132245:library(dplyr)
1510921138025:library(readr)
1510921141289:stop22 <- route39A.dir0 %>%
1510921141295:filter(stop_sequence == 22) %>%
1510921141298:arrange(arrival_time)
1510923801597:library(readr)
1510923801597:library(dplyr)
1510923801613:#to download the dataset from the internet
1510923801613:download.file('https://data.dublinked.ie/dataset/a97edfe6-1ee2-494c-9998-c7ab29214d59/resource/e95bd0b4-1ac3-471d-93ea-2d129c8e8dfe/download/googletransitdublinbusp20130315-1546.zip',
1510923801613:destfile = 'DublinBusGTFS.zip')
1510923805769:#to unzip the file and extracting the files
1510923805769:unzip('DublinBusGTFS.zip', exdir = './DublinBusGTFSData')
1510923806822:#to view what does 'DublinBusGTFSData' folder contains
1510923806830:list.files('DublinBusGTFSData')
1510923806838:#importing the files to R for exploration
1510923806846:agency <- read_csv('./DublinBusGTFSData/agency.txt')
1510923807994:calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1510923808221:calendar.dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1510923808236:routes <- read_csv('./DublinBusGTFSData/routes.txt')
1510923808252:shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1510923809375:stop.times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510923812024:stops <- read_csv('./DublinBusGTFSData/stops.txt')
1510923812041:transfers <- read_csv('./DublinBusGTFSData/transfers.txt')
1510923812058:trips <- read_csv('./DublinBusGTFSData/trips.txt')
1510923812100:#Viewing the data frames created above to decide on the variables of interest
1510923812111:View(agency)
1510923812119:View(calendar)
1510923812272:View(calendar.dates)
1510923812287:View(routes)
1510923812303:View(shapes)
1510923812319:View(stop.times)
1510923812654:View(stops)
1510923812654:View(transfers)
1510923812670:View(trips)
1510923812716:#Shaping the data frames
1510923812727:#As all the entries under the variables 'trip_headsign' and 'block_id' are NAs, hence ignoring these
1510923812727:#columns
1510923812777:trips <- trips %>%
1510923812778:select(-c(trip_headsign, block_id)) %>%
1510923812848:group_by(route_id)
1510923813106:#Grouping by stop name for the table Stops
1510923813113:stops <- group_by(stops, stop_name)
1510923813362:#Entries under 'departure_time' are exactly same as entries under 'arrival_time',
1510923813371:#hence ignoring departure_time. Also, there is no change in the pickup type and dropoff type
1510923813397:#for all the entries, hence removing these table too from the data frame.
1510923813407:stop.times <- select(stop.times, -c(departure_time, pickup_type, drop_off_type))
1510923813556:#stop.distances <- stoptimes %>%
1510923813563:#  group_by(trip_id, stop_headsign) %>%
1510923813570:#  summarise(max_shape_traveled=max(shape_dist_traveled)) %>%
1510923813577:#  ungroup()
1510923813580:#Grouping data by 'shape_id' and finding maximum distance/ shape travelled
1510923813580:shapes <- group_by(shapes, shape_id)
1510923813612:dist.shape.covered <- summarise(shapes, total_dist_traveled = max(shape_dist_traveled))
1510923813627:#Removing 'agency_id' and 'route_type' as they do not provide critical information about the data
1510923813683:routes <- select(routes, -c(agency_id, route_type))
1510923813709:#Removing 'start_date' and 'end_date' as it is not useful in the analysis
1510923813709:calendar <- select(calendar, -c(start_date, end_date))
1510923813724:stoptimes <- inner_join(stops, stop.times, by = 'stop_id')
1510923814340:shapes.trips <- inner_join(dist.shape.covered, trips, by = 'shape_id')
1510923814360:trips.routes <- inner_join(routes, shapes.trips, by = 'route_id')
1510923814398:trips.stoptimes <- inner_join(stoptimes, trips.routes, by = 'trip_id')
1510923814834:detailed.trips.frame <- inner_join(calendar, trips.stoptimes, by = 'service_id')
1510923816312:#EXPLORATORY DATA ANALYSIS
1510923816313:#how many stops are there in Dublin?
1510923816377:length(unique(stops$stop_id))
1510923816377:#how many stops are there in each area?
1510923816427:stops.count <- summarise(stops, total_stops = sum(!is.na(stop_id)))
1510923816858:#FIND TOP TEN WITH MAX
1510923816874:#how many buses can be accessed from a particular area?
1510923816874:bus.count.by.area <- summarise(stoptimes, no_of_buses_accessible = sum(!is.na(stop_name)))
1510923817010:#FIND TOP TEN WITH MAX
1510923817010:#minimum and maximum distance covered by every route?
1510923817026:trips.routes.grp1 <- group_by(trips.routes, route_id, route_long_name)
1510923817041:route.travelled <- summarise(trips.routes.grp1, min_dist_traveled = min(total_dist_traveled), max_dist_traveled = max(total_dist_traveled))
1510923817041:#trips made per route
1510923817057:trips.routes.grp2 <- group_by(trips.routes, route_id, route_short_name, route_long_name)
1510923817079:trips.per.route <- summarise(trips.routes.grp2, total.trips.made = sum(!is.na(trip_id)))
1510923817085:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name))
1510923817101:#FIND TOP TEN WITH MAX DISTANCE
1510923817101:#trips made for each service
1510923817101:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1510923817117:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1510923817132:#3.2
1510923817141:#Route = 39A
1510923817148:route39A <- filter(trips.stoptimes, route_short_name == '39A')
1510923817263:#how many buses arrives/ departs from each area?
1510923817279:route39A.grp1 <- route39A %>%
1510923817279:group_by(stop_name) %>%
1510923817279:summarise(no.of.buses = sum(!is.na(trip_id)))
1510923817304:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses),
1510923817304:y = no.of.buses), fill = "dodgerblue4") + labs(x = "Name of Stops", y = "Number of Buses", title = "Number of 39A buses arriving/ departing in each area") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510923817320:#data frames based on directions(outbound(1)-going towards college/ inbound(0)-coming towards home)
1510923817320:route39A.dir1 <- route39A %>%
1510923817335:filter(direction_id == 1) %>%
1510923817335:arrange(arrival_time)
1510923817353:route39A.dir0 <- route39A %>%
1510923817369:filter(direction_id == 0) %>%
1510923817384:arrange(arrival_time)
1510923817412:#Filtering out particular stop that is 'Navan Road'(stop_sequence 32) from where I take bus to college
1510923817418:stop32 <- route39A.dir1 %>%
1510923817420:filter(stop_sequence == 32) %>%
1510923817420:arrange(arrival_time)
1510923817441:#changing the format of 'arrival_time' variable
1510923817441:stop32$arrival_time <- format(stop32$arrival_time, "%H:%M:%S")
1510923817457:#How many buses go towards college
1510923817457:length(unique(stop32$trip_id))
1510923817473:#Filtering out particular stop that is 'Aston Quay'(stop_sequence 22) from where I take bus to college
1510923817473:stop22 <- route39A.dir0 %>%
1510923817490:filter(stop_sequence == 22) %>%
1510923817643:arrange(arrival_time)
1510923817674:stop22$arrival_time <- format(stop22$arrival_time, "%H:%M:%S")
1510923817695:#How many buses come in the direction of my home when coming back from college?
1510923817699:length(unique(stop22$trip_id))
1510923817699:#Frequency of buses before 11am while going towards college
1510923817699:y <- "11:00:00"
1510923817715:bus.avl.32 <- strptime(stop32$arrival_time, "%H:%M:%S") < strptime(y, "%H:%M:%S")
1510923817715:sum(bus.avl.32)
1510923817730:#first 39A bus at my stop
1510923817730:min(stop32$arrival_time)
1510923817746:#Frequency of buses after 6pm when coming back home in the evening
1510923817746:x <- "18:00:00"
1510923817762:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") > strptime(x, "%H:%M:%S")
1510923817762:sum(bus.avl.22)
1510923817780:#last bus when coming back from college
1510923817780:max(stop22$arrival_time)
1510924027008:View(route39A.dir1)
1510924039168:View(route39A.dir0)
1510927604758:rt39Adir1.gpr1 <- group_by(trip_id, service_id)
1510927628572:rt39Adir1.gpr1 <- group_by(route39A.dir1, trip_id, service_id)
1510927723398:rt39Adir1.gpr1 <- filter(rt39Adir1.gpr1, stop_sequence == 32 & stop_sequence == 22)
1510927730879:View(rt39Adir1.gpr1)
1510927748000:rt39Adir1.gpr1 <- filter(rt39Adir1.gpr1, stop_sequence == '32' & stop_sequence == '22')
1510927750542:View(rt39Adir1.gpr1)
1510927762330:rt39Adir1.gpr1 <- group_by(route39A.dir1, trip_id, service_id)
1510927766369:View(rt39Adir1.gpr1)
1510927787722:rt39Adir1.gpr1 <- filter(rt39Adir1.gpr1, stop_sequence == '32' && stop_sequence == '22')
1510927886819:rt39Adir1.gpr1 <- filter(rt39Adir1.gpr1, stop_sequence == '32' | stop_sequence == '22')
1510927892981:View(rt39Adir1.gpr1)
1510927900286:rt39Adir1.gpr1 <- filter(rt39Adir1.gpr1, stop_sequence == '32' || stop_sequence == '22')
1510927987433:ungroup(rt39Adir1.gpr1)
1510927991660:rt39Adir1.gpr1 <- filter(rt39Adir1.gpr1, stop_sequence == '32' || stop_sequence == '22')
1510928004414:View(rt39Adir1.gpr1)
1510928053055:rt39Adir1.gpr1 <- filter(route39A.dir1, stop_sequence == '32' || stop_sequence == '22')
1510928061535:View(rt39Adir1.gpr1)
1510928141786:rt39Adir1.gpr1 <- filter(route39A.dir1, stop_sequence == 32 || stop_sequence == 22)
1510928147976:View(rt39Adir1.gpr1)
1510928168994:rt39Adir1.gpr1 <- filter(route39A.dir1, stop_sequence == 32 | stop_sequence == 22)
1510928176942:View(rt39Adir1.gpr1)
1510928218971:rt39Adir1.gpr1 <- group_by(route39Adir1.grp1, trip_id, service_id)
1510928227927:rt39Adir1.gpr1 <- group_by(rt39Adir1.grp1, trip_id, service_id)
1510928264788:rt39Adir1.grp1 <- filter(route39A.dir1, stop_sequence == 32 | stop_sequence == 22)
1510928274350:View(rt39Adir1.grp1)
1510928292208:rt39Adir1.grp1 <- group_by(rt39Adir1.grp1, trip_id, service_id)
1510929388980:a <- 3110.2978.0-39A-b12-1.247.I
1510929413611:a <- "3110.2978.0-39A-b12-1.247.I"
1510929618440:rt39Adir1.grp1$arrival_time(stop_sequence == 22 | trip_id == "3110.2978.0-39A-b12-1.247.I")
1510929644057:rt39Adir1.grp1$arrival_time[stop_sequence == 22 & trip_id == "3110.2978.0-39A-b12-1.247.I"]
1510929670458:rt39Adir1.grp1$arrival_time(stop_sequence == 22 & trip_id == a)
1510929675104:rt39Adir1.grp1$arrival_time(stop_sequence == 22 & trip_id == 'a')
1510929721808:s <- rt39Adir1.grp1$stop_sequence == 22 & rt39Adir1.grp1$trip_id == 'a'
1510929723971:s
1510929780507:s <- route39Adir1$stop_sequence == 22 & route39Adir1$trip_id == 'a'
1510929791613:s <- route39A.dir1$stop_sequence == 22 & route39A.dir1$trip_id == 'a'
1510929793783:s
1510929803269:sum(s)
1510929918506:s <- route39A.dir1$stop_sequence == 22 & route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510929921365:sum(s)
1510929969570:route39A.dir1[s, ]
1510930056516:f <- route39A.dir1[s, ]
1510930058668:View(f)
1510930357364:View(stop22)
1510930577822:rm(rt39Adir1.grp1)
1510930600606:s <- route39A.dir0$stop_sequence == 22 & route39A.dir0$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510930612429:f <- route39A.dir0[s, ]
1510930614999:View(f)
1510931095587:s <- route39A.dir1$stop_sequence == 50 & route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510931102603:f <- route39A.dir0[s, ]
1510931106975:View(f)
1510931122557:f <- route39A.dir1[s, ]
1510931126290:View(f)
1510931688420:time.to.reach <- route39A.dir1$stop_sequence == 32 & route39A.dir1$stop_sequence == 50 & route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510931690986:time.to.reach.stp50 <- route39A.dir1[time.to.reach, ]
1510931700254:View(time.to.reach.stp50)
1510931734640:time.to.reach <- (route39A.dir1$stop_sequence == 32 | route39A.dir1$stop_sequence == 50) & route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510931736570:time.to.reach.stp50 <- route39A.dir1[time.to.reach, ]
1510931741151:View(time.to.reach.stp50)
1510931853320:?lag
1510931872384:library(dplyr)
1510932004300:?diff
1510932130027:lag(time.to.reach.stp50)
1510932147926:j <- lag(time.to.reach.stp50)
1510932150710:View(j)
1510932677680:diff(time.taken.reach.stp50)
1510932684675:time.to.reach <- (route39A.dir1$stop_sequence == 32 | route39A.dir1$stop_sequence == 50) & route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510932707395:library(readr)
1510932707648:library(dplyr)
1510932707837:#to download the dataset from the internet
1510932707842:download.file('https://data.dublinked.ie/dataset/a97edfe6-1ee2-494c-9998-c7ab29214d59/resource/e95bd0b4-1ac3-471d-93ea-2d129c8e8dfe/download/googletransitdublinbusp20130315-1546.zip',
1510932707848:destfile = 'DublinBusGTFS.zip')
1510932747833:#to unzip the file and extracting the files
1510932747849:unzip('DublinBusGTFS.zip', exdir = './DublinBusGTFSData')
1510932748725:#to view what does 'DublinBusGTFSData' folder contains
1510932748725:list.files('DublinBusGTFSData')
1510932748747:#importing the files to R for exploration
1510932748753:agency <- read_csv('./DublinBusGTFSData/agency.txt')
1510932748846:calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1510932749065:calendar.dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1510932749081:routes <- read_csv('./DublinBusGTFSData/routes.txt')
1510932749097:shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1510932749263:stop.times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510932752024:stops <- read_csv('./DublinBusGTFSData/stops.txt')
1510932752039:transfers <- read_csv('./DublinBusGTFSData/transfers.txt')
1510932752055:trips <- read_csv('./DublinBusGTFSData/trips.txt')
1510932752086:#Viewing the data frames created above to decide on the variables of interest
1510932752086:View(agency)
1510932752102:View(calendar)
1510932752255:View(calendar.dates)
1510932752255:View(routes)
1510932752271:View(shapes)
1510932752286:View(stop.times)
1510932752590:View(stops)
1510932752595:View(transfers)
1510932752595:View(trips)
1510932752611:#Shaping the data frames
1510932752611:#As all the entries under the variables 'trip_headsign' and 'block_id' are NAs, hence ignoring these
1510932752658:#columns
1510932752673:trips <- trips %>%
1510932752673:select(-c(trip_headsign, block_id)) %>%
1510932752673:group_by(route_id)
1510932752868:#Grouping by stop name for the table Stops
1510932752868:stops <- group_by(stops, stop_name)
1510932753025:#Entries under 'departure_time' are exactly same as entries under 'arrival_time',
1510932753032:#hence ignoring departure_time. Also, there is no change in the pickup type and dropoff type
1510932753042:#for all the entries, hence removing these table too from the data frame.
1510932753049:stop.times <- select(stop.times, -c(departure_time, pickup_type, drop_off_type))
1510932753252:#stop.distances <- stoptimes %>%
1510932753252:#  group_by(trip_id, stop_headsign) %>%
1510932753339:#  summarise(max_shape_traveled=max(shape_dist_traveled)) %>%
1510932753397:#  ungroup()
1510932753398:#Grouping data by 'shape_id' and finding maximum distance/ shape travelled
1510932753413:shapes <- group_by(shapes, shape_id)
1510932753438:dist.shape.covered <- summarise(shapes, total_dist_traveled = max(shape_dist_traveled))
1510932753440:#Removing 'agency_id' and 'route_type' as they do not provide critical information about the data
1510932753471:routes <- select(routes, -c(agency_id, route_type))
1510932753484:#Removing 'start_date' and 'end_date' as it is not useful in the analysis
1510932753491:calendar <- select(calendar, -c(start_date, end_date))
1510932753498:stoptimes <- inner_join(stops, stop.times, by = 'stop_id')
1510932753938:shapes.trips <- inner_join(dist.shape.covered, trips, by = 'shape_id')
1510932753985:trips.routes <- inner_join(routes, shapes.trips, by = 'route_id')
1510932754051:trips.stoptimes <- inner_join(stoptimes, trips.routes, by = 'trip_id')
1510932754585:detailed.trips.frame <- inner_join(calendar, trips.stoptimes, by = 'service_id')
1510932755323:#EXPLORATORY DATA ANALYSIS
1510932755324:#how many stops are there in Dublin?
1510932755355:length(unique(stops$stop_id))
1510932755367:#how many stops are there in each area?
1510932755367:stops.count <- summarise(stops, total_stops = sum(!is.na(stop_id)))
1510932756551:#FIND TOP TEN WITH MAX
1510932756560:#how many buses can be accessed from a particular area?
1510932756569:bus.count.by.area <- summarise(stoptimes, no_of_buses_accessible = sum(!is.na(stop_name)))
1510932756826:#FIND TOP TEN WITH MAX
1510932756835:#minimum and maximum distance covered by every route?
1510932756844:trips.routes.grp1 <- group_by(trips.routes, route_id, route_long_name)
1510932756860:route.travelled <- summarise(trips.routes.grp1, min_dist_traveled = min(total_dist_traveled), max_dist_traveled = max(total_dist_traveled))
1510932756872:#trips made per route
1510932756881:trips.routes.grp2 <- group_by(trips.routes, route_id, route_short_name, route_long_name)
1510932756894:trips.per.route <- summarise(trips.routes.grp2, total.trips.made = sum(!is.na(trip_id)))
1510932756909:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name))
1510932756925:#FIND TOP TEN WITH MAX DISTANCE
1510932756925:#trips made for each service
1510932756940:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1510932756940:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1510932756956:#3.2
1510932756956:#Route = 39A
1510932756972:route39A <- filter(trips.stoptimes, route_short_name == '39A')
1510932757412:#how many buses arrives/ departs from each area?
1510932757412:route39A.grp1 <- route39A %>%
1510932757427:group_by(stop_name) %>%
1510932757427:summarise(no.of.buses = sum(!is.na(trip_id)))
1510932757443:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses),
1510932757461:y = no.of.buses), fill = "dodgerblue4") + labs(x = "Name of Stops", y = "Number of Buses", title = "Number of 39A buses arriving/ departing in each area") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510932757471:#data frames based on directions(outbound(1)-going towards college/ inbound(0)-coming towards home)
1510932757472:route39A.dir1 <- route39A %>%
1510932757472:filter(direction_id == 1) %>%
1510932757488:arrange(arrival_time)
1510932757519:route39A.dir0 <- route39A %>%
1510932757519:filter(direction_id == 0) %>%
1510932757534:arrange(arrival_time)
1510932757569:#Filtering out particular stop that is 'Navan Road'(stop_sequence 32) from where I take bus to college
1510932757569:stop32 <- route39A.dir1 %>%
1510932757585:filter(stop_sequence == 32) %>%
1510932757585:arrange(arrival_time)
1510932757600:#changing the format of 'arrival_time' variable
1510932757618:stop32$arrival_time <- format(stop32$arrival_time, "%H:%M:%S")
1510932757618:#How many buses go towards college
1510932757634:length(unique(stop32$trip_id))
1510932757649:#Filtering out particular stop that is 'Aston Quay'(stop_sequence 22) from where I take bus to college
1510932757649:stop22 <- route39A.dir0 %>%
1510932757649:filter(stop_sequence == 22) %>%
1510932757715:arrange(arrival_time)
1510932757724:stop22$arrival_time <- format(stop22$arrival_time, "%H:%M:%S")
1510932757740:#How many buses come in the direction of my home when coming back from college?
1510932757740:length(unique(stop22$trip_id))
1510932757756:#Frequency of buses before 11am while going towards college
1510932757756:y <- "11:00:00"
1510932757772:bus.avl.32 <- strptime(stop32$arrival_time, "%H:%M:%S") < strptime(y, "%H:%M:%S")
1510932757788:sum(bus.avl.32)
1510932757788:#first 39A bus at my stop
1510932757805:min(stop32$arrival_time)
1510932757813:#Frequency of buses after 6pm when coming back home in the evening
1510932757821:x <- "18:00:00"
1510932757826:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") > strptime(x, "%H:%M:%S")
1510932757841:sum(bus.avl.22)
1510932757841:#last bus when coming back from college
1510932757857:max(stop22$arrival_time)
1510932757857:#Time bus takes to reach college
1510932757876:#Mostly, I take bus around 9.30am, so I am chosing a trip_id for this '3110.2978.0-39A-b12-1.247.I' from stop_sequence 32
1510932757876:# and I get down at stop_sequence 50 and stop no. 1479
1510932757891:time.to.reach <- (route39A.dir1$stop_sequence == 32 | route39A.dir1$stop_sequence == 50) & route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510932757891:time.to.reach.stp50 <- route39A.dir1[time.to.reach, ]
1510932757907:time.taken <- time.to.rea
1510932757923:#It is evident that I took
1510932802354:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1510932802364:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1510932925425:length(unique(stop22$trip_id))
1510932932638:y <- "11:00:00"
1510932934361:bus.avl.32 <- strptime(stop32$arrival_time, "%H:%M:%S") < strptime(y, "%H:%M:%S")
1510932935711:sum(bus.avl.32)
1510932939177:min(stop32$arrival_time)
1510932943721:x <- "18:00:00"
1510932944481:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") > strptime(x, "%H:%M:%S")
1510932946121:sum(bus.avl.22)
1510932949118:max(stop22$arrival_time)
1510932953902:time.to.reach <- (route39A.dir1$stop_sequence == 32 | route39A.dir1$stop_sequence == 50) & route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510932956103:time.to.reach.stp50 <- route39A.dir1[time.to.reach, ]
1510933026981:View(stop22)
1510933059786:View(stp22)
1510933063417:View(stop22)
1510933088959:stop22 <- route39A.dir0 %>%
1510933088976:filter(stop_sequence == 22) %>%
1510933088976:arrange(arrival_ti
1510933100000:stop22 <- route39A.dir0 %>%
1510933100000:filter(stop_sequence == 22) %>%
1510933100000:arrange(arrival_time)
1510933120933:stop22 <- route39A.dir0 %>%
1510933120948:filter(stop_sequence == 22) %>%
1510933120964:arrange(arrival_time)
1510933125820:stop22$arrival_time <- format(stop22$arrival_time, "%H:%M:%S")
1510933131251:length(unique(stop22$trip_id))
1510933137849:View(stop22)
1510933182503:View(stop32)
1510933256495:library(readr)
1510933256909:library(dplyr)
1510933257111:#to download the dataset from the internet
1510933257127:download.file('https://data.dublinked.ie/dataset/a97edfe6-1ee2-494c-9998-c7ab29214d59/resource/e95bd0b4-1ac3-471d-93ea-2d129c8e8dfe/download/googletransitdublinbusp20130315-1546.zip',
1510933257127:destfile = 'DublinBusGTFS.zip')
1510933265413:#to unzip the file and extracting the files
1510933265429:unzip('DublinBusGTFS.zip', exdir = './DublinBusGTFSData')
1510933266417:#to view what does 'DublinBusGTFSData' folder contains
1510933266426:list.files('DublinBusGTFSData')
1510933266432:#importing the files to R for exploration
1510933266440:agency <- read_csv('./DublinBusGTFSData/agency.txt')
1510933266547:calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1510933266734:calendar.dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1510933266750:routes <- read_csv('./DublinBusGTFSData/routes.txt')
1510933266771:shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1510933266922:stop.times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1510933269537:stops <- read_csv('./DublinBusGTFSData/stops.txt')
1510933269569:transfers <- read_csv('./DublinBusGTFSData/transfers.txt')
1510933269584:trips <- read_csv('./DublinBusGTFSData/trips.txt')
1510933269619:#Viewing the data frames created above to decide on the variables of interest
1510933269619:View(agency)
1510933269635:View(calendar)
1510933269701:View(calendar.dates)
1510933269716:View(routes)
1510933269716:View(shapes)
1510933269732:View(stop.times)
1510933269947:View(stops)
1510933269957:View(transfers)
1510933269987:View(trips)
1510933269999:#Shaping the data frames
1510933270010:#As all the entries under the variables 'trip_headsign' and 'block_id' are NAs, hence ignoring these
1510933270017:#columns
1510933270071:trips <- trips %>%
1510933270136:select(-c(trip_headsign, block_id)) %>%
1510933270167:group_by(route_id)
1510933270259:#Grouping by stop name for the table Stops
1510933270269:stops <- group_by(stops, stop_name)
1510933270381:#Entries under 'departure_time' are exactly same as entries under 'arrival_time',
1510933270426:#hence ignoring departure_time. Also, there is no change in the pickup type and dropoff type
1510933270426:#for all the entries, hence removing these table too from the data frame.
1510933270442:stop.times <- select(stop.times, -c(departure_time, pickup_type, drop_off_type))
1510933270592:#stop.distances <- stoptimes %>%
1510933270599:#  group_by(trip_id, stop_headsign) %>%
1510933270606:#  summarise(max_shape_traveled=max(shape_dist_traveled)) %>%
1510933270632:#  ungroup()
1510933270640:#Grouping data by 'shape_id' and finding maximum distance/ shape travelled
1510933270649:shapes <- group_by(shapes, shape_id)
1510933270705:dist.shape.covered <- summarise(shapes, total_dist_traveled = max(shape_dist_traveled))
1510933270786:#Removing 'agency_id' and 'route_type' as they do not provide critical information about the data
1510933270791:routes <- select(routes, -c(agency_id, route_type))
1510933270807:#Removing 'start_date' and 'end_date' as it is not useful in the analysis
1510933270823:calendar <- select(calendar, -c(start_date, end_date))
1510933270964:stoptimes <- inner_join(stops, stop.times, by = 'stop_id')
1510933271212:shapes.trips <- inner_join(dist.shape.covered, trips, by = 'shape_id')
1510933271326:trips.routes <- inner_join(routes, shapes.trips, by = 'route_id')
1510933271338:trips.stoptimes <- inner_join(stoptimes, trips.routes, by = 'trip_id')
1510933272646:detailed.trips.frame <- inner_join(calendar, trips.stoptimes, by = 'service_id')
1510933272976:#EXPLORATORY DATA ANALYSIS
1510933272976:#how many stops are there in Dublin?
1510933272976:length(unique(stops$stop_id))
1510933272991:#how many stops are there in each area?
1510933272991:stops.count <- summarise(stops, total_stops = sum(!is.na(stop_id)))
1510933273171:#FIND TOP TEN WITH MAX
1510933273179:#how many buses can be accessed from a particular area?
1510933273183:bus.count.by.area <- summarise(stoptimes, no_of_buses_accessible = sum(!is.na(stop_name)))
1510933273482:#FIND TOP TEN WITH MAX
1510933273489:#minimum and maximum distance covered by every route?
1510933273494:trips.routes.grp1 <- group_by(trips.routes, route_id, route_long_name)
1510933273655:route.travelled <- summarise(trips.routes.grp1, min_dist_traveled = min(total_dist_traveled), max_dist_traveled = max(total_dist_traveled))
1510933273686:#trips made per route
1510933273686:trips.routes.grp2 <- group_by(trips.routes, route_id, route_short_name, route_long_name)
1510933273717:trips.per.route <- summarise(trips.routes.grp2, total.trips.made = sum(!is.na(trip_id)))
1510933273748:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name))
1510933273748:#FIND TOP TEN WITH MAX DISTANCE
1510933273763:#trips made for each service
1510933273763:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1510933273779:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1510933274073:#3.2
1510933274073:#Route = 39A
1510933274089:route39A <- filter(trips.stoptimes, route_short_name == '39A')
1510933274318:#how many buses arrives/ departs from each area?
1510933274318:route39A.grp1 <- route39A %>%
1510933274334:group_by(stop_name) %>%
1510933274334:summarise(no.of.buses = sum(!is.na(trip_id)))
1510933274349:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses),
1510933274365:y = no.of.buses), fill = "dodgerblue4") + labs(x = "Name of Stops", y = "Number of Buses", title = "Number of 39A buses arriving/ departing in each area") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510933274365:#data frames based on directions(outbound(1)-going towards college/ inbound(0)-coming towards home)
1510933274380:route39A.dir1 <- route39A %>%
1510933274389:filter(direction_id == 1) %>%
1510933274396:arrange(arrival_time)
1510933274431:route39A.dir0 <- route39A %>%
1510933274431:filter(direction_id == 0) %>%
1510933274446:arrange(arrival_time)
1510933274491:#Filtering out particular stop that is 'Navan Road'(stop_sequence 32) from where I take bus to college
1510933274493:stop32 <- route39A.dir1 %>%
1510933274493:filter(stop_sequence == 32) %>%
1510933274509:arrange(arrival_time)
1510933274524:#changing the format of 'arrival_time' variable
1510933274524:stop32$arrival_time <- format(stop32$arrival_time, "%H:%M:%S")
1510933274550:#How many buses go towards college
1510933274551:length(unique(stop32$trip_id))
1510933274567:#Filtering out particular stop that is 'Aston Quay'(stop_sequence 22) from where I take bus to college
1510933274567:stop22 <- route39A.dir0 %>%
1510933274583:filter(stop_sequence == 22) %>%
1510933274635:arrange(arrival_time)
1510933274651:stop22$arrival_time <- format(stop22$arrival_time, "%H:%M:%S")
1510933274651:#How many buses come in the direction of my home when coming back from college?
1510933274673:length(unique(stop22$trip_id))
1510933274680:#Frequency of buses before 11am while going towards college
1510933274680:y <- "11:00:00"
1510933274695:bus.avl.32 <- strptime(stop32$arrival_time, "%H:%M:%S") < strptime(y, "%H:%M:%S")
1510933274711:sum(bus.avl.32)
1510933274711:#first 39A bus at my stop
1510933274727:min(stop32$arrival_time)
1510933274728:#Frequency of buses after 6pm when coming back home in the evening
1510933274743:x <- "18:00:00"
1510933274743:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") > strptime(x, "%H:%M:%S")
1510933274759:sum(bus.avl.22)
1510933274775:#last bus when coming back from college
1510933274775:max(stop22$arrival_time)
1510933274791:#Time bus takes to reach college
1510933274793:#Mostly, I take bus around 9.30am, so I am chosing a trip_id for this '3110.2978.0-39A-b12-1.247.I' from stop_sequence 32
1510933274793:# and I get down at stop_sequence 50 and stop no. 1479
1510933274809:time.to.reach <- (route39A.dir1$stop_sequence == 32 | route39A.dir1$stop_sequence == 50) & route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510933274809:time.to.reach.stp50 <- route39A.dir1[time.to.reach, ]
1510933274825:time.taken <- time.to.rea
1510933274840:#It is evident that I took
1510933301892:View(stop22)
1510933383546:View(time.to.reach.stp50)
1510933879880:time.taken <- max(time.to.reach.stp50$arrival_time) - min(time.to.reach.stp50$arrival_time)
1510933884288:time.taken
1510933937149:difftime(max(time.to.reach.stp50$arrival_time), min(time.to.reach.stp50$arrival_time), units = mins)
1510934007518:time.to.reach.stp50 <- format(time.to.reach.stp50, "%H:%M:%S")
1510934016237:difftime(max(time.to.reach.stp50$arrival_time), min(time.to.reach.stp50$arrival_time), units = mins)
1510934069706:max.time <- max(time.to.reach.stp50$arrival_time)
1510934104447:time.to.reach.stp50 <- format(time.to.reach.stp50, "%H:%M:%S")
1510934129738:time.to.reach.stp50 <- format(time.to.reach.stp50$arrival_time, "%H:%M:%S")
1510934169694:time.to.reach.stp50 <- format(time.to.reach.stp50$arrival_time, "%H:%M:%S")
1510934358319:time.to.reach.stp50$arrival_time <- format(time.to.reach.stp50$arrival_time, "%H:%M:%S")
1510934372057:time.to.reach <- (route39A.dir1$stop_sequence == 32 | route39A.dir1$stop_sequence == 50) & route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510934372990:time.to.reach.stp50 <- route39A.dir1[time.to.reach, ]
1510934374027:time.to.reach.stp50$arrival_time <- format(time.to.reach.stp50$arrival_time, "%H:%M:%S")
1510934377121:max.time <- max(time.to.reach.stp50$arrival_time)
1510934377958:min.time <- min(time.to.reach.stp50$arrival_time)
1510934382631:max,time
1510934388948:max.time
1510934394944:difftime()
1510934415632:difftime(max, min, units = mins)
1510934423509:difftime(max, min, units = "mins")
1510934439728:max.time
1510934445442:max.time - min.time
1510934471073:difftime(max, min)
1510934549363:v <- strptime(max.time, "%H:%M:%S") - strptime(min.time, "%H"%M:%S)
1510934569709:v <- strptime(max.time, "%H:%M:%S") - strptime(min.time, "%H:%M:%S")
1510934571180:v
1510934624693:total.time.taken <- strptime(max.time, "%H:%M:%S") - strptime(min.time, "%H:%M:%S")
1510934632416:round(total.time.taken)
1510935070407:df.filtered.route <- route39A.dir1 %>%
1510935070407:filter(trip_id == '3110.2978.0-39A-b12-1.247.I') %>%
1510935070407:arrange(stop_sequence)
1510935078681:View(df.filtered.route)
1510935286518:stop.count.route <-  length(df.filtered.route$stop_sequence = c(32:50))
1510935293782:stop.count.route <-  length(df.filtered.route$stop_sequence == c(32:50))
1510935302273:stop.count.route
1510935328093:s <- df.filtered.route$stop_sequence == c(32:50)
1510935583219:s <- df.filtered.route$stop_sequence == between(df.filtered.route$stop_sequence, 32, 50)
1510935585961:s
1510935651928:s <- df.filtered.route$stop_sequence == 32:50
1510935654253:s
1510935676832:s <- df.filtered.route$stop_id == between(df.filtered.route$stop_sequence, 32, 50)
1510935680019:s
1510935737039:s <- between(df.filtered.route$stop_sequence, 32, 50)
1510935740243:s
1510935746556:sum(s)
1510935871297:all.stops <- between(df.filtered.route$stop_sequence, 32, 50)
1510935872554:total.stops <- all.stops - 2
1510935876616:total.stops
1510935907702:sum <- sum(all.stops)
1510935920380:all.stops <- sum(all.stops)
1510935926817:all.stops
1510935932634:total.stops <- all.stops - 2
1510935936949:total.stops
1510936277791:View(dist.shape.covered)
1510936542413:route39A.grp2 <- route39A.dir1 %>%
1510936542423:group_by(service_id, trip_id) %>%
1510936542430:summarise(max(shape_dist_traveled))
1510936554121:View(route39A.grp2)
1510936854099:route39A.dir0.grp1 <- route39A.dir0 %>%
1510936854103:group_by(service_id, trip_id) %>%
1510936854119:summarise(max(shape_dist_traveled))
1510936864100:View(route39A.dir0.grp1)
1510937056957:b <- trips.stoptimes$trip_id == '3095.2969.0-39A-b12-1.245.O' | trips.stoptimes$trip_id == 10144.2970.0-39A-b12-1.245.O
1510937088996:b <- trips.stoptimes$trip_id == '3095.2969.0-39A-b12-1.245.O' | trips.stoptimes$trip_id == '10144.2970.0-39A-b12-1.245.O'
1510937098807:trips.stoptimes[b, ]
1510937132134:v <- trips.stoptimes[b, ]
1510937135976:View(v)
1510937395724:avg.dist <- summarise(mean(trips.stoptimes$total_dist_traveled))
1510937414912:avg.dist <- summarise(trips.stoptimes, mean(total_dist_traveled))
1510937420038:avg.dist
1510937500390:avg.dist <- mean(trips.stoptimes$total_dist_traveled))
1510937506396:avg.dist <- mean(trips.stoptimes$total_dist_traveled)
1510937512632:avg.dist
1510937775760:route39A.both.sides <- route39A.dir1 %>%
1510937775767:filter(trip_id == '3110.2978.0-39A-b12-1.247.I')
1510937788022:View(route39A.both.sides)
1510937824047:route39A.both.sides <- route39A %>%
1510937824050:filter(trip_id == '3110.2978.0-39A-b12-1.247.I')
1510937829793:View(route39A.both.sides)
1510937852134:View(route39A)
1510938200411:route39A.both.sides <- filter(route39A, trip_id == '3110.2978.0-39A-b12-1.247.I')
1510938209803:View(route39A.both.sides)
1510938223646:View(route39A)
1510938327415:route39A.grp3 <- group_by(route39A, trip_id)
1510940064497:time.to.reach.back <- (route39A.dir0$stop_sequence == 22 | route39A.dir0$stop_sequence == 39) &
1510940064503:route39A.dir0$trip_id == '10039.2955.0-39A-b12-1.244.O'
1510940064506:time.to.reach.stp39 <- route39A.dir0[time.to.reach.back, ]
1510940064506:time.to.reach.stp39$arrival_time <- format(time.to.reach.stp39$arrival_time, "%H:%M:%S")
1510940064522:max.timeb <- max(time.to.reach.stp39$arrival_time)
1510940064537:min.timeb <- min(time.to.reach.stp39$arrival_time)
1510940064557:tot.time.taken <- strptime(max.time, "%H:%M:%S") - strptime(min.time, "%H:%M:%S")
1510940064566:round(tot.time.taken)
1510940101616:time.to.reach.back <- (route39A.dir0$stop_sequence == 22 | route39A.dir0$stop_sequence == 39) &
1510940101623:route39A.dir0$trip_id == '10039.2955.0-39A-b12-1.244.O'
1510940101623:time.to.reach.stp39 <- route39A.dir0[time.to.reach.back, ]
1510940101623:time.to.reach.stp39$arrival_time <- format(time.to.reach.stp39$arrival_time, "%H:%M:%S")
1510940101639:max.timeb <- max(time.to.reach.stp39$arrival_time)
1510940101639:min.timeb <- min(time.to.reach.stp39$arrival_time)
1510940101654:tot.time.taken <- strptime(max.timeb, "%H:%M:%S") - strptime(min.timeb, "%H:%M:%S")
1510940101670:round(tot.time.taken)
1510940533211:time.to.reach <- (route39A.dir1$stop_sequence == 32 | route39A.dir1$stop_sequence == 50) &
1510940533216:route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1510940533216:time.to.reach.stp50 <- route39A.dir1[time.to.reach, ]
1510940533232:time.to.reach.stp50$arrival_time <- format(time.to.reach.stp50$arrival_time, "%H:%M:%S")
1510940533232:max.time <- max(time.to.reach.stp50$arrival_time)
1510940533247:min.time <- min(time.to.reach.stp50$arrival_time)
1510940533247:total.time.taken <- strptime(max.time, "%H:%M:%S") - strptime(min.time, "%H:%M:%S")
1510940533263:round(total.time.taken)
1510940533263:#time taken to come back home
1510940533263:#Mostly, I take bus around 7 pm, so I am chosing a trip_id for this '10039.2955.0-39A-b12-1.244.O' from stop_sequence 32
1510940533279:# and I get down at stop_sequence 50 and stop no. 1479
1510940533279:time.to.reach.back <- (route39A.dir0$stop_sequence == 22 | route39A.dir0$stop_sequence == 39) &
1510940533279:route39A.dir0$trip_id == '10039.2955.0-39A-b12-1.244.O'
1510940533297:time.to.reach.stp39 <- route39A.dir0[time.to.reach.back, ]
1510940533297:time.to.reach.stp39$arrival_time <- format(time.to.reach.stp39$arrival_time, "%H:%M:%S")
1510940533313:max.timeb <- max(time.to.reach.stp39$arrival_time)
1510940533313:min.timeb <- min(time.to.reach.stp39$arrival_time)
1510940533313:tot.time.taken <- strptime(max.timeb, "%H:%M:%S") - strptime(min.timeb, "%H:%M:%S")
1510940533329:round(tot.time.taken)
1510945591523:install.packages("sqldf")
1510945600135:library(sqldf)
1510945602460:library(readr)
1510945602476:studentresult <- read_csv("~/studentresult.csv")
1510945602523:View(studentresult)
1510945602535:str(studentresult)
1510945602561:ncol(studentresult)
1510945602561:nrow(studentresult)
1510945602561:length(studentresult)
1510945602582:summary(studentresult)
1510945602597:names(studentresult)
1510945602603:head(studentresult)
1510945602627:library(ggplot2)
1510945603461:marks <- sqldf("select Subject, sum(Mark_Written) as mark from studentresult group by Subject")
1510945603512:View(marks)
1510945603518:avgmark <- sqldf("select ROUND(AVG(Mark_Oral)) from studentresult where Name = 'John McAuley' AND Mark_Oral is not "NA"")
1510945603524:studentresult$Mark_Oral <- ifelse(is.na(studentresult$Mark_Oral), as.numeric(avgmark), studentresult$Mark_Oral)
1510945620397:avgmark <- sqldf("select ROUND(AVG(Mark_Oral)) from studentresult where Name = 'John McAuley' AND Mark_Oral is not "NA"")
1510945636007:avgmark <- sqldf("select ROUND(AVG(Mark_Oral)) from studentresult where Name = "John McAuley" AND Mark_Oral is not "NA"")
1510945672444:avgmark <- sqldf(select ROUND(AVG(Mark_Oral)) from studentresult where Name = "John McAuley" AND Mark_Oral is not "NA")
1510945689889:avgmark <- sqldf('select ROUND(AVG(Mark_Oral)) from studentresult where Name = "John McAuley" AND Mark_Oral is not "NA"')
1510945707189:View(avgmark)
1510945751373:studentresult$Mark_Oral <- ifelse(is.na(studentresult$Mark_Oral), as.numeric(avgmark), studentresult$Mark_Oral)
1510945769730:studentresult$Mark_Oral
1510945823458:View(studentresult)
1510945860496:library(ggplot2)
1510946042693:ggplot(data=marks, aes(x=as.factor(Subject), y=mark)) + geom_bar(stat="identity")
1510946099559:mby <- sqldf('select year, name, sum(Mark_Written)/5 as mark from studentresult group by year, name’)
1510946114963:)
1510946117429:)
1510946118622:)
1510946121524:))))
1510946122753:)
1510946156089:mby <- sqldf("select year, name, (sum(Mark_Written))/5 as mark from studentresult group by year, name")
1510946389239:mby <- sqldf("select Year, Name, (sum(Mark_Written))/5 as mark from studentresult group by Year, Name")
1510946402859:...
1510946473898:""
1510946476789:''
1510946480541:.
1510946481943:)
1510946483378:)
1510946484540:)
1510946646603:mby <- sqldf("select Year, Name, (sum(Mark_Written))/5 as mark from studentresult group by Year, Name")
1510946662516:library(sqldf)
1510946674840:mby <- sqldf("select Year, Name, (sum(Mark_Written))/5 as mark from studentresult group by Year, Name")
1510946684837:studentresult <- read_csv("~/student
1510946694684:result.csv")
1510946706334:library(sqldf)
1510946706340:library(readr)
1510946706393:studentresult <- read_csv("~/studentresult.csv")
1510946706615:View(studentresult)
1510946706615:str(studentresult)
1510946706647:ncol(studentresult)
1510946706647:nrow(studentresult)
1510946706663:length(studentresult)
1510946706672:summary(studentresult)
1510946706682:names(studentresult)
1510946706683:head(studentresult)
1510946706841:library(ggplot2)
1510946706997:marks <- sqldf("select Subject, sum(Mark_Written) as mark from studentresult group by Subject")
1510946707044:View(marks)
1510946707099:avgmark <- sqldf('select ROUND(AVG(Mark_Oral)) from studentresult where Name = "John McAuley" AND Mark_Oral is not "NA"')
1510946707312:studentresult$Mark_Oral <- ifelse(is.na(studentresult$Mark_Oral), as.numeric(avgmark), studentresult$Mark_Oral)
1510946707319:ggplot(data=marks, aes(x=as.factor(Subject), y=mark)) + geom_bar(stat="identity")
1510946708303:mby <- sqldf("select Year, Name, (sum(Mark_Written))/5 as mark from studentresult group by Year, Name")
1510946730492:mby
1510946793663:View(mby)
1510947357821:getAge <- function(d){
1510947357827:now <- as.Date(Sys.Date())
1510947357827:then <- as.Date(d, format="%d-%m-%Y")
1510947357827:result <- now - then
1510947357843:return(round(as.numeric(result/365)))
1510947357843:}
1510947366665:getAge
1510947740790:studentresult$age <- getAge(studentresult$DOB)
1510947786115:studentresult$age
1510949598097:mutate(studentresult, total_marks = 'Mark_Written + Mark_Oral')
1510949609180:library(dplyr)
1510949612208:mutate(studentresult, total_marks = 'Mark_Written + Mark_Oral')
1510949621878:mutate(studentresult, total_marks = Mark_Written + Mark_Oral)
1510949632260:View(studentresult)
1510949653395:stu.res.tot.marks <- mutate(studentresult, total_marks = Mark_Written + Mark_Oral)
1510949662104:View(stu.res.tot.marks)
1510949718432:mby.half <- sqldf("select Year, Name, (sum(total_marks))/2 as mark from stu.res.tot.marks group by Year, Name")
1510949747978:sturestotmarks <- mutate(studentresult, total_marks = Mark_Written + Mark_Oral)
1510949749622:mby.half <- sqldf("select Year, Name, (sum(total_marks))/2 as mark from stu.res.tot.marks group by Year, Name")
1510949785193:mby.half <- sqldf("select Year, Name, (total_marks)/2 as mark from stu.res.tot.marks group by Year, Name")
1510949872534:sturestotmarks <- mutate(sturestotmarks, marks_halfed = total_marks / 2)
1510949880995:View(sturestotmarks)
1510949970177:mby.half <- sqldf("select Year, Name, marks_halfed from sturestotmarks group by Year, Name")
1510949978101:View(mby.half)
1510950209934:sturestotmarks <- sqldf("select Year, Name, (sum(Mark_Written+Mark_Oral))/2 as total_marks from studentresult group by Year, Name")
1510950222146:View(sturestotmarks)
1510950538053:sturestotmarks$Year <- as.Date(sturestotmarks$Year)
1510950547179:library(readr)
1510950547186:library(sqldf)
1510950547191:library(ggplot2)
1510950547191:library(reshape2)
1510950554874:sturestotmarks$Year <- as.Date(sturestotmarks$Year)
1510950578659:View(sturestotmarks)
1510950585282:sturestotmarks$Year <- as.Date(sturestotmarks$Year)
1510950869198:ggplot(data = sturestotmarks, aes(x = as.factor(Name), y = total_marks)) + geom_bar(aes(fill = Name),
1510950869204:stat = 'identity') + facet_grid(~Year) + labs(title="Total Marks of Each Student from 2013-2015",x = "Name of Students",y = "Marks Obtained") + scale_fill_manual(values = c("cyan", "red","dodgerblue3"))
1510951062908:stu.res.by.age <- sqldf("select Year, Name, age from studentresult group by Year, Name")
1510951071865:View(stu.res.by.age)
1510951106435:stu.res.by.age <- sqldf("select Year, Name, total_marks, age from studentresult group by Year, Name")
1510951124441:stu.res.by.age <- sqldf("select Year, Name, total_marks, age from sturestotmarks group by Year, Name")
1510951147170:sturestotmarks <- sqldf("select Year, Name, age, (sum(Mark_Written+Mark_Oral))/2 as
1510951147170:total_marks from studentresult group by Year, Name")
1510951148024:View(sturestotmarks)
1510951155582:ggplot(data = sturestotmarks, aes(x = as.factor(Name), y = total_marks)) + geom_bar(aes(fill = Name),
1510951155588:stat = 'identity') + facet_grid(~Year) + labs(title="Total Marks of Each Student from 2013-2015",x = "Name of Students",y = "Marks Obtained") + scale_fill_manual(values = c("cyan", "red","dodgerblue3"))
1510951161266:stu.res.by.age <- sqldf("select Year, Name, total_marks, age from sturestotmarks group by Year, Name")
1510951171241:View(stu.res.by.age)
1510951292394:ggplot(data=stu.res.by.age,aes(x = age,y = total_marks)) + geom_smooth() + facet_grid(~Year) + labs(title="Relation between Age and Marks",x = "Age",y = "Marks Scored")
1510951371694:ggplot(data = stu.res.by.age,aes(x = age,y = total_mark)) + geom_smooth() + labs(title="Relation between Age and Marks",x = "Age", y = "Marks Scored")
1510951381052:ggplot(data = stu.res.by.age,aes(x = age,y = total_marks)) + geom_smooth() + labs(title="Relation between Age and Marks",x = "Age", y = "Marks Scored")
1510951595327:oral.vs.writen <- sqldf('select Name, sum(Mark_Written) as Total Marks in Written, sum(Mark_Oral) as Total Marks in Oral from studentresult group by name')
1510951652972:oral.vs.writen <- sqldf('select Name, sum(Mark_Written) as Total Marks in Written, sum(Mark_Oral) as Total Marks in Oral from studentresult group by name')
1510951666193:oral.vs.writen <- sqldf('select Name, sum(Mark_Written) as Total Marks in Written, sum(Mark_Oral) as Total Marks in Oral from studentresult group by Name')
1510951731658:oral.vs.writen <- sqldf("select Name, sum(Mark_Written) as Total Marks in Written, sum(Mark_Oral) as Total Marks in Oral from studentresult group by Name")
1510951788151:oral.vs.writen <- sqldf("select Name, sum(Mark_Written) as Total_Marks_in_Written, sum(Mark_Oral) as Total_Marks_in_Oral from studentresult group by Name")
1510951979442:oral.vs.writen <- melt(oral.vs.writen, id.vars = "Name")
1510951985738:View(oral.vs.writen)
1510952038802:ggplot(data = oral.vs.writen, aes(x = Name, y = value)) + geom_bar(stat = "identity", position = "dodge", aes(fill = oral.vs.writen$variable)) + labs(title="Marks in Oral vs Marks in Written", x = "Name", y = "Total_Marks") + theme(legend.title = element_blank()) + scale_fill_manual(values=c("voilet", "pink"))
1510952055147:ggplot(data = oral.vs.writen, aes(x = Name, y = value)) + geom_bar(stat = "identity", position = "dodge", aes(fill = oral.vs.writen$variable)) + labs(title="Marks in Oral vs Marks in Written", x = "Name", y = "Total_Marks") + theme(legend.title = element_blank()) + scale_fill_manual(values=c("purple", "pink"))
1510952143182:ggplot(data = stu.res.by.age,aes(x = age,y = total_marks)) + geom_smooth() + labs(title="Relation between Age and Marks",x = "Age", y = "Marks Scored")
1510952165528:ggplot(data = sturestotmarks, aes(x = as.factor(Name), y = total_marks)) + geom_bar(aes(fill = Name),
1510952165535:stat = 'identity') + facet_grid(~Year) + labs(title="Total Marks of Each Student from 2013-2015",x = "Name of Students",y = "Marks Obtained") + scale_fill_manual(values = c("cyan", "red","dodgerblue3"))
1510952501115:ggplot(data = sturestotmarks, aes(x = as.factor(Name), y = total_marks)) + geom_bar(aes(fill = Name),
1510952501121:stat = 'identity') + facet_grid(~Year) + labs(title="Total Marks of Each Student from 2013-2015",x = "Name of Students",y = "Marks Obtained")
1510952501838:+ scale_fill_manual(values = c("cyan", "red","dodgerblue3")) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510952576895:ggplot(data = sturestotmarks, aes(x = as.factor(Name), y = total_marks)) + geom_bar(aes(fill = Name), stat = 'identity') + facet_grid(~Year) + labs(title="Total Marks of Each Student from 2013-2015", x = "Name of Students", y = "Marks Obtained") + scale_fill_manual(values = c("cyan", "red","dodgerblue3")) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1510952925144:ggplot(data = oral.vs.writen, aes(x = Name, y = value)) + geom_bar(stat = "identity", position = "dodge", aes(fill = oral.vs.writen$variable)) + labs(title="Marks in Oral vs Marks in Written", x = "Name", y = "Total_Marks") + theme(legend.title = element_blank())
1511107124196:---
1511107124206:title: "Working with Data - Assignment 1"
1511107124214:author: "D17124379"
1511107124214:output: html_document
1511107124214:---
1511107124229:```{r setup,include=FALSE,warning=FALSE,error=FALSE,message=FALSE}
1511107124245:knitr::opts_chunk$set(echo = TRUE)
1511107124245:knitr::opts_chunk$set(fig.width=13, fig.height=8)
1511107124260:library(dplyr)
1511107124260:library(ggplot2)
1511107124260:library(readr)
1511107124276:```
1511107124276:###___Dublin Employment Trends Per Sector: 2006 - 2016___
1511107124292:The graph displays employment trends in Dublin from the year 2006 to 2016 in seven major sectors, namely, Construction, Finance, IT, Retail, Scientific Research, Tourism and Transport.
1511107124292:By looking at the graph it can be seen that IT and Tourism sectors have seen a huge increase in employment in the recent years. The growth was slow for these sectors in the beginning, but the employment rate has improved from twenty to forty-three.
1511107124307:The next two sectors which are catching up with these two sectors are Scientific and Transport. Scientific research has seen a sharp downfall in the employment after twentieth quarter, however it has been improving from the end of the quarter. Employment rate in Transport sector was doing good until twentieth quarter when it started facing the lows. However, after two quarters of downs in employment, it is now catching up and employment rates are improving immensely.
1511107124307:As can be seen in the graph, there were no or very less opportunities in the field of Finance. However, this scenario changed by the end of first quarter and even though there have been a high number of fluctuation in employment rates in the past twenty three quarters, the sector has been doing quite well now.
1511107124323:Construction sector shows one of the best employment trends in the initial quarters, but there are not too many jobs in this sector from quite some time now.  It has seen a downfall in the trends from almost twenty three quarters and is not making a great improvement in this respect too.
1511107124323:Same as Construction sector, Retail sector too had a good start as compared to other sectors in terms of employment opportunity. But it has been facing a serious decline from almost thirty quarters now.
1511107124323:Overall, serious measures should be taken in Retail and Construction sectors to improve the employment rate. Also, steps can be taken to lessen the fluctuations and improve consistency in the trends for Finance sector.
1511107124342:```{r,echo = FALSE,warning=FALSE,,error=FALSE,,message=FALSE}
1511107124342:knitr::opts_chunk$set(error = TRUE)
1511107124357:#Plots.R
1511107124357:#1.1
1511107124373:dub_emp_trend <- read_delim('dublin employment trends.txt', delim = ':')
1511107124561:qplot(Time, Employment, data = dub_emp_trend, xlab = "Quarterly Figures", ylab = "Trend", geom = 'line',
1511107124561:main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1511107125172:```
1511107125172:###__Dublin Property Trends: 2007 - 2016__
1511107125188:The following graph shows property trends like house and apartment rental, prices and house built in Dublin from 2007 to 2016.
1511107125188:Usually the variables shown in the graph (Apartment Rental, House Prices, House Rental, Houses Built) are interconnected. For example, if the houses available or built are less than the demand, then there are high chances that the rental prices will go up, or vice versa. Another way to think about this is that if the price to build houses is high then house built will be less. Now let's consider the property trend graph to find out if there is any relation between the variables presented.
1511107125203:As can be seen from the graph that trend lines for House Prices and House Built, and trend lines for Apt(Apartment) Rental and House Rental are trending closely.
1511107125203:From tenth quarter we can say that more houses were being build and house prices were slightly more. House and apartment rents were less during the first quarter. In twentieth and thirtieth quarter, there was a drop in building houses and the house prices also fell during these quarters. House and apartment rents also declined during this time. Near the end of thirtieth quarter, there was a slight increase in the house built and prices, but from fortieth quarter onwards they are not fluctuating much. However, there is a sharp increase in the House and Apartment Rentals towards the end of fortieth quarter.
1511107125203:Overall, based on the trends seen above, it can be said that house and apartment rents has a direct relation with Houses Built. Also, it can be concluded that House Prices have an inverse relationship with House Built.
1511107125219:```{r,echo = FALSE,warning=FALSE,,error=FALSE,,message=FALSE}
1511107125219:knitr::opts_chunk$set(error = TRUE)
1511107125235:#Plots.R
1511107125235:#1.2
1511107125250:dub_prop_trend <- read_tsv('dublin property trends.txt')
1511107125962:View(dub_prop_trend)
1511107125977:qplot(Time, Trend, data = dub_prop_trend, colour = Category, geom = 'line',
1511107125977:main = "Dublin Property Trends: 2007 - 2016")
1511107126636:```
1511108092719:library(httr)
1511108092847:library(ggplot2)
1511108092863:url_api = 'https://api.jcdecaux.com/vls/v1/stations?'
1511108092878:response = GET(url_api, query =
1511108092894:list(apiKey = '537eb2f907c103123b3b0bc9c53840771c9cb529',
1511108092894:contract = 'dublin'))
1511108095212:bike_info = content(response)
1511108095475:bikeData = data.frame(NULL)
1511108095492:len_bike = length(bike_info)
1511108095495:for (i in 1: len_bike){
1511108095495:df = data.frame(bike_info[i])
1511108095511:bikeData = rbind(bikeData, df)
1511108095521:}
1511108095763:View(bikeData)
1511108095763:#2.1
1511108095763:#Creating data frame for the columns of interest
1511108095778:bike_overview <- bikeData[ , c("name", "address", "banking", "bike_stands",
1511108095794:"available_bike_stands", "available_bikes")]
1511108095794:View(bike_overview)
1511108095809:#total number of bike stations
1511108095809:nrow(bike_overview)
1511108095825:#how many stations has banking facility available and how many do not
1511108095825:statn_with_bankfacility <- sum(bike_overview$banking == "TRUE")
1511108095841:statn_without_bankfacility <- sum(bike_overview$banking == "FALSE")
1511108095841:#total number of bike stands across all the bike stations
1511108095841:tot_bke_stnds <- sum(bike_overview$bike_stands)
1511108095906:#available number of bike stands across all stations
1511108095906:tot_avl_bke_stnds <- sum(bike_overview$available_bike_stands)
1511108095922:#bikes available
1511108095922:tot_bkes_avl <- sum(bike_overview$available_bikes)
1511108095938:#To put all the information collected above in one data frame
1511108095938:Information <- c("Total bike stations in Dublin", "Number of stations with banking facility",
1511108095938:"Number of stations without banking facility", "Total bike stands across all bike stations",
1511108095953:"Available bike stands", "Available bikes")
1511108095953:Count <- c(nrow(bike_overview), statn_with_bankfacility, statn_without_bankfacility,
1511108095969:tot_bke_stnds, tot_avl_bke_stnds, tot_bkes_avl)
1511108095969:Summary_dub_bikes <- data.frame(Information, Count)
1511108096000:View(Summary_dub_bikes)
1511108096000:#Finding the busiest bike stations(According to Dublin app,
1511108096016:#if there is less or no space available to park bikes, then it is considered busy)#
1511108096016:busy_bke_statn <- bike_overview$available_bike_stands < 5
1511108096031:busy_bke_statn_df <- bike_overview[busy_bke_statn, ]
1511108096031:View(busy_bke_statn_df)
1511108096097:#2.2
1511108198635:tot_bke_stnds
1511108295159:nrow(unique(bikeData))
1511108626692:len_bike = length(bike_info)
1511108631831:len_bike
1511109437557:statn.with.bankfacility <- sum(bike_overview$banking == "TRUE")
1511109437557:statn.without.bankfacility <- sum(bike_overview$banking == "FALSE")
1511109437573:#total number of bike stands across all the bike stations
1511109437573:tot.bke.stnds <- sum(bike_overview$bike_stands)
1511109437573:#available number of bike stands across all stations
1511109437588:tot.avl.bke.stnds <- sum(bike_overview$available_bike_stands)
1511109437604:#bikes available
1511109437604:tot.bkes.avl <- sum(bike_overview$available_bikes)
1511109437620:#Average available stands and bikes
1511109437620:avg.available.stands <- round(mean(bike_overview$available_bike_stands))
1511109437636:avg.available.bikes <- round(mean(bike_overview$available_bikes))
1511109437644:#To put all the information collected above in one data frame
1511109437647:Information <- c("Total bike stations in Dublin", "Number of stations with banking facility",
1511109437647:"Number of stations without banking facility", "Total bike stands across all bike stations",
1511109437662:"Available bike stands", "Available bikes", "Average available stands", "Average available bikes")
1511109437676:Count <- c(nrow(bike_overview), statn.with.bankfacility, statn.without.bankfacility,
1511109437684:tot.bke.stnds, tot.avl.bke.stnds, tot.bkes.avl, avg.available.stands, avg.available.bikes)
1511109437691:Summary_dub_bikes <- data.frame(Information, Count)
1511109437696:View(Summary_dub_bikes)
1511109569238:busy.bke.statn <- bike_overview$available_bike_stands < 5
1511109569239:busy.bke.statn_df <- bike_overview[busy_bke_statn, ]
1511109569239:View(busy.bke.statn.df)
1511109582406:busy.bke.statn <- bike_overview$available_bike_stands < 5
1511109582406:busy.bke.statn.df <- bike_overview[busy_bke_statn, ]
1511109582422:View(busy.bke.statn.df)
1511109904199:busy.bke.statn <- bike_overview$available_bike_stands < 5
1511109904200:busy.bke.statn.df <- bike_overview[busy_bke_statn, ]
1511109904200:View(busy.bke.statn.df)
1511110125919:tot.bke.statn <- nrow(bike_overview)
1511110372676:library(xtable)
1511110384418:install.packages(xtable)
1511110412250:install.packages('xtable')
1511110424872:library(xtable)
1511111720097:bike.info <- filter(bike_overview, available_bike_stands > 12 & available_bikes > 15)
1511111726786:View(bike.info)
1511111773886:qplot(name, available_bikes, data = bike.info, colour = banking, geom = 'line')
1511111787503:qplot(name, available_bikes, data = bike.info, colour = banking)
1511111839593:qplot(name, available_bikes, data = bike.info, colour = banking, geom = barplot(1, 2))
1511111849482:qplot(name, available_bikes, data = bike.info, colour = banking, geom = bar)
1511111915536:qplot(name, available_bikes, data = bike.info, colour = banking, geom = 'bar')
1511111932078:qplot(name, data = bike.info, colour = banking, geom = 'bar')
1511111959078:qplot(bike_available, data = bike.info, colour = name, geom = 'bar')
1511111987808:qplot(available_bikes, data = bike.info, colour = name, geom = 'bar')
1511112042452:qplot(names, data = bike.info, colour = name, geom = 'bar')
1511112073392:qplot(names, available_bikes, data = bike.info, colour = banking, geom = 'smooth')
1511112107801:qplot(names, available_bikes, data = bike.info, colour = banking)
1511112135162:qplot(available_bikes, names, data = bike.info, colour = banking)
1511112189686:qplot(name, available_bikes, data = bike.info, colour = banking)
1511112223999:qplot(name, available_bikes, data = bike.info, colour = banking, geom = c('point', 'smooth'))
1511112240439:qplot(name, available_bikes, data = bike.info, colour = banking, geom = 'line')
1511112256200:qplot(name, available_bikes, data = bike.info, colour = banking)
1511113242959:qplot(name, available_bikes, data = bike.info, xlab = "Name of Stations", ylab = "Number of bikes available", colour = banking)
1511113322359:qplot(name, available_bikes, data = bike.info, xlab = "Name of Stations", ylab = "Number of bikes available", colour = banking)
1511113763106:bike.info <- filter(bike_overview, available_bike_stands > 10 & available_bikes > 15)
1511113768456:View(bike.info)
1511113801531:bike.info <- filter(bike_overview, available_bike_stands > 12 & available_bikes > 15)
1511114151986:library(knitr)
1511114823739:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1511114823790:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1511114873920:#EXPLORATORY DATA ANALYSIS
1511114873922:#how many stops are there in Dublin?
1511114873922:length(unique(stops$stop_id))
1511114873938:#how many stops are there in each area?
1511114873938:stops.count <- summarise(stops, total_stops = sum(!is.na(stop_id)))
1511114873954:#how many buses can be accessed from a particular area?
1511114873954:bus.count.by.area <- summarise(stoptimes, no_of_buses_accessible = sum(!is.na(stop_name)))
1511114873969:#FIND TOP TEN WITH MAX
1511114873969:#minimum and maximum distance covered by every route?
1511114873985:trips.routes.grp1 <- group_by(trips.routes, route_id, route_long_name)
1511114873985:route.travelled <- summarise(trips.routes.grp1, min_dist_traveled = min(total_dist_traveled), max_dist_traveled = max(total_dist_traveled))
1511114873985:#trips made per route
1511114874004:trips.routes.grp2 <- group_by(trips.routes, route_id, route_short_name, route_long_name)
1511114874004:trips.per.route <- summarise(trips.routes.grp2, total.trips.made = sum(!is.na(trip_id)))
1511114874004:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name))
1511114874019:#trips made for each service
1511114874019:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1511114874038:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1511114883131:library(readr)
1511114883133:library(dplyr)
1511114883133:#download the dataset from the internet, unzip it and view the files
1511114883148:download.file('https://data.dublinked.ie/dataset/a97edfe6-1ee2-494c-9998-c7ab29214d59/resource/e95bd0b4-1ac3-471d-93ea-2d129c8e8dfe/download/googletransitdublinbusp20130315-1546.zip',
1511114883148:destfile = 'DublinBusGTFS.zip')
1511114893413:unzip('DublinBusGTFS.zip', exdir = './DublinBusGTFSData')
1511114894314:list.files('DublinBusGTFSData')
1511114894314:#importing the files to R
1511114894329:agency <- read_csv('./DublinBusGTFSData/agency.txt')
1511114894346:calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1511114894364:calendar.dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1511114894381:routes <- read_csv('./DublinBusGTFSData/routes.txt')
1511114894400:shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1511114894625:stop.times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1511114897266:stops <- read_csv('./DublinBusGTFSData/stops.txt')
1511114897288:transfers <- read_csv('./DublinBusGTFSData/transfers.txt')
1511114897288:trips <- read_csv('./DublinBusGTFSData/trips.txt')
1511114897335:#Shaping the data frames for the necessary files
1511114897335:#As all the entries under the variables 'trip_headsign' and 'block_id' are NAs, hence ignoring these columns
1511114897335:trips <- trips %>%
1511114897351:select(-c(trip_headsign, block_id)) %>%
1511114897351:group_by(route_id)
1511114897384:#Grouping by stop name for the table Stops
1511114897386:stops <- group_by(stops, stop_name)
1511114897488:#Entries under 'departure_time' are exactly same as entries under 'arrival_time',
1511114897495:#hence ignoring departure_time. Also, there is no change in the pickup type and dropoff type
1511114897501:#for all the entries, hence removing these table too from the data frame.
1511114897502:stop.times <- select(stop.times, -c(departure_time, pickup_type, drop_off_type))
1511114897626:#stop.distances <- stoptimes %>%
1511114897633:#  group_by(trip_id, stop_headsign) %>%
1511114897633:#  summarise(max_shape_traveled=max(shape_dist_traveled)) %>%
1511114897633:#  ungroup()
1511114897649:#Grouping data by 'shape_id' and finding maximum distance/ shape travelled
1511114897649:shapes <- group_by(shapes, shape_id)
1511114897684:dist.shape.covered <- summarise(shapes, total_dist_traveled = max(shape_dist_traveled))
1511114897697:#Removing 'agency_id' and 'route_type' as they do not provide critical information about the data
1511114897699:routes <- select(routes, -c(agency_id, route_type))
1511114897715:#Removing 'start_date' and 'end_date' as it is not useful in the analysis
1511114897715:calendar <- select(calendar, -c(start_date, end_date))
1511114897746:stoptimes <- inner_join(stops, stop.times, by = 'stop_id')
1511114897919:shapes.trips <- inner_join(dist.shape.covered, trips, by = 'shape_id')
1511114897935:trips.routes <- inner_join(routes, shapes.trips, by = 'route_id')
1511114897950:trips.stoptimes <- inner_join(stoptimes, trips.routes, by = 'trip_id')
1511114898466:detailed.trips.frame <- inner_join(calendar, trips.stoptimes, by = 'service_id')
1511114899200:#EXPLORATORY DATA ANALYSIS
1511114899200:#how many stops are there in Dublin?
1511114899216:length(unique(stops$stop_id))
1511114899216:#how many stops are there in each area?
1511114899232:stops.count <- summarise(stops, total_stops = sum(!is.na(stop_id)))
1511114899279:#how many buses can be accessed from a particular area?
1511114899289:bus.count.by.area <- summarise(stoptimes, no_of_buses_accessible = sum(!is.na(stop_name)))
1511114899398:#FIND TOP TEN WITH MAX
1511114899398:#minimum and maximum distance covered by every route?
1511114899413:trips.routes.grp1 <- group_by(trips.routes, route_id, route_long_name)
1511114899429:route.travelled <- summarise(trips.routes.grp1, min_dist_traveled = min(total_dist_traveled), max_dist_traveled = max(total_dist_traveled))
1511114899429:#trips made per route
1511114899449:trips.routes.grp2 <- group_by(trips.routes, route_id, route_short_name, route_long_name)
1511114899466:trips.per.route <- summarise(trips.routes.grp2, total.trips.made = sum(!is.na(trip_id)))
1511114899481:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name))
1511114900110:#trips made for each service
1511114900110:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1511114900126:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1511114901626:#3.2
1511114901626:#Route = 39A
1511114901626:route39A <- filter(trips.stoptimes, route_short_name == '39A')
1511114902066:#how many buses arrives/ departs from each area?
1511114902066:route39A.grp1 <- route39A %>%
1511114902082:group_by(stop_name) %>%
1511114902082:summarise(no.of.buses = sum(!is.na(trip_id)))
1511114902128:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses),
1511114902136:y = no.of.buses), fill = "dodgerblue4") + labs(x = "Name of Stops", y = "Number of Buses", title = "Number of 39A buses arriving/ departing in each area") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1511114902463:#data frames based on directions(outbound(1)-going towards college/ inbound(0)-coming towards home)
1511114902472:route39A.dir1 <- route39A %>%
1511114902480:filter(direction_id == 1) %>%
1511114902485:arrange(arrival_time)
1511114902532:route39A.dir0 <- route39A %>%
1511114902535:filter(direction_id == 0) %>%
1511114902535:arrange(arrival_time)
1511114903016:#Filtering out particular stop that is 'Navan Road'(stop_sequence 32) from where I take bus to college
1511114903016:stop32 <- route39A.dir1 %>%
1511114903031:filter(stop_sequence == 32) %>%
1511114903031:arrange(arrival_time)
1511114903064:#changing the format of 'arrival_time' variable
1511114903066:stop32$arrival_time <- format(stop32$arrival_time, "%H:%M:%S")
1511114903082:#How many buses go towards college
1511114903082:length(unique(stop32$trip_id))
1511114903082:#Filtering out particular stop that is 'Aston Quay'(stop_sequence 22) from where I take bus to college
1511114903113:stop22 <- route39A.dir0 %>%
1511114903120:filter(stop_sequence == 22) %>%
1511114903129:arrange(arrival_time)
1511114903132:stop22$arrival_time <- format(stop22$arrival_time, "%H:%M:%S")
1511114903148:#How many buses come in the direction of my home when coming back from college?
1511114903163:length(unique(stop22$trip_id))
1511114903163:#Frequency of buses before 11am while going towards college
1511114903186:y <- "11:00:00"
1511114903194:bus.avl.32 <- strptime(stop32$arrival_time, "%H:%M:%S") < strptime(y, "%H:%M:%S")
1511114903198:sum(bus.avl.32)
1511114903214:#first 39A bus at my stop
1511114903280:min(stop32$arrival_time)
1511114903280:#Frequency of buses after 6pm when coming back home in the evening
1511114903297:x <- "18:00:00"
1511114903304:bus.avl.22 <- strptime(stop22$arrival_time, "%H:%M:%S") > strptime(x, "%H:%M:%S")
1511114903315:sum(bus.avl.22)
1511114903315:#last bus when coming back from college
1511114903331:max(stop22$arrival_time)
1511114903331:#Time taken to reach college
1511114903346:#Mostly, I take bus around 9.30am, so I am chosing a trip_id for this '3110.2978.0-39A-b12-1.247.I' from stop_sequence 32
1511114903360:# and I get down at stop_sequence 50 and stop no. 1479
1511114903367:time.to.reach <- (route39A.dir1$stop_sequence == 32 | route39A.dir1$stop_sequence == 50) &
1511114903373:route39A.dir1$trip_id == '3110.2978.0-39A-b12-1.247.I'
1511114903381:time.to.reach.stp50 <- route39A.dir1[time.to.reach, ]
1511114903381:time.to.reach.stp50$arrival_time <- format(time.to.reach.stp50$arrival_time, "%H:%M:%S")
1511114903396:max.time <- max(time.to.reach.stp50$arrival_time)
1511114903412:min.time <- min(time.to.reach.stp50$arrival_time)
1511114903412:total.time.taken <- strptime(max.time, "%H:%M:%S") - strptime(min.time, "%H:%M:%S")
1511114903427:round(total.time.taken)
1511114903427:#time taken to come back home
1511114903449:#Mostly, I take bus around 7 pm, so I am chosing a trip_id for this '10039.2955.0-39A-b12-1.244.O' from stop_sequence 32
1511114903457:# and I get down at stop_sequence 50 and stop no. 1479
1511114903462:time.to.reach.back <- (route39A.dir0$stop_sequence == 22 | route39A.dir0$stop_sequence == 39) &
1511114903462:route39A.dir0$trip_id == '10039.2955.0-39A-b12-1.244.O'
1511114903478:time.to.reach.stp39 <- route39A.dir0[time.to.reach.back, ]
1511114903494:time.to.reach.stp39$arrival_time <- format(time.to.reach.stp39$arrival_time, "%H:%M:%S")
1511114903503:max.timeb <- max(time.to.reach.stp39$arrival_time)
1511114903503:min.timeb <- min(time.to.reach.stp39$arrival_time)
1511114903518:tot.time.taken <- strptime(max.timeb, "%H:%M:%S") - strptime(min.timeb, "%H:%M:%S")
1511114903518:round(tot.time.taken)
1511114903534:#How many stops are there in my route
1511114903534:df.filtered.route <- route39A.dir1 %>%
1511114903558:filter(trip_id == '3110.2978.0-39A-b12-1.247.I') %>%
1511114903565:arrange(stop_sequence)
1511114903569:all.stops <- between(df.filtered.route$stop_sequence, 32, 50)
1511114903584:all.stops <- sum(all.stops)
1511114903600:total.stops <- all.stops - 2
1511114903600:#Average distance travelled per trip
1511114903621:avg.dist <- mean(trips.stoptimes$total_dist_traveled)
1511114903632:#
1511114903635:route39A.grp3 <- group_by(route39A, trip_id)
1511115235203:tot.stops <- length(unique(stops$stop_id))
1511115260781:cat("Total number of stops in Dublin", tot.stops)
1511115317095:cat("Number of stops in each area", stops.count)
1511115378988:View(stops.count)
1511115404466:stops.count <- stops %>%
1511115404466:summarise(total_stops = sum(!is.na(stop_id))) %>%
1511115404466:arrange(total_stops)
1511115422575:head(stops.count)
1511115446637:stops.count <- stops %>%
1511115446638:summarise(total_stops = sum(!is.na(stop_id))) %>%
1511115446638:arrange(desc(total_stops))
1511115450579:head(stops.count)
1511115612295:print("Total number of stops in each area")
1511115622042:print(Total number of stops in each area)
1511115650436:noquote(Total number of stops in each area)
1511115698292:cat("Total number of stops in each area")
1511115871623:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name))
1511115942609:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name)) + labs(x = "Routes(by short name)", y = "Trips made per route")
1511115956501:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1511115956505:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1511116506624:View(route.travelled)
1511116539154:---
1511116539160:title: "Working with Data - Assignment 1"
1511116539164:author: "D17124379"
1511116539164:output: html_document
1511116539180:---
1511116539180:```{r setup,include=FALSE,warning=FALSE,error=FALSE,message=FALSE}
1511116539180:knitr::opts_chunk$set(echo = TRUE)
1511116539195:knitr::opts_chunk$set(fig.width=13, fig.height=8)
1511116539195:library(dplyr)
1511116539211:library(ggplot2)
1511116539211:library(readr)
1511116539211:library(httr)
1511116539227:library(knitr)
1511116539227:```
1511116539242:###___Dublin Employment Trends Per Sector: 2006 - 2016___
1511116539242:The graph displays employment trends in Dublin from the year 2006 to 2016 in seven major sectors, namely, Construction, Finance, IT, Retail, Scientific Research, Tourism and Transport.
1511116539259:By looking at the graph it can be seen that IT and Tourism sectors have seen a huge increase in employment in the recent years. The growth was slow for these sectors in the beginning, but the employment rate has improved from twenty to forty-three.
1511116539259:The next two sectors which are catching up with these two sectors are Scientific and Transport. Scientific research has seen a sharp downfall in the employment after twentieth quarter, however it has been improving from the end of the quarter. Employment rate in Transport sector was doing good until twentieth quarter when it started facing the lows. However, after two quarters of downs in employment, it is now catching up and employment rates are improving immensely.
1511116539275:As can be seen in the graph, there were no or very less opportunities in the field of Finance. However, this scenario changed by the end of first quarter and even though there have been a high number of fluctuation in employment rates in the past twenty three quarters, the sector has been doing quite well now.
1511116539275:Construction sector shows one of the best employment trends in the initial quarters, but there are not too many jobs in this sector from quite some time now.  It has seen a downfall in the trends from almost twenty three quarters and is not making a great improvement in this respect too.
1511116539291:Same as Construction sector, Retail sector too had a good start as compared to other sectors in terms of employment opportunity. But it has been facing a serious decline from almost thirty quarters now.
1511116539291:Overall, serious measures should be taken in Retail and Construction sectors to improve the employment rate. Also, steps can be taken to lessen the fluctuations and improve consistency in the trends for Finance sector.
1511116539306:```{r,echo = FALSE,warning=FALSE,,error=FALSE,,message=FALSE}
1511116539308:#Plots.R
1511116539308:#1.1
1511116539324:dub_emp_trend <- read_delim('dublin employment trends.txt', delim = ':')
1511116539340:qplot(Time, Employment, data = dub_emp_trend, xlab = "Quarterly Figures", ylab = "Trend", geom = 'line',
1511116539340:main = "Dublin Employment Trends Per Sector: 2006 - 2016") + facet_grid(. ~ Sector)
1511116539972:```
1511116539988:###__Dublin Property Trends: 2007 - 2016__
1511116539988:The following graph shows property trends like house and apartment rental, prices and house built in Dublin from 2007 to 2016.
1511116539988:Usually the variables shown in the graph (Apartment Rental, House Prices, House Rental, Houses Built) are interconnected. For example, if the houses available or built are less than the demand, then there are high chances that the rental prices will go up, or vice versa. Another way to think about this is that if the price to build houses is high then house built will be less. Now let's consider the property trend graph to find out if there is any relation between the variables presented.
1511116540004:As can be seen from the graph that trend lines for House Prices and House Built, and trend lines for Apt(Apartment) Rental and House Rental are trending closely.
1511116540035:From tenth quarter we can say that more houses were being build and house prices were slightly more. House and apartment rents were less during the first quarter. In twentieth and thirtieth quarter, there was a drop in building houses and the house prices also fell during these quarters. House and apartment rents also declined during this time. Near the end of thirtieth quarter, there was a slight increase in the house built and prices, but from fortieth quarter onwards they are not fluctuating much. However, there is a sharp increase in the House and Apartment Rentals towards the end of fortieth quarter.
1511116540053:Overall, based on the trends seen above, it can be said that house and apartment rents has a direct relation with Houses Built. Also, it can be concluded that House Prices have an inverse relationship with House Built.
1511116540053:```{r,echo = FALSE,warning=FALSE,,error=FALSE,,message=FALSE}
1511116540805:#Plots.R
1511116540821:#1.2
1511116540821:dub_prop_trend <- read_tsv('dublin property trends.txt')
1511116540836:View(dub_prop_trend)
1511116540852:qplot(Time, Trend, data = dub_prop_trend, colour = Category, geom = 'line',
1511116540852:main = "Dublin Property Trends: 2007 - 2016")
1511116541421:```
1511116541432:###__Dublin Bikes__
1511116541442:After its launch in 2009, Dublin bikes has been serving as one of the most popular mode of transportation in Dublin. It is a public bicycle rental scheme which serves as an easy way of commute to college, place of work, restaurants, home etcetera. Dublin bikes were launched with 450 bikes and 40 stations. Today it comprises of 100 stations with over three thousand bikes available for the  riders(Refer to the data frame 'Summary_dub_bikes').
1511116541451:```{r,echo = FALSE,warning=FALSE,,error=FALSE,,message=FALSE}
1511116541460:#BikeInfo.R
1511116541467:#2.1
1511116541473:#Extracting real time bikes information from the following url
1511116541481:url_api = 'https://api.jcdecaux.com/vls/v1/stations?'
1511116541488:response = GET(url_api, query =
1511116541495:list(apiKey = '537eb2f907c103123b3b0bc9c53840771c9cb529',
1511116541939:contract = 'dublin'))
1511116542252:bike_info = content(response)
1511116542283:bikeData = data.frame(NULL)
1511116542283:len_bike = length(bike_info)
1511116542298:#loop to create data frame
1511116542298:for (i in 1: len_bike){
1511116542369:df = data.frame(bike_info[i])
1511116542385:bikeData = rbind(bikeData, df)
1511116542385:}
1511116542638:View(bikeData)
1511116542654:#Creating data frame for only the columns of interest
1511116542654:bike_overview <- bikeData[ , c("name", "address", "banking", "bike_stands",
1511116542669:"available_bike_stands", "available_bikes")]
1511116542669:View(bike_overview)
1511116542685:```
1511116542685:2.1 When having a brief conversation with the manager of Dublin bikes, the following information such as total number of bike stations, stations with or without baking facility, total bike stands across all the stations and how many are available in them and available bikes available will be some of the interesting points he would be interested to know.Also, he would want to know the busiest stations among all the stations. According to Dublin app if there is less or no space available to park bikes, then it is considered busy and based on this information busy stations has been tried to find out.
1511116542701:```{r,echo = FALSE,warning=FALSE,,error=FALSE,,message=FALSE}
1511116542701:#total number of bike stations
1511116542716:tot.bke.statn <- nrow(bike_overview)
1511116542716:#how many stations has banking facility available and how many do not
1511116542732:statn.with.bankfacility <- sum(bike_overview$banking == "TRUE")
1511116542732:statn.without.bankfacility <- sum(bike_overview$banking == "FALSE")
1511116542748:#total number of bike stands across all the bike stations
1511116542748:tot.bke.stnds <- sum(bike_overview$bike_stands)
1511116542748:#available number of bike stands across all stations
1511116542763:tot.avl.bke.stnds <- sum(bike_overview$available_bike_stands)
1511116542763:#bikes available
1511116542779:tot.bkes.avl <- sum(bike_overview$available_bikes)
1511116542779:#Average available stands and bikes
1511116542794:avg.available.stands <- round(mean(bike_overview$available_bike_stands))
1511116542794:avg.available.bikes <- round(mean(bike_overview$available_bikes))
1511116542810:#To put all the information collected above in one data frame
1511116542810:Information <- c("Total bike stations in Dublin", "Number of stations with banking facility",
1511116542810:"Number of stations without banking facility", "Total bike stands across all bike stations",
1511116542826:"Available bike stands", "Available bikes", "Average available stands", "Average available bikes")
1511116542826:Count <- c(nrow(bike_overview), statn.with.bankfacility, statn.without.bankfacility,
1511116542841:tot.bke.stnds, tot.avl.bke.stnds, tot.bkes.avl, avg.available.stands, avg.available.bikes)
1511116542841:Summary_dub_bikes <- data.frame(Information, Count)
1511116542904:kable(Summary_dub_bikes)
1511116542919:#to find a list of most busy bike stations in Dublin
1511116542935:busy.bke.statn <- bike_overview$available_bike_stands < 5
1511116542935:busy.bke.statn.df <- bike_overview[busy.bke.statn, ]
1511116542951:kable(busy.bke.statn.df)
1511116543175:```
1511116543188:2.2 Suppose I want to take a bike to go to a friend's place and I do not want to rely on the bus for the entire journey to save time. So I want to check the stations where there are atleast 15 bikes available, so that I am sure that by the time I will reach that station I will still have bikes available for me. Also, due to the system of dublin bikes I will need to park somewhere as well, so I will also like to see the stations where there are sufficient number of bike stands available.So a data frame is obtained firs considering this in mind. Then a graph is plotted filtering on the basis of banking available at the station or not, as this is also an important aspect for me to know as I am not sure of the available balance in my leap card.
1511116543193:```{r,echo = FALSE,warning=FALSE,,error=FALSE,,message=FALSE}
1511116543193:bike.info <- filter(bike_overview, available_bike_stands > 12 & available_bikes > 15)
1511116543209:qplot(name, available_bikes, data = bike.info, xlab = "Name of Stations", ylab = "Number of bikes available", colour = banking)
1511116543533:```
1511116543548:###__Dublin Bus__
1511116543548:Dublin bus is huge transportation network in Dublin, used by almost every class and category of people. There can be many interesting points to know about this network. But before performing the exploratory data analysis, dataset was downloaded from the dublin bus website, viewed to find the tables of interest and then joined to use the information in a meaningful manner and obtain answers to relevant questions.
1511116543564:```{r,echo = FALSE,warning=FALSE,,error=FALSE,,message=FALSE}
1511116543564:#download the dataset from the internet, unzip it and view the files
1511116543591:download.file('https://data.dublinked.ie/dataset/a97edfe6-1ee2-494c-9998-c7ab29214d59/resource/e95bd0b4-1ac3-471d-93ea-2d129c8e8dfe/download/googletransitdublinbusp20130315-1546.zip',
1511116543607:destfile = 'DublinBusGTFS.zip')
1511116547539:unzip('DublinBusGTFS.zip', exdir = './DublinBusGTFSData')
1511116548473:files.list <- list.files('DublinBusGTFSData')
1511116548489:#importing the files to R
1511116548489:agency <- read_csv('./DublinBusGTFSData/agency.txt')
1511116548504:calendar <- read_csv('./DublinBusGTFSData/calendar.txt')
1511116548551:calendar.dates <- read_csv('./DublinBusGTFSData/calendar_dates.txt')
1511116548567:routes <- read_csv('./DublinBusGTFSData/routes.txt')
1511116548593:shapes <- read_csv('./DublinBusGTFSData/shapes.txt')
1511116548817:stop.times <- read_csv('./DublinBusGTFSData/stop_times.txt')
1511116553960:stops <- read_csv('./DublinBusGTFSData/stops.txt')
1511116553995:transfers <- read_csv('./DublinBusGTFSData/transfers.txt')
1511116554010:trips <- read_csv('./DublinBusGTFSData/trips.txt')
1511116554120:#Shaping the data frames for the necessary files
1511116554135:trips <- trips %>%
1511116554135:select(-c(trip_headsign, block_id)) %>%
1511116554151:group_by(route_id)
1511116554167:stops <- group_by(stops, stop_name)
1511116554198:stop.times <- select(stop.times, -c(departure_time, pickup_type, drop_off_type))
1511116554198:shapes <- group_by(shapes, shape_id)
1511116554229:dist.shape.covered <- summarise(shapes, total_dist_traveled = max(shape_dist_traveled))
1511116554245:routes <- select(routes, -c(agency_id, route_type))
1511116554260:calendar <- select(calendar, -c(start_date, end_date))
1511116554286:#joining tables of interest
1511116554286:stoptimes <- inner_join(stops, stop.times, by = 'stop_id')
1511116554484:shapes.trips <- inner_join(dist.shape.covered, trips, by = 'shape_id')
1511116554489:trips.routes <- inner_join(routes, shapes.trips, by = 'route_id')
1511116554505:trips.stoptimes <- inner_join(stoptimes, trips.routes, by = 'trip_id')
1511116554736:detailed.trips.frame <- inner_join(calendar, trips.stoptimes, by = 'service_id')
1511116555033:```
1511116555049:After the above mentioned steps, exploratory analysis was performed and some important questions were tried to answer using the dublin bus data set.
1511116555049:```{r,echo = FALSE,warning=FALSE,,error=FALSE,,message=FALSE}
1511116555065:#DublinBus.R
1511116555065:#3.1
1511116555080:#EXPLORATORY DATA ANALYSIS
1511116555096:#how many stops are there in Dublin?
1511116555096:tot.stops <- length(unique(stops$stop_id))
1511116555111:cat("Total number of stops in Dublin", tot.stops)
1511116555111:#how many stops are there in each area?
1511116555129:stops.count <- stops %>%
1511116555129:summarise(total_stops = sum(!is.na(stop_id))) %>%
1511116555488:arrange(desc(total_stops))
1511116555551:cat("Total number of stops in each area")
1511116555567:head(stops.count)
1511116555582:#how many buses can be accessed from a particular area?
1511116555582:bus.count.by.area <- stoptimes %>%
1511116555598:summarise(no_of_buses_accessible = sum(!is.na(stop_name))) %>%
1511116555598:arrange(desc(no_of_buses_accessible))
1511116555723:cat("Number of buses available from each area")
1511116555739:head(bus.count.by.area)
1511116555754:#minimum and maximum distance covered by every route?
1511116555754:trips.routes.grp1 <- group_by(trips.routes, route_id, route_long_name)
1511116555770:route.travelled <- summarise(trips.routes.grp1, min_dist_traveled = min(total_dist_traveled), max_dist_traveled = max(total_dist_traveled))
1511116555786:arrange(desc(route.travelled))
1511116555801:cat("Minimum and Maximum distance travelled by bus on each route")
1511116555801:head(route.travelled)
1511116555817:#trips made per route
1511116555832:trips.routes.grp2 <- group_by(trips.routes, route_id, route_short_name, route_long_name)
1511116555848:trips.per.route <- summarise(trips.routes.grp2, total.trips.made = sum(!is.na(trip_id)))
1511116555864:ggplot(data = trips.routes) + geom_bar(mapping = aes(x = route_short_name)) + labs(x = "Routes(by short name)", y = "Trips made per route")
1511116556640:#trips made for each service
1511116556663:qplot(sort(service_id), data = trips.routes, xlab = "Services", ylab = "No. of Trips",
1511116556672:geom = 'bar', main = "Trips covered for each service", colour = I('cyan'))
1511116557186:```
1511118245058:View(route39A)
1511118421533:ggplot(data = route39A.grp1) + geom_col(aes(x = reorder(stop_name, -no.of.buses),
1511118421540:y = no.of.buses), fill = "dodgerblue4") + labs(x = "Name of Stops", y = "Number of Buses", title = "Number of 39A buses arriving/ departing in each area") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
1511118653942:View(route39A.dir0)
1511118664738:View(route39A.dir1)
1511118729981:View(time.to.reach.stp39)
1511118784110:View(df.filtered.route)
1511119106215:route39A.dir0<- route39A.dir0 %>%
1511119106215:group_by(trip_id) %>%
1511119106336:mutate(TotalTime=(strptime(max(arrival_time), "%H:%M:%S") - strptime(min(arrival_time), "%H:%M:%S")))
1511119568319:route39A.dir0$arrival_time<-as.POSIXct(route39A.dir0$arrival_time,format = "%H:%M:%S")
1511119598887:route39A.dir0<- route39A.dir0 %>%
1511119598888:group_by(trip_id) %>%
1511119598904:mutate(TotalTime=(strptime(max(arrival_time), "%H:%M:%S") - strptime(min(arrival_time), "%H:%M:%S")))
1511119653199:route39A.dir0$arrival_time<-as.POSIXct(route39A.dir0$arrival_time,format = "%H:%M:%S")
1511119696144:route39A.dir0<- route39A.dir0 %>%
1511119696144:group_by(trip_id) %>%
1511119696160:mutate(TotalTime=(max(arrival_time) - min(arrival_time)))
1511119777500:route39A.dir0<- route39A.dir0 %>%
1511119777503:group_by(trip_id) %>%
1511119777503:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511119964801:route39A.dir0<- route39A.dir0 %>%
1511119964807:group_by(trip_id) %>%
1511119964810:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511119964873:route39A.dir0$start_time<-as.POSIXct(route39A.dir0$start_time,format = "%H:%M:%S")
1511119964873:route39A.dir0$end_time<-as.POSIXct(route39A.dir0$end_time,format = "%H:%M:%S")
1511120085608:route39A.dir0<- route39A.dir0 %>%
1511120085609:group_by(trip_id) %>%
1511120085609:mutate(time_taken=end_time-start_time)
1511120166316:route39A.dir0<- route39A.dir0 %>%
1511120166325:group_by(trip_id) %>%
1511120166332:mutate(time_taken=difftime(end_time,start_time,units="mins")
1511120191092:route39A.dir0<- route39A.dir0 %>%
1511120191099:group_by(trip_id) %>%
1511120191106:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511120211606:route39A.dir0<- route39A.dir0 %>%
1511120211613:group_by(trip_id) %>%
1511120211629:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511120318152:route39A.dir1<- route39A.dir1 %>%
1511120318160:group_by(trip_id) %>%
1511120318160:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511120318296:route39A.dir1$start_time<-as.POSIXct(route39A.dir1$start_time,format = "%H:%M:%S")
1511120318296:route39A.dir1$end_time<-as.POSIXct(route39A.dir1$end_time,format = "%H:%M:%S")
1511120318296:route39A.dir1<- route39A.dir1 %>%
1511120318312:group_by(trip_id) %>%
1511120318312:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511120623709:ggplot()+geom_line(data=route39A.dir0,aes(x=arrival_time,y=time_taken))+geom_line(data=route39A.dir1,aes(x=arrival_time,y=time_taken))
1511120756954:ggplot()+geom_smooth(data=route39A.dir0,aes(x=arrival_time,y=time_taken))+geom_smooth(data=route39A.dir1,aes(x=arrival_time,y=time_taken))
1511120819566:ggplot()+geom_smooth(data=route39A.dir0,aes(x=arrival_time,y=time_taken),na.rm=T)+geom_smooth(data=route39A.dir1,aes(x=arrival_time,y=time_taken))
1511120830408:ggplot()+geom_smooth(data=route39A.dir0,aes(x=arrival_time,y=time_taken),na.rm=T)+geom_smooth(data=route39A.dir1,aes(x=arrival_time,y=time_taken),na.rm=T)
1511120959772:route39A.dir0$time_taken<-as.POSIXct(route39A.dir0$time_taken,format = "%M")
1511120978897:route39A.dir0$time_taken<-as.POSIXct(route39A.dir0$time_taken,format = "%M")
1511121074832:route39A.dir0$time_taken<-as.numeric(route39A.dir0$time_taken)
1511121110487:route39A.dir1$time_taken<-as.numeric(route39A.dir1$time_taken)
1511121113826:ggplot()+geom_smooth(data=route39A.dir0,aes(x=arrival_time,y=time_taken),na.rm=T)+geom_smooth(data=route39A.dir1,aes(x=arrival_time,y=time_taken),na.rm=T)
1511121251019:route39A.dir1$arrival_time<-as.POSIXct(route39A.dir1$arrival_time,format = "%H:%M:%S")
1511121255146:route39A.dir0$arrival_time<-as.POSIXct(route39A.dir0$arrival_time,format = "%H:%M:%S")
1511121259716:ggplot()+geom_smooth(data=route39A.dir0,aes(x=arrival_time,y=time_taken),na.rm=T)+geom_smooth(data=route39A.dir1,aes(x=arrival_time,y=time_taken),na.rm=T)
1511121362329:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T)+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T)
1511121389705:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T)+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T)
1511121544651:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")
1511121762748:route39A.dir1$start_time<-format(route39A.dir1$start_time,"%H:%M:%S")
1511121784548:route39A.dir0$start_time<-format(route39A.dir0$start_time,"%H:%M:%S")
1511121788242:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")+labs(x="Start Time",y="Total Time Taken")
1511121825472:ggplot()+geom_line(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_line(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")+labs(x="Start Time",y="Total Time Taken")
1511121864128:route39A.dir1<- route39A.dir1 %>%
1511121864134:group_by(trip_id) %>%
1511121864134:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511121864178:route39A.dir1$start_time<-as.POSIXct(route39A.dir1$start_time,format = "%H:%M:%S")
1511121864193:route39A.dir1$end_time<-as.POSIXct(route39A.dir1$end_time,format = "%H:%M:%S")
1511121864193:route39A.dir1<- route39A.dir1 %>%
1511121864193:group_by(trip_id) %>%
1511121864209:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511121864246:route39A.dir1$time_taken<-as.numeric(route39A.dir1$time_taken)
1511121864246:r
1511121878499:route39A.dir0<- route39A.dir0 %>%
1511121878505:group_by(trip_id) %>%
1511121878506:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511121878537:route39A.dir0$start_time<-as.POSIXct(route39A.dir0$start_time,format = "%H:%M:%S")
1511121878553:route39A.dir0$end_time<-as.POSIXct(route39A.dir0$end_time,format = "%H:%M:%S")
1511121878553:route39A.dir0<- route39A.dir0 %>%
1511121878568:group_by(trip_id) %>%
1511121878568:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511121878615:route39A.dir0$time_taken<-as.numeric(route39A.dir0$time_taken)
1511121878615:rou
1511121922127:route39A.dir0$start_time<-strptime(route39A.dir0$start_time,"%H:%M:%S")
1511121925997:route39A.dir1$start_time<-strptime(route39A.dir1$start_time,"%H:%M:%S")
1511121928256:ggplot()+geom_line(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_line(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")+labs(x="Start Time",y="Total Time Taken")
1511121952310:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")+labs(x="Start Time",y="Total Time Taken")
1511122036207:smooth
1511122041219:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")+labs(x="Start Time",y="Total Time Taken")
1511122067217:route39A.dir1<- route39A.dir1 %>%
1511122067223:group_by(trip_id) %>%
1511122067223:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511122067286:route39A.dir1$start_time<-as.POSIXct(route39A.dir1$start_time,format = "%H:%M:%S")
1511122067286:route39A.dir1$end_time<-as.POSIXct(route39A.dir1$end_time,format = "%H:%M:%S")
1511122067301:route39A.dir1<- route39A.dir1 %>%
1511122067312:group_by(trip_id) %>%
1511122067312:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511122067343:route39A.dir1$time_taken<-as.numeric(route39A.dir1$time_taken)
1511122072314:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")+labs(x="Start Time",y="Total Time Taken")
1511122087254:route39A.dir0<- route39A.dir0 %>%
1511122087264:group_by(trip_id) %>%
1511122087270:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511122087286:route39A.dir0$start_time<-as.POSIXct(route39A.dir0$start_time,format = "%H:%M:%S")
1511122087302:route39A.dir0$end_time<-as.POSIXct(route39A.dir0$end_time,format = "%H:%M:%S")
1511122087317:route39A.dir0<- route39A.dir0 %>%
1511122087333:group_by(trip_id) %>%
1511122087333:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511122087380:route39A.dir0$time_taken<-as.numeric(route39A.dir0$time_taken)
1511122092158:route39A.dir0<- route39A.dir0 %>%
1511122092169:group_by(trip_id) %>%
1511122092174:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511122092237:route39A.dir0$start_time<-as.POSIXct(route39A.dir0$start_time,format = "%H:%M:%S")
1511122092237:route39A.dir0$end_time<-as.POSIXct(route39A.dir0$end_time,format = "%H:%M:%S")
1511122092252:route39A.dir0<- route39A.dir0 %>%
1511122092268:group_by(trip_id) %>%
1511122092268:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511122092315:route39A.dir0$time_taken<-as.numeric(route39A.dir0$time_taken)
1511122099283:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")+labs(x="Start Time",y="Total Time Taken")
1511122110189:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")+labs(x="Start Time",y="Total Time Taken")
1511122132737:route39A.dir0<- route39A.dir0 %>%
1511122132744:group_by(trip_id) %>%
1511122132744:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511122132806:route39A.dir0$start_time<-as.POSIXct(route39A.dir0$start_time,format = "%H:%M:%S")
1511122132822:route39A.dir0$end_time<-as.POSIXct(route39A.dir0$end_time,format = "%H:%M:%S")
1511122132837:route39A.dir0<- route39A.dir0 %>%
1511122132837:group_by(trip_id) %>%
1511122132853:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511122132900:route39A.dir0$time_taken<-as.numeric(route39A.dir0$time_taken)
1511122144546:route39A.dir1<- route39A.dir1 %>%
1511122144562:group_by(trip_id) %>%
1511122144562:mutate(start_time=min(arrival_time),end_time=max(arrival_time))
1511122144636:route39A.dir1$start_time<-as.POSIXct(route39A.dir1$start_time,format = "%H:%M:%S")
1511122144651:route39A.dir1$end_time<-as.POSIXct(route39A.dir1$end_time,format = "%H:%M:%S")
1511122144651:route39A.dir1<- route39A.dir1 %>%
1511122144667:group_by(trip_id) %>%
1511122144667:mutate(time_taken=difftime(end_time,start_time,units="mins"))
1511122144714:route39A.dir1$time_taken<-as.numeric(route39A.dir1$time_taken)
1511122151346:ggplot()+geom_smooth(data=route39A.dir0,aes(x=start_time,y=time_taken),na.rm=T,colour="blue")+geom_smooth(data=route39A.dir1,aes(x=start_time,y=time_taken),na.rm=T,colour="red")+labs(x="Start Time",y="Total Time Taken")
